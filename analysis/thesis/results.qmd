---
execute:
  echo: false
---

# Results

```{r include=FALSE}

load("./fuel_modeling_round_3.rda")
load("./sprout_modeling.rda")
load("./regen_visualize.rda")

library(tidyverse)
library(emmeans)
library(ggdist)
library(purrr)
library(stringr)
library(tibble)
library(dplyr)
library(ggplot2)
library(tibble)
library(patchwork)
library(tinytable)
library(marginaleffects)
```

```{r}

# Given a glmmTMB model and one of "cond", "disp", or "zi", print model formula
# optionally including labels and link functions
format_model_formula <- function(mod, component, label = FALSE) {
  comp_label <- switch(
    component,
    cond = c("Conditional:", ""),
    disp = c("Dispersion:", "(log)"),
    zi = c("Hurdle:", "(logit)")
  )
  form <- format(formula(mod, component = component)) |>
    paste0(collapse = "") |>
    str_replace("\\s{2,}", " ")
  if (label) {
    return(paste(comp_label[1], form, comp_label[2]))
  }
  form
}

# given a glmmTMB model and extra component model types, print conditional and
# component model formula and link functions
print_model_info <- function(mod, components = c("disp", "zi")) {
  comp <- c("cond", components)
  fam <- paste0(
    "Family: ",
    mod$modelInfo$family$family,
    " (",
    mod$modelInfo$family$link,
    ")"
  )
  cat(fam, "\n")
  walk(comp, \(x) cat(format_model_formula(mod, x, label = TRUE), "\n"))
}

treat_labels <- c(gs = "GS", ld = "LD", ha = "HA", hd = "HD")
species_labels <- c(
  LIDE = "Tanoak",
  SESE = "Redwood",
  other = "Other",
  df = "Douglas-fir",
  rw = "Redwood",
  to = "Tanoak"
)
year_labels <- c(`1` = "Year 1", `5` = "Year 5", `10` = "Year 10")

plot_labels <- labeller(
  spp = species_labels,
  year = year_labels,
  treat = treat_labels
)

standard_model_col_names <- c(
  LCL = "lower.CL",
  UCL = "upper.CL",
  LCL = "asymp.LCL",
  UCL = "asymp.UCL",
  emmean = "response",
  emmean = "the.emmean",
  treat = "treatment",
  emmean = "estimate",
  LCL = "conf.low",
  UCL = "conf.high"
)

############### For package emmeans #################
# produce comparisons of emmeans grid and convert to a data frame to plot the
# results
emm_to_df_emm <- function(emm) {
  plot(emm, comparisons = TRUE, plotit = FALSE) |>
    as_tibble() |>
    rename(any_of(standard_model_col_names))
}


############### For package marginaleffects ###############
# convert predictions to a data frame to plot the
# results
emm_to_df <- function(emm) {
  emm |>
    as_tibble() |>
    rename(any_of(standard_model_col_names))
}
############################################################

# Common mapping for all plots, allows for specification of x-axis variable
emm_mapping <- function(x = treat, group = NULL, color = NULL) {
  aes(
    {{ x }},
    emmean,
    ymin = LCL,
    ymax = UCL,
    xend = {{ x }},
    group = {{ group }},
    color = {{ color }}
  )
}

############### For package emmeans ###############
# Common elements of all plots: comparison arrows, and CI's
draw_emm_emm <- function(data = ., position = "identity", show_legend = FALSE) {
  list(
    geom_linerange(
      color = "gray70",
      linewidth = 2.3,
      show.legend = show_legend,
      position = position
    ),
    geom_segment(
      aes(yend = rcmpl),
      color = "#4444d1",
      lineend = "butt",
      linejoin = "bevel",
      arrow = arrow(length = grid::unit(2.5, "mm")),
      linewidth = 1,
      na.rm = TRUE,
      position = position
    ),
    geom_segment(
      aes(yend = lcmpl),
      color = "#4444d1",
      lineend = "butt",
      linejoin = "bevel",
      arrow = arrow(length = grid::unit(2.5, "mm")),
      linewidth = 1,
      na.rm = TRUE,
      position = position
    ),
    geom_point(
      color = "gray95",
      shape = "circle filled",
      size = 2,
      stroke = 1.2,
      fill = "black",
      position = position
    )
  )
}

############### For package marginaleffects #################
# Common elements of all plots: comparison arrows, and CI's
draw_emm <- function(
  data = .,
  position = position_dodge(width = .7),
  show_legend = FALSE
) {
  list(
    geom_linerange(
      color = "#a0a0d1",
      linewidth = 2.3,
      show.legend = show_legend,
      position = position
    ),
    geom_point(
      color = "white",
      shape = "circle filled",
      size = 2,
      fill = "black",
      position = position
    )
  )
}

############################################################

# This is just for the last plot with combined pre and post treatments
draw_emm2 <- function(data = ., position = position_dodge(width = .7)) {
  list(
    geom_linerange(
      linewidth = 2.3,
      position = position
    ),
    geom_point(
      color = "white",
      shape = "circle filled",
      size = 2,
      fill = "black",
      position = position
    )
  )
}

# This is a wrapper function to get the emmeans object from the marginaleffects
# if a by_var is specified, it will return a nested tibble of emmeans objects
# for each level of the by_var. Otherwise, it will return a single emmeans
# object.
marginaleffects_to_emmeans <- function(
  model,
  newdata,
  x_var,
  by_var,
  contrast
) {
  # accept a list of argument to datagrid
  if (is.list(newdata) && !is.data.frame(newdata)) {
    newdata$model <- model
    newdata <- do.call(datagrid, newdata)
  }
  # handle multiple groups if by_var is specified
  if (is.null(by_var)) by <- x_var else by <- c(by_var, x_var)
  pred <- predictions(
    model,
    newdata = newdata,
    re.form = NULL,
    by = by
  )
  comp <- comparisons(
    model,
    newdata = newdata,
    variables = contrast,
    by = c(by_var, "contrast"),
    re.form = NULL
  )
  # return a single emmobj if by_var is NULL, otherwise return a nested tibble
  if (!is.null(by_var)) {
    pred <- pred |>
      group_by(!!sym(by_var)) |>
      tidyr::nest(.key = "pred")
    comp <- comp |>
      group_by(!!sym(by_var)) |>
      tidyr::nest(.key = "comp")
    left_join(by = by_var, pred, comp) |>
      rowwise() |>
      mutate(emmobj = list(get_emmobj(pred, comp, x_var)))
  } else {
    get_emmobj(pred, comp, x_var)
  }
}
```

## Regeneration composition

### Basal area

Composition of regeneration in terms of basal area per acre represented by each
species in a 4-meter radius vegetation plot was modeled as a gamma distribution
with a log link with fixed effects for treatment and species, and random
intercepts for site x species interaction. Dispersion was modeled separately as
a function of species, using a log link and the rate of zeros was modeled using
the logit link, for each species as well (@lst-regen-ba).

::: {#lst-regen-ba}
```{r}
print_model_info(mba)
```
::: 

```{r}
regen_all <- marginaleffects_to_emmeans(
  mba,
  list(spp = unique, treat = unique, site = unique),
  x_var = "treat",
  by_var = "spp",
  contrast = list(treat = "pairwise")
) |>
  mutate(emm = list(emmeans::emmeans(emmobj, ~level) |> as_tibble()))

regen_grand_means <- regen_all |>
  mutate(
    grand_mean = list(
      emmeans(emmobj, ~1) |>
        as_tibble() |>
        mutate(across(where(is.double), ~ round(.x, 2)))
    )
  ) |>
  select(spp, grand_mean)

# make data easier to work with by recursively converting nested tibbles to
# named lists. I'm using emmeans::pairs() to get the pairwise comparisons
# because it incorporates a tukey adjustment for multiple comparisons.
regen_pairs <-
  regen_all |>
  mutate(
    pairs = list(
      pairs(emmobj) |>
        as_tibble() |>
        mutate(across(where(is.double), \(x) round(x, 2))) |>
        nest(.by = contrast) |>
        deframe()
    )
  ) |>
  select(spp, pairs) |>
  deframe()

regen_mean <-
  regen_all |>
  mutate(
    emm = list(
      mutate(emm, across(where(is.double), \(x) round(x, 2))) |>
        nest(.by = level) |>
        deframe()
    )
  ) |>
  select(spp, emm) |>
  deframe()

regen_grand <- deframe(regen_grand_means)
```

According to predictions made from this model,
there was not enough evidence to confirm a statistically significant difference between treatments. 
On average, we expect about `r regen_grand$other$estimate` m^2^ ha^-1^ of basal area across treatments.
The greatest basal area of other species was in the HD treatment
which was `r abs(pluck(regen_pairs, "other", "ha - hd", "estimate"))` m^2^ ha^-1^ greater than in the HA
treatment (p = `r pluck(regen_pairs, "other", "ha - hd", "p.value")`). The GS and LD treatments were
intermediate.

On average, for Douglas-fir, we expect about `r regen_grand$df$estimate` m^2^
ha^-1^ of basal area across treatments. The greatest basal area of Douglas-fir
was in the GS treatment which was `r abs(regen_pairs$df[["gs - ha"]]$estimate)`
m^2^ ha^-1^ greater than in the HA treatment (p = `r pluck(regen_pairs, "df", "gs - ha", "p.value")`). The LD, HA, and HD treatments were all comparatively
similar.

Redwood basal area regeneration showed the greatest treatment response. Where
the GS treatment had the greatest basal area of redwood regeneration at `r regen_mean$rw$estimate` m^2^ ha^-1^, 
which was `r abs(regen_pairs$rw[["gs - hd"]]$estimate)` m^2^ ha^-1^ greater than in the HD treatment 
(p = `r pluck(regen_pairs, "rw", "gs - hd", "p.value")`). The LD and HD treatments were
intermediate.

Tanoak basal area regeneration was intermediate between that of redwood and
Douglas-fir and other species. The GS and LD treatments had similar responses, as
did the HA and HD treatments. The GS treatment resulted in `r regen_mean$to$gs$estimate` 
m^2^ ha^-1^ of tanoak basal area, which was `r regen_pairs$to[["gs - ha"]]$estimate`
m^2^ ha^-1^ greater than in the HA treatment 
(p = `r pluck(regen_pairs, "to", "gs - ha", "p.value")`).

```{r}
#| label: tbl-regen-ba-grand-means
#| tbl-cap: >
#|   Grand means (m^2^ ha^-1^) for basal area of regeneration of each species
#|   across treatments 10 years after the initiation of a multi-age redwood
#|   forest.

regen_grand_means |> unnest(grand_mean) |> tinytable::tt()
```

```{r}
#| label: fig-regen-ba
#| fig-cap: >
#|   Basal area (m^2^ ha^-1^) modeled at the vegetation plot level for four
#|   harvest treatments and four species classes (n = 16). Gray bars represent
#|   the 95% confidence interval (α = 0.05), black dots indicate the mean, and
#|   blue arrows provide a means of assessing the statistical significance of
#|   pairwise differences among treatments. Arrows are drawn so that when two
#|   arrows just meet, the p-value for that difference is 0.05 and overlapping
#|   arrows indicate a p-values greater than 0.05.

regen_all |>
  mutate(emm_df = list(emm_to_df_emm(emmobj))) |>
  select(spp, emm_df) |>
  unnest(emm_df) |>
  ggplot(emm_mapping(x = level)) +
  facet_wrap(~spp, ncol = 2, labeller = plot_labels, scales = "free") +
  draw_emm_emm() +
  scale_x_discrete(labels = toupper) +
  labs(x = "Treatment", y = expression(Basal ~ Area ~ (m^2 %.% ha^-1)))
```

```{r}
#| label: tbl-regen-ba
#| tbl-cap: >
#|   Basal area (m^2^ ha^-1^) modeled at the vegetation plot level for four
#|   harvest treatments and four species classes (n = 16).

regen_all |>
  select(spp, emm) |>
  unnest(everything()) |>
  rename(treatment = level) |>
  tinytable::tt() |>
  tinytable::format_tt(digits = 2, num_fmt = "decimal")
```

```{r}
#| label: tbl-regen-ba-compare
#| tbl-cap: >
#|   Pairwise comparisons of treatments within species. P-values are adjusted
#|   using the Tukey method for comparing families of four estimates.

regen_all |>
  mutate(
    emm = list(pairs(emmobj) |> as_tibble())
  ) |>
  select(spp, emm) |>
  unnest(emm) |>
  select(-c(z.ratio)) |>
  tinytable::tt() |>
  tinytable::format_tt(digits = 2, num_fmt = "decimal")
```

```{r}

regen_rw_to <- marginaleffects_to_emmeans(
  mba,
  list(spp = c("rw", "to"), treat = unique, site = unique),
  x_var = "spp",
  by_var = "treat",
  contrast = list(spp = c("to", "rw"))
)

# get contrasts in a format that is easy to work with: lists instead of grouped
# tibbles
rw_to_pairs <-
  regen_rw_to |>
  mutate(
    pairs = list(
      pairs(emmobj) |>
        as_tibble() |>
        mutate(across(where(is.double), \(x) round(x, 2))) |>
        nest(.by = contrast) |>
        deframe()
    )
  ) |>
  select(treat, pairs) |>
  deframe()

rw_to_mean <-
  regen_rw_to |>
  mutate(
    emm = list(
      emmeans(emmobj, ~level) |>
        as_tibble() |>
        mutate(across(where(is.double), \(x) round(x, 2))) |>
        nest(.by = level) |>
        deframe()
    )
  ) |>
  select(treat, emm) |>
  deframe()
```

@fig-regen-ba-rw-to shows the same model as @fig-regen-ba, but with an emphasis
on treatment comparisons between redwood and tanoak. 
This shows that we expect on average, 
`r abs(rw_to_pairs$gs[[1]]$estimate)` m^2^ ha^-1^ greater redwood basal area
than tanoak basal area in the GS treatment (p = `r rw_to_pairs$gs[[1]]$p.value`), 
about `r abs(rw_to_pairs$ld[[1]]$estimate)` m^2^
ha^-1^ in the LD treatment (p = `r rw_to_pairs$ld[[1]]$p.value`), and about 
`r abs(rw_to_pairs$ha[[1]]$estimate)` m^2^ ha^-1^ in the HA treatment 
(p = `r rw_to_pairs$ha[[1]]$p.value`). In the HD treatment, we expect to see slightly
higher tanoak basal area (p = `r abs(rw_to_pairs$hd[[1]]$p.value)`).

Uncertainty in average Redwood basal area across sites, indicated by the size of 95% confidence intervals, is much
greater than that of tanoak in the GS treatment, but this difference
diminishes such that GS > LD > HA > HD. In the HD treatment redwood and tanoak
average basal area uncertainty across sites is very similar. 
(@fig-regen-ba).

```{r}
#| label: fig-regen-ba-rw-to
#| fig-cap: >
#|   Basal area (m^2^ ha^-1^) modeled at the vegetation plot level for four
#|   harvest treatments and two species classes (n = 16). Gray bars represent
#|   the 95% confidence interval, black dots---the mean, and non-overlapping
#|   blue arrows signify statistical significance (α = 0.05).

regen_rw_to |>
  mutate(emm_df = list(emm_to_df_emm(emmobj))) |>
  select(treat, emm_df) |>
  unnest(emm_df) |>
  ggplot(emm_mapping(x = level)) +
  facet_wrap(~treat, ncol = 2, labeller = plot_labels, scales = "free") +
  draw_emm_emm() +
  scale_x_discrete(labels = species_labels) +
  labs(x = "Species", y = expression(Basal ~ Area ~ (m^2 %.% ha^-1)))
```

### Other species

Other species included grand fir, madrone, and California wax-myrtle, of which
there was a total of 23, 28, and 16 observations across our 16 macro plots
(comprising 64 tree density plots). Generally, each plot had between 0 and 9
observations of other species, except for one macro plot with the LD treatment,
which had 16 observations (data not shown).

### Douglas-fir counts

Counts of regenerating Douglas-fir seedlings per vegetation plot (n = 16) were
analyzed for differences between harvest treatments using a negative binomial
response with a log link, fixed effects for treatment, random effects for site
and site x treatment interaction (@lst-df-counts).

::: {#lst-df-counts}
```{r}
print_model_info(mdf, NULL)
```
:::

This model for Douglas-fir counts does not indicate any statistically
significant differences between treatments. Generally, we expect about 2
seedlings per 4-meter-radius plot, or about 413 seedlings per hectare
(@fig-df-counts).

```{r}
#| label: fig-df-counts
#| fig-cap: >
#|   Vegetation plot level counts of regenerating Douglas-fir seedlings in four
#|   harvest treatments 10 years after harvest (n = 16). Results have been
#|   scaled to stems per hectare (4-meter radium plots).

# predict(mdf_sel) |> mean() |> exp() * per_ha["corner"]

# pred <- predictions(
#   mdf,
#   newdata = datagrid(treat = unique, site = unique),
#   re.form = NULL,
#   by = "treat"
# )
#
# comp <- comparisons(
#   mdf,
#   newdata = datagrid(treat = unique, site = unique),
#   variables = list(treat = "pairwise"),
#   by = "contrast",
#   re.form = NULL
# )
#
# emmobj <- get_emmobj(pred, comp, "treat")

df_counts <- marginaleffects_to_emmeans(
  model = mdf,
  newdata = list(treat = unique, site = unique),
  x_var = "treat",
  by_var = NULL,
  contrast = list(treat = "pairwise")
)

emm_to_df_emm(df_counts) |>
  mutate(across(where(is.double), \(x) x * per_ha["corner"])) |>
  ggplot(emm_mapping(x = level)) +
  draw_emm_emm()
```

```{r}
#| label: tbl-df-counts
#| tbl-cap: >
#|   Vegetation plot level counts of regenerating Douglas-fir seedlings in four
#|   harvest treatments 10 years after harvest (n = 16). Results have been
#|   scaled to stems per hectare from 4-meter radium plots.

emmeans(df_counts, "level") |>
  as_tibble() |>
  mutate(level = as.character(level)) |>
  mutate(across(where(is.double), \(x) x * per_ha["corner"])) |>
  select(Treatment = level, !c(SE, df)) |>
  tinytable::tt(digits = 2)
```

## Sprout heights

### Height increment

The selected height increment model used a normal response distribution on the
identity link. It included treatment, growth period, species, and the
interaction of species and growth period as fixed effects. A random intercept
was included for tree (multiple observations) and macro-plot, and an another
random effect allowed the response to vary by species differently for each macro
plot. The dispersion parameter for the response was modeled (with a log link) as
a function of treatment, growth period, species and all three-way interactions
(@lst-sprout-ht-inc).  

::: {#lst-sprout-ht-inc}
```{r}
print_model_info(minc_sel, "disp")
```
:::

```{r}

ht_inc_treat <- marginaleffects_to_emmeans(
  model = minc_sel,
  newdata = NULL,
  x_var = "treat",
  by_var = "spp",
  contrast = list(treat = "pairwise")
)

# extract contrasts for each species into nested lists
rw_to_ht_pairs <-
  ht_inc_treat |>
  mutate(
    pairs = list(
      pairs(emmobj) |>
        as_tibble() |>
        mutate(across(where(is.double), \(x) round(x, 2))) |>
        nest(.by = contrast) |>
        deframe()
    )
  ) |>
  select(spp, pairs) |>
  deframe()

rw_to_ht_mean <-
  ht_inc_treat |>
  mutate(
    emm = list(
      emmeans(emmobj, ~level) |>
        as_tibble() |>
        mutate(across(where(is.double), \(x) round(x, 2))) |>
        nest(.by = level) |>
        deframe()
    )
  ) |>
  select(spp, emm) |>
  deframe()
```

The model selected based on AIC lacks a treatment x species interaction,
suggesting that there is not evidence that treatments affected species
differentially. It also lacks a treatment x year interaction. This means that
there was not enough evidence to support that treatment was related to changes
in growth rate.

The inclusion of treatment factors in the model (0.001 ≤ p < 0.03) suggests that
the levels of treatment were associated with different growth rates across
species and years. And the species x year interaction (p < 0.001) suggests
changes in growth rates are different for redwood and tanoak
(@fig-sprout-ht-inc-treat).

For tanoak, height increment was greatest in the GS treatment at 
`r rw_to_ht_mean$LIDE$GS$estimate` m yr^-1^. 
This was about `r rw_to_ht_pairs$LIDE[["GS - HA"]]$estimate` m yr^-1^ 
more than in the HA and HD treatments,
which were very similar at about `r rw_to_ht_mean$LIDE$HA` m yr^-1^.

Redwood followed a similar pattern but with more pronounced differences between
treatments. Height increment for redwood in the GS treatment was 
`r rw_to_ht_mean$SESE$GS$estimate` m yr^-1^, 
which was about `r rw_to_ht_pairs$SESE[["GS - HD"]]$estimate` m yr^-1^ greater than in the HD
treatment (p = `r rw_to_ht_pairs$SESE[["GS - HD"]]$p.value`). 
Additionally, there was evidence that the GS treatment led to greater height increment than
the LD treatment by about `r rw_to_ht_pairs$SESE[["GS - LD"]]$estimate` m yr^-1^
(p = `r rw_to_ht_pairs$SESE[["GS - LD"]]$p.value`). And the LD treatment was
higher than the HA treatment by about `r rw_to_ht_pairs$SESE[["LD - HA"]]$estimate` m yr^-1^ 
(p = `r rw_to_ht_pairs$SESE[["LD - HA"]]$p.value`).

```{r}
#| label: fig-sprout-ht-inc-treat
#| fig-cap: >
#|   Estimated marginal means for the effect of harvest treatment on redwood and
#|   tanoak sprout height increment, averaged over two growth periods, ten years
#|   after harvest. Gray bars represent confidence intervals and statistical
#|   significance (α = 0.05) is indicated by non-overlapping blue arrows.

ht_inc_treat |>
  mutate(emm_df = list(emm_to_df_emm(emmobj))) |>
  select(spp, emm_df) |>
  unnest(emm_df) |>
  ggplot(emm_mapping(x = level)) +
  facet_wrap(~spp, ncol = 2, labeller = plot_labels) +
  draw_emm_emm() +
  labs(x = "Treatment", y = expression(Height ~ Increment ~ (m %.% yr^-1)))
```

```{r}
#| label: tbl-sprout-ht-inc-treat
#| tbl-cap: >
#|  Estimated marginal means for the effect of harvest treatment on redwood and
#|  tanoak sprout height increment, averaged over two growth periods, ten years
#|  after harvest.

ht_inc_treat |>
  mutate(emm = list(emmeans::emmeans(emmobj, ~level) |> as_tibble())) |>
  select(spp, emm) |>
  unnest(everything()) |>
  rename(treatment = level) |>
  tinytable::tt(digits = 2) |>
  tinytable::format_tt(num_fmt = "decimal")
```


```{r}

ht_inc_year <- marginaleffects_to_emmeans(
  model = minc_sel,
  newdata = NULL,
  x_var = "year",
  by_var = "spp",
  contrast = list(year = "pairwise")
)

# extract contrasts for each species into nested lists
ht_inc_year_pairs <-
  ht_inc_year |>
  mutate(
    pairs = list(
      pairs(emmobj) |>
        as_tibble() |>
        mutate(across(where(is.double), \(x) round(x, 2))) |>
        nest(.by = contrast) |>
        deframe()
    )
  ) |>
  select(spp, pairs) |>
  deframe()

ht_inc_year_mean <-
  ht_inc_year |>
  mutate(
    emm = list(
      emmeans(emmobj, ~level) |>
        as_tibble() |>
        mutate(across(where(is.double), \(x) round(x, 2))) |>
        nest(.by = level) |>
        deframe()
    )
  ) |>
  select(spp, emm) |>
  deframe()

# ht_inc_year_mean$LIDE$`5`$estimate
# ht_inc_year_pairs$SESE$`level5 - level10`$estimate |> names()
```

Redwood growth slowed from 0.80 to 0.67 m yr^-1^ in the second period and tanoak
slowed from 0.39  to 0.34 m yr^-1^.

Redwood grew faster than tanoak, but slowed down more relative to it in the
second period. Height increment for redwood was 0.42 m yr^-1^ greater than
tanoak in the first period and 0.33 m yr^-1^ greater than tanoak in the second
period (@fig-sprout-ht-inc-year).


```{r}
#| label: fig-sprout-ht-inc-year
#| fig-cap: >
#|   Estimated marginal means for the effect of growth period on redwood and
#|   tanoak sprout height increment, averaged over four harvest treatments, from
#|   years 1 to 5, and years 5 to 10 after harvest, plotted alongside actual
#|   data. Gray bars represent confidence intervals and statistical significance
#|   (α = 0.05) is indicated by non-overlapping blue arrows.

ht_inc_year |>
  mutate(emm_df = list(emm_to_df_emm(emmobj))) |>
  select(spp, emm_df) |>
  unnest(emm_df) |>
  ggplot(emm_mapping(x = level)) +
  draw_emm_emm(position = position_nudge(x = -0.15)) +
  geom_dots(
    data = dinc,
    mapping = aes(x = year, y = ht_inc, xend = NULL, ymin = NULL, ymax = NULL),
    alpha = 0.4
  ) +
  facet_wrap(~spp, labeller = plot_labels) +
  scale_x_discrete(labels = c(`5` = "1 - 5", `10` = "5 - 10")) +
  labs(
    x = "Growth Period (years)",
    y = expression(Height ~ increment ~ (m %.% year^-1))
  )
```

```{r}
#| label: tbl-sprout-ht-inc-year
#| tbl-cap: >
#|   Estimated marginal means for the effect of growth period on redwood and
#|   tanoak sprout height increment, averaged over four harvest treatments, from
#|   years 1 to 5, and years 5 to 10 after harvest.

ht_inc_year |>
  mutate(emm = list(emmeans::emmeans(emmobj, ~level) |> as_tibble())) |>
  select(spp, emm) |>
  unnest(everything()) |>
  rename(year = level) |>
  tinytable::tt(digits = 2) |>
  tinytable::format_tt(num_fmt = "decimal")
```

### Height at year 10

Sprout heights at year 10 were modeled with a normal response and a log link.
The best model included species and treatment, but no interactions in the fixed
effects. This suggests that treatments do not affect species differentially in
terms of the mean response (height at year 10). It also included a model for
dispersion (log link) with predictors species, treatment, and their interaction
(@lst-sprout-ht-yr-10).

::: {#lst-sprout-ht-yr-10}
```{r}
print_model_info(ht10_sel, "disp")
```
:::

```{r}
ht_year_10 <- marginaleffects_to_emmeans(
  model = ht10_sel,
  newdata = list(spp = unique, treat = unique, plot = unique),
  x_var = "treat",
  by_var = "spp",
  contrast = list(treat = "pairwise")
)

# extract contrasts for each species into nested lists
ht_year_10_pairs <-
  ht_year_10 |>
  mutate(
    pairs = list(
      pairs(emmobj) |>
        as_tibble() |>
        mutate(across(where(is.double), \(x) round(x, 2))) |>
        nest(.by = contrast) |>
        deframe()
    )
  ) |>
  select(spp, pairs) |>
  deframe()

ht_year_10_mean <-
  ht_year_10 |>
  mutate(
    emm = list(
      emmeans(emmobj, ~level) |>
        as_tibble() |>
        mutate(across(where(is.double), \(x) round(x, 2))) |>
        nest(.by = level) |>
        deframe()
    )
  ) |>
  select(spp, emm) |>
  deframe()
```

Because the best model did not contain a species x treatment interaction for the
mean response, treatment comparisons are parallel between species. The GS
treatment resulted in greater heights in year 10 than the other treatments
(0.001 < p < 0.05). Predicted mean height for redwood ranged from 
`r ht_year_10_mean$SESE$GS$estimate` m in the GS treatment to 
`r ht_year_10_mean$SESE$HD$estimate` m in the HD treatment. For tanoak, predicted mean height
ranged from `r ht_year_10_mean$LIDE$GS$estimate` in the GS treatment to 
`r ht_year_10_mean$LIDE$HD$estimate` in the HD treatment. Predicted mean
heights followed the pattern GS > LD > HA > HD (@fig-sprout-ht-yr-10).

```{r}
#| label: fig-sprout-ht-yr-10
#| fig-cap: >
#|   Predicted mean height and 95% confidence intervals (gray bars) for redwood
#|   and tanoak stump sprouts 10 years after harvest using four different
#|   harvest treatments. Non-overlapping blue arrows indicate statistically
#|   significant differences between treatments within a species.

ht_year_10 |>
  mutate(emm_df = list(emm_to_df_emm(emmobj))) |>
  select(spp, emm_df) |>
  unnest(emm_df) |>
  ggplot(emm_mapping(x = level)) +
  draw_emm_emm(position = position_nudge(x = -0.15)) +
  geom_dots(
    data = filter(dht, year == 10),
    aes(x = treat, y = ht),
    alpha = 0.4,
    inherit.aes = FALSE
  ) +
  facet_wrap(~spp, labeller = plot_labels) +
  labs(x = "Treatment", y = "Height (m)")
```

```{r}
#| label: tbl-ht-year-10
#| tbl-cap: >
#|   Height (m) of measured redwood and tanaok sprouts 10 years after harvest
#|   treatments with four different over-story densities.

ht_year_10 |>
  mutate(emm = list(emmeans::emmeans(emmobj, ~level) |> as_tibble())) |>
  select(spp, emm) |>
  unnest(everything()) |>
  rename(year = level) |>
  tinytable::tt(digits = 2) |>
  tinytable::format_tt(num_fmt = "decimal")
```

```{r}
#| label: tbl-ht-year-10-compare
#| tbl-cap: >
#|  Pairwise comparisons of treatments within species for height (m) of
#|  measured redwood and tanoak sprouts 10 years after harvest.

ht_year_10 |>
  mutate(
    pairs = list(pairs(emmobj) |> as_tibble())
  ) |>
  select(spp, pairs) |>
  unnest(pairs) |>
  select(-c(z.ratio)) |>
  tinytable::tt() |>
  tinytable::format_tt(digits = 2, num_fmt = "decimal")
```

## Fuels

### Pre-pct

Gamma distributed, linear multi-level models, with a log link were used for all
six fuel class responses. Random intercepts were specified for three levels of
nesting, representing sites, treatment blocks, and transect corners. All models
except for the duff & litter model included a hurdle model to account for
zero, which was modeled with a logit link. For the 10-hr fuel model, the hurdle
portion was modeled as a function of treatment, and for the others, it was
modeled as a single rate for all observations. The 10-hr fuel model also
included a dispersion model, which was modeled with a log link, using treatment
as a predictor (@tbl-fuel-pre-pct-mod).

```{r}
#| label: tbl-fuel-pre-pct-mod
#| tbl-cap: Model specifications for six fuel classes before pct.

fuel_tmb$pre |>
  transmute(
    class = fuel_class_labels[as.character(class)],
    Family = mod$modelInfo$family$family,
    Link = mod$modelInfo$family$link,
    Conditional = format_model_formula(mod, "cond"),
    "Dispersion (log)" = format_model_formula(mod, "disp"),
    "Hurdle (logit)" = format_model_formula(mod, "zi")
  ) |>
  tinytable::tt()
```

```{r}

# Newdata in this case is repeating all combinations of random effects *found in
# the data* for each level of treatment. This should be the same approach as
# above but arrived at differently because above we have implicit grouping and
# nested variable coding, where as here we have explicit grouping, so when
# creating the we need to be explicit about the grouping.
fuel_tmb$pre <- mutate(
  fuel_tmb$pre,
  newdata = list(tidyr::expand(data, treatment, nesting(site, block, corner))),
  emmobj = list(marginaleffects_to_emmeans(
    model = mod,
    newdata = newdata,
    x_var = "treatment",
    by_var = NULL,
    contrast = list(treatment = "pairwise")
  ))
)

# extract contrasts for each species into nested lists for inline use
fuel_pre_compare <-
  fuel_tmb$pre |>
  mutate(
    pairs = list(
      pairs(emmobj) |>
        as_tibble() |>
        mutate(across(where(is.double), \(x) round(x, 2))) |>
        nest(.by = contrast) |>
        deframe()
    )
  ) |>
  select(class, pairs) |>
  deframe()

fuel_pre_means <-
  fuel_tmb$pre |>
  mutate(
    emm = list(
      emmeans(emmobj, ~level) |>
        as_tibble() |>
        mutate(across(where(is.double), \(x) round(x, 2))) |>
        nest(.by = level) |>
        deframe()
    )
  ) |>
  select(class, emm) |>
  deframe()

# fuel_pre_compare |> names()
# # [1] "dufflitter" "onehr"      "tenhr"      "hundhr"     "thoushr"    "veg"
# fuel_pre_compare$dufflitter |> names()
# # [1] "gs - ld" "gs - ha" "gs - hd" "ld - ha" "ld - hd" "ha - hd"
# fuel_pre_means$dufflitter$gs |> names()
# # [1] "estimate"  "SE"        "df"        "asymp.LCL" "asymp.UCL"

# pvalue for the difference between HD and GS for duff & litter
# fuel_pre_compare$onehr[["gs - ld"]]$p.value
```
TODO: I'm here

For Duff & Litter, the largest difference was between the HD and HA treatments.
The HD treatment had about `r fuel_pre_means$dufflitter$hd$estimate` Mg ha^-1^,
and was about `r fuel_pre_compare$dufflitter[["hd - ha"]]$estimate` Mg ha^-1^
greater than the HA treatment (p = `r fuel_pre_compare$dufflitter[["ha - hd"]]$p.value`).
Generally, all treatments were similar, with estimated loading of around 
`r round(mean(map_dbl(fuel_pre_means$dufflitter, ~pluck(.x, "estimate"))), 0)` Mg ha^-1^.

One-hour fuels were highest in the HA treatment, with an expected value of 
`r fuel_pre_means$onehr$ha$estimate` Mg ha^-1^, which was about `r
fuel_pre_compare$onehr[["ha - gs"]]$estimate` Mg ha^-1^ greater than in the GS
treatment (p = `r fuel_pre_compare$onehr[["ha - gs"]]$p.value`). One-hour fuels
in the LD and HD treatments were intermediate but the LD was more similar to the
GS and the HD was more similar to the HA treatment.

Ten, hundred and thousand-hour fuels were statistically,
very similar across treatments (p = 0.7 — p = 1). Treatment averages had 
maximum differences of around 1, 3, and 10 Mg ha^-1^ for ten, hundred, and thousand-hour fuels,
respectively. 

Vegetative fuel loading was greatest in the GS treatment, with an
expected value of `r fuel_pre_means$veg$gs$estimate` Mg ha^-1^, which was about  
`r fuel_pre_compare$veg[["gs - ha"]]$estimate` Mg ha^-1^ greater than in the HA
treatment (p = `r fuel_pre_compare$veg[["gs - ha"]]$p.value`) and LD and HD
treatments were intermediate. 
(@fig-fuel-pre-pct).

```{r}
#| label: fig-fuel-pre-pct
#| fig-width: 8
#| fig-cap: >
#|   Estimated marginal means (black dots) confidence intervals (gray bands) and
#|   comparisons (blue arrows) of fuel loading across four treatments for six
#|   different fuel-class models. Non-overlapping blue arrows indicates
#|   statistical significance at the α = 0.05 level.

fuel_tmb$pre |>
  mutate(class = fuel_class_labels[as.character(class)]) |>
  group_map(function(x, ...) {
    emm_to_df_emm(x$emmobj[[1]]) |>
      ggplot(emm_mapping(x = level)) +
      draw_emm_emm() +
      scale_x_discrete(labels = toupper) +
      labs(
        title = x$class,
        y = expression(Load ~ (Mg %.% ha^-1)),
        x = "Treatment"
      )
  }) |>
  patchwork::wrap_plots() +
  patchwork::plot_layout(axes = "collect")

# inspect means and differences for vegetation fuels
# fuel_tmb$pre$pairs[[6]]
# fuel_tmb$pre$emmeans[[6]]
# fuel_tmb$pre |> filter(class == "dufflitter") |> pluck("emmeans", 1)
```

```{r}
#| label: tbl-fuel-pre-pct-means
#| tbl-cap: >
#|  Estimated marginal means (Mg ha^-1^) for six fuel classes and four overstory
#|  treatments before pre-commercial thinning (pct).

fuel_tmb$pre |>
  mutate(emmeans = list(emmeans::emmeans(emmobj, ~level) |> as_tibble())) |>
  select(class, emmeans) |>
  unnest(emmeans) |>
  rename(treatment = level) |>
  tinytable::tt(digits = 2, num_fmt = "decimal")
```

```{r}
#| label: tbl-fuel-pre-pct-compare
#| tbl-cap: >
#|   Pairwise comparisons of treatments for six fuel classes before pct.
#|   P-values are adjusted for multiple comparisons using the Tukey method.

fuel_tmb$pre |>
  mutate(pairs = list(pairs(emmobj) |> as_tibble())) |>
  select(class, pairs) |>
  unnest(pairs) |>
  select(-c(z.ratio)) |>
  arrange(p.value) |>
  tinytable::tt(digits = 2, num_fmt = "decimal")
```

```{r}
#| label: tbl-fuel-pre-pct-grand-means
#| tbl-cap: >
#|   Grand means (Mg ha^-1^) for six fuel classes before pct.

fuel_tmb$pre |>
  mutate(grand_mean = as_tibble(emmeans(emmobj, ~1))) |>
  select(c(class, grand_mean)) |>
  unnest(grand_mean) |>
  tinytable::tt(digits = 2, num_fmt = "decimal")
```

### Post-pct

The response for all six, post-pct fuel classes were modeled with a gamma
distribution and a log link, and included the same multi-level random effects as
for the pre-pct models. Dispersion models with treatment as the only predictor
were included for 1-hr and 100-hr fuel classes. All models included a hurdle
portion to model zeros using a logit link. For 100-hr fuels, the hurdle portion included
treatment and site as predictors. For the rest, a constant rate of zeros for all
observations was used (@tbl-fuel-post-pct).

```{r}
#| label: tbl-fuel-post-pct
#| tbl-cap: Model specifications for six fuel classes after pct.
fuel_tmb$post |>
  transmute(
    class = fuel_class_labels[as.character(class)],
    Family = mod$modelInfo$family$family,
    Link = mod$modelInfo$family$link,
    Conditional = format_model_formula(mod, "cond"),
    "Dispersion (log)" = format_model_formula(mod, "disp"),
    "Hurdle (logit)" = format_model_formula(mod, "zi")
  ) |>
  tinytable::tt()
```

```{r}
fuel_tmb$post <- mutate(
  fuel_tmb$post,
  newdata = list(tidyr::expand(data, treatment, nesting(site, block, corner))),
  emmobj = list(marginaleffects_to_emmeans(
    model = mod,
    newdata = newdata,
    x_var = "treatment",
    by_var = NULL,
    contrast = list(treatment = "pairwise")
  )),
  emmeans = list(emmeans::emmeans(emmobj, ~level) |> as_tibble()),
  pairs = list(pairs(emmobj) |> as_tibble())
)

# extract contrasts for each species into nested lists for inline use
fuel_post_compare <-
  fuel_tmb$post |>
  mutate(
    pairs = list(
      pairs(emmobj) |>
        as_tibble() |>
        mutate(across(where(is.double), \(x) round(x, 2))) |>
        nest(.by = contrast) |>
        deframe()
    )
  ) |>
  select(class, pairs) |>
  deframe()

fuel_post_means <-
  fuel_tmb$post |>
  mutate(
    emm = list(
      emmeans(emmobj, ~level) |>
        as_tibble() |>
        mutate(across(where(is.double), \(x) round(x, 2))) |>
        nest(.by = level) |>
        deframe()
    )
  ) |>
  select(class, emm) |>
  deframe()

# [1] "onehr"    "tenhr"    "hundhr"   "thoushr"  "veg"      "veg_diff"
# [1] "gs - ld" "gs - ha" "gs - hd" "ld - ha" "ld - hd" "ha - hd"
# [1] "estimate"  "SE"        "df"        "asymp.LCL" "asymp.UCL"
```

Pre-commercial thinning resulted in greater stratification of treatments
(@fig-fuel-post-pct). One-hour fuels for most treatments were around 
`r round(mean(map_dbl(discard_at(fuel_post_means$onehr, "ha"), ~pluck(.x, "estimate"))), 1)`
Mg ha^-1^, but the HA treatment was lower than these at about
`r fuel_post_means$onehr$ha$estimate` Mg ha^-1^ 
(p <= `r fuel_post_compare$onehr[["ha - gs"]]$p.value`).

The GS treatment had the greatest 10-hr fuel loading with 
`r fuel_post_means$tenhr$gs$estimate` Mg ha^-1^, which was
greater than the LD, HA, and HD treatments by  
`r fuel_post_compare$tenhr[["gs - ld"]]$estimate`,
`r fuel_post_compare$tenhr[["gs - ha"]]$estimate`, and
`r fuel_post_compare$tenhr[["gs - hd"]]$estimate` Mg ha^-1^, respectively (
p = `r fuel_post_compare$tenhr[["gs - ld"]]$p.value`, 
p  < 0.001, and
p = `r fuel_post_compare$tenhr[["gs - hd"]]$p.value`).
The LD treatment also had about `r fuel_post_compare$tenhr[["ld - hd"]]$estimate` 
Mg ha^-1^ more 10-hr fuels that the HD treatment 
(p = `r fuel_post_compare$tenhr[["ld - hd"]]p.value`). 

Hundred-hour fuels followed a similar trend as the 10-hr fuels. They were greatest in the GS
treatment, with an average of about `r fuel_post_means$hundhr$gs$estimate` Mg ha^-1^, 
which was about `r fuel_post_compare$hundhr[["gs - hd"]]$estimate` Mg ha^-1^ 
greater than the HD treatment (p = `r fuel_post_compare$hundhr[["gs - hd"]]$p.value`).

Thousand-hour fuels
were greatest in the HD treatment, with an average of about `r
fuel_post_means$thoushr$hd$estimate` Mg ha^-1^, which was about
`r abs(fuel_post_compare$thoushr[["ld - hd"]]$estimate)` Mg ha^-1^ greater than the
LD and HA treatments (p <= `r fuel_post_compare$thoushr[["ha - hd"]]$p.value`).
The GS treatment was intermediate.

Fuel loading for live vegetation was similar across treatments at around `r round(mean(map_dbl(fuel_post_means$onehr, ~pluck(.x, "estimate"))), 1)`  Mg
ha^-1^.  

The difference in vegetation loading before and after PCT was greatest in the GS treatment at
about `r fuel_post_means$veg_diff$gs$estimate` Mg ha^-1^, which was 
greater than the HA and HD treatments by about 
`r round(mean(map_dbl(keep_at(fuel_post_compare$veg_diff, c("gs - ha", "gs - hd")), "estimate")), 0)` 
Mg ha^-1^ (p = `r fuel_post_compare$veg_diff[["gs - hd"]]$p.value` and 
p = `r fuel_post_compare$veg_diff[["gs - ha"]]$p.value`, respectively). 
The LD treatment was intermediate.

```{r}
#| label: fig-fuel-post-pct
#| fig-width: 8
#| fig-cap: >
#|   Estimated marginal means (black dots) confidence intervals (gray bars) and
#|   statistical comparisons (blue arrows) of fuel loading across four
#|   treatments for six different fuel-class models. Non-overlapping blue arrows
#|   indicates statistical significance at the α = 0.05 level. Vegetation
#|   difference equals the transect level difference in vegetation load in the
#|   pre and post-pct conditions. This represents slash fuels recruited to the
#|   forest floor following the pre-commercial thinning.

fuel_tmb$post |>
  mutate(class = fuel_class_labels[as.character(class)]) |>
  group_map(function(x, ...) {
    emm_to_df_emm(x$emmobj[[1]]) |>
      ggplot(emm_mapping(x = level)) +
      draw_emm_emm() +
      scale_x_discrete(labels = toupper) +
      labs(
        title = x$class,
        y = expression(Load ~ (Mg %.% ha^-1)),
        x = "Treatment"
      )
  }) |>
  patchwork::wrap_plots() +
  patchwork::plot_layout(axes = "collect")
```

```{r}
#| label: tbl-fuel-post-pct-means
#| tbl-cap: >
#|  Estimated marginal means (Mg ha^-1^) for six fuel classes and four overstory
#|  treatments before pct

fuel_tmb$post |>
  mutate(emmeans = list(emmeans::emmeans(emmobj, ~level) |> as_tibble())) |>
  select(class, emmeans) |>
  unnest(emmeans) |>
  rename(treatment = level) |>
  tinytable::tt(digits = 2, num_fmt = "decimal")
```


```{r}
#| label: tbl-fuel-post-pct-compare
#| tbl-cap: >
#|   Pairwise comparisons of treatments for six fuel classes after pct. P-values
#|   are adjusted for multiple comparisons using the Tukey method. Sorted
#|   ascending by p-value.

fuel_tmb$post |>
  mutate(pairs = list(pairs(emmobj) |> as_tibble())) |>
  select(class, pairs) |>
  unnest(pairs) |>
  select(-c(z.ratio)) |>
  arrange(p.value) |>
  tinytable::tt(digits = 2) |>
  tinytable::format_tt(num_fmt = "significant_cell")
```

```{r}
#| label: tbl-fuel-post-pct-grand-means
#| tbl-cap: >
#|   Grand means (Mg ha^-1^) for six fuel classes after pct.

fuel_tmb$post |>
  mutate(grand_mean = as_tibble(emmeans(emmobj, ~1))) |>
  select(c(class, grand_mean)) |>
  unnest(grand_mean) |>
  tinytable::tt(digits = 2, num_fmt = "decimal")
```

### Pre-post commercial thinning comparison

Pre-commercial thinning led to a small increase in average 100-hr fuel loading,
only for the GS treatment, increased 10-hr fuels in the GS and LD treatments,
and increased 1-hr fuels for all but the HA treatment
(@fig-fuel-pct-comparison), although these results are not statistically
comparable, due to slightly different model structures.

```{r}
#| label: fig-fuel-pct-comparison
#| fig-width: 8
#| fig-cap: >
#|   Estimated marginal means (black dots) and confidence intervals (colored
#|   bars) of fuel loading across four treatments and five different fuel
#|   classes, before and after PCT. Pre- and Post PCT models within a treatment
#|   are from similar, but not necessarily identical models.

# pre and post together
fuel_tmb$pre |>
  # only use fuel classes that are the same between PCT phase
  filter(class %in% c("onehr", "tenhr", "hundhr", "thoushr", "veg")) |>
  # mutate(class = fuel_class_labels[as.character(class)]) |>
  group_map(function(x, ...) {
    # for each row in pre-treatment, get the pre-treatment data and the
    # corresponding data for post-treatment
    bind_rows(
      pre = emm_to_df_emm(x$emmobj[[1]]),
      post = emm_to_df(
        pluck(filter(fuel_tmb$post, class == x$class), "emmobj", 1)
      ),
      .id = "phase"
    ) |>
      ggplot(emm_mapping(
        x = level,
        color = factor(phase, levels = c("pre", "post")),
        group = factor(phase, levels = c("pre", "post"))
      )) +
      draw_emm2() +
      scale_x_discrete(labels = toupper) +
      scale_color_manual(
        labels = c("Pre-PCT", "Post-PCT"),
        values = c("#d17844", "#4444d1")
      ) +
      labs(
        title = fuel_class_labels[as.character(x$class)],
        y = expression(Load ~ (Mg %.% ha^-1)),
        x = "Treatment",
        color = "Phase"
      )
  }) |>
  patchwork::wrap_plots() +
  guide_area() +
  patchwork::plot_layout(
    axes = "collect_y",
    axis_title = "collect",
    guides = "collect"
  )
```


