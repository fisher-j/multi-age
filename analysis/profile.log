SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax\yaml.vim
Sourced 6 times
Total time:   0.007939
 Self time:   0.007117

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:         YAML (YAML Ain't Markup Language) 1.2
                            " Maintainer:       Nikolai Pavlov <zyx.vim@gmail.com>
                            " First author:     Nikolai Weibull <now@bitwi.se>
                            " Latest Revision:  2024-04-01
                            
    6              0.000042 if exists('b:current_syntax')
                                finish
    6              0.000005 endif
                            
    6              0.000025 let s:cpo_save = &cpo
    6   0.000086   0.000044 set cpo&vim
                            
                            " Choose the schema to use
                            " TODO: Validate schema
    6              0.000033 if !exists('b:yaml_schema')
    1              0.000002     if exists('g:yaml_schema')
                                    let b:yaml_schema = g:yaml_schema
    1              0.000001     else
    1              0.000002         let b:yaml_schema = 'core'
    1              0.000001     endif
    6              0.000004 endif
                            
    6              0.000011 let s:ns_char = '\%([\n\r\uFEFF \t]\@!\p\)'
    6              0.000011 let s:ns_word_char = '[[:alnum:]_\-]'
    6              0.000023 let s:ns_uri_char  = '\%(%\x\x\|'.s:ns_word_char.'\|[#/;?:@&=+$,.!~*''()[\]]\)'
    6              0.000018 let s:ns_tag_char  = '\%(%\x\x\|'.s:ns_word_char.'\|[#/;?:@&=+$.~*''()]\)'
    6              0.000010 let s:c_indicator      = '[\-?:,[\]{}#&*!|>''"%@`]'
    6              0.000009 let s:c_flow_indicator = '[,[\]{}]'
                            
    6              0.000099 let s:ns_anchor_char = substitute(s:ns_char, '\v\C[\zs', '\=s:c_flow_indicator[1:-2]', '')
    6              0.000047 let s:ns_char_without_c_indicator = substitute(s:ns_char, '\v\C[\zs', '\=s:c_indicator[1:-2]', '')
                            
    6              0.000011 let s:_collection = '[^\@!\(\%(\\\.\|\[^\\\]]\)\+\)]'
    6              0.000011 let s:_neg_collection = '[^\(\%(\\\.\|\[^\\\]]\)\+\)]'
    6              0.000024 function s:SimplifyToAssumeAllPrintable(p)
                                return substitute(a:p, '\V\C\\%('.s:_collection.'\\@!\\p\\)', '[^\1]', '')
                            endfunction
    6   0.000246   0.000061 let s:ns_char = s:SimplifyToAssumeAllPrintable(s:ns_char)
    6   0.000150   0.000068 let s:ns_anchor_char = s:SimplifyToAssumeAllPrintable(s:ns_anchor_char)
    6   0.000135   0.000048 let s:ns_char_without_c_indicator = s:SimplifyToAssumeAllPrintable(s:ns_char_without_c_indicator)
                            
    6              0.000017 function s:SimplifyAdjacentCollections(p)
                                return substitute(a:p, '\V\C'.s:_collection.'\\|'.s:_collection, '[\1\2]', 'g')
                            endfunction
    6   0.000205   0.000047 let s:ns_uri_char = s:SimplifyAdjacentCollections(s:ns_uri_char)
    6   0.000153   0.000055 let s:ns_tag_char = s:SimplifyAdjacentCollections(s:ns_tag_char)
                            
    6              0.000019 let s:c_verbatim_tag = '!<'.s:ns_uri_char.'\+>'
    6              0.000017 let s:c_named_tag_handle     = '!'.s:ns_word_char.'\+!'
    6              0.000014 let s:c_secondary_tag_handle = '!!'
    6              0.000010 let s:c_primary_tag_handle   = '!'
    6              0.000039 let s:c_tag_handle = '\%('.s:c_named_tag_handle.
                                        \         '\|'.s:c_secondary_tag_handle.
                                        \         '\|'.s:c_primary_tag_handle.'\)'
    6              0.000018 let s:c_ns_shorthand_tag = s:c_tag_handle . s:ns_tag_char.'\+'
    6              0.000009 let s:c_non_specific_tag = '!'
    6              0.000043 let s:c_ns_tag_property = s:c_verbatim_tag.
                                        \        '\|'.s:c_ns_shorthand_tag.
                                        \        '\|'.s:c_non_specific_tag
                            
    6              0.000014 let s:c_ns_anchor_name = s:ns_anchor_char.'\+'
    6              0.000015 let s:c_ns_anchor_property =  '&'.s:c_ns_anchor_name
    6              0.000015 let s:c_ns_alias_node      = '\*'.s:c_ns_anchor_name
    6              0.000026 let s:c_ns_properties      = '\%(\%('.s:c_ns_tag_property.'\|'.s:c_ns_anchor_property.'\)\s\+\)\+'
                            
    6              0.000015 let s:ns_directive_name = s:ns_char.'\+'
                            
    6              0.000020 let s:ns_local_tag_prefix  = '!'.s:ns_uri_char.'*'
    6              0.000019 let s:ns_global_tag_prefix = s:ns_tag_char.s:ns_uri_char.'*'
    6              0.000026 let s:ns_tag_prefix = s:ns_local_tag_prefix.
                                        \    '\|'.s:ns_global_tag_prefix
                            
    6              0.000011 let s:ns_plain_safe_out = s:ns_char
    6              0.000022 let s:ns_plain_safe_in  = '\%('.s:c_flow_indicator.'\@!'.s:ns_char.'\)'
                            
    6              0.000154 let s:ns_plain_safe_in = substitute(s:ns_plain_safe_in, '\V\C\\%('.s:_collection.'\\@!'.s:_neg_collection.'\\)', '[^\1\2]', '')
    6              0.000102 let s:ns_plain_safe_in_without_colhash = substitute(s:ns_plain_safe_in, '\V\C'.s:_neg_collection, '[^\1:#]', '')
    6              0.000069 let s:ns_plain_safe_out_without_colhash = substitute(s:ns_plain_safe_out, '\V\C'.s:_neg_collection, '[^\1:#]', '')
                            
    6              0.000027 let s:ns_plain_first_in  = '\%('.s:ns_char_without_c_indicator.'\|[?:\-]\%('.s:ns_plain_safe_in.'\)\@=\)'
    6              0.000023 let s:ns_plain_first_out = '\%('.s:ns_char_without_c_indicator.'\|[?:\-]\%('.s:ns_plain_safe_out.'\)\@=\)'
                            
    6              0.000031 let s:ns_plain_char_in  = '\%('.s:ns_char.'#\|:'.s:ns_plain_safe_in.'\|'.s:ns_plain_safe_in_without_colhash.'\)'
    6              0.000027 let s:ns_plain_char_out = '\%('.s:ns_char.'#\|:'.s:ns_plain_safe_out.'\|'.s:ns_plain_safe_out_without_colhash.'\)'
                            
    6              0.000020 let s:ns_plain_out = s:ns_plain_first_out . s:ns_plain_char_out.'*'
    6              0.000017 let s:ns_plain_in  = s:ns_plain_first_in  . s:ns_plain_char_in.'*'
                            
                            
    6              0.000027 syn keyword yamlTodo            contained TODO FIXME XXX NOTE
                            
    6              0.000049 syn region  yamlComment         display oneline start='\%\(^\|\s\)#' end='$'
                                        \                   contains=yamlTodo
                            
    6              0.000137 execute 'syn region yamlDirective oneline start='.string('^\ze%'.s:ns_directive_name.'\s\+').' '.
                                        \                            'end="$" '.
                                        \                            'contains=yamlTAGDirective,'.
                                        \                                     'yamlYAMLDirective,'.
                                        \                                     'yamlReservedDirective '.
                                        \                            'keepend'
                            
    6              0.000026 syn match yamlTAGDirective /%TAG\ze\s/ contained nextgroup=yamlTagHandle skipwhite
    6              0.000062 execute 'syn match yamlTagHandle' string(s:c_tag_handle)  'contained nextgroup=yamlTagPrefix skipwhite'
    6              0.000100 execute 'syn match yamlTagPrefix' string(s:ns_tag_prefix) 'contained nextgroup=yamlComment skipwhite'
                            
    6              0.000030 syn match yamlYAMLDirective /%YAML\ze\s/ contained nextgroup=yamlYAMLVersion skipwhite
    6              0.000020 syn match yamlYAMLVersion   /\d\+\.\d\+/ contained nextgroup=yamlComment skipwhite
                            
    6              0.000071 execute 'syn match yamlReservedDirective contained nextgroup=yamlComment '.
                                        \string('%\%(\%(TAG\|YAML\)\s\)\@!'.s:ns_directive_name)
                            
    6              0.000056 syn region yamlFlowString matchgroup=yamlFlowStringDelimiter start='"' skip='\\"' end='"'
                                        \ contains=yamlEscape contained nextgroup=yamlFlowMappingDelimiter,yamlComment skipwhite
    6              0.000050 syn region yamlFlowString matchgroup=yamlFlowStringDelimiter start="'" skip="''"  end="'"
                                        \ contains=yamlSingleEscape contained nextgroup=yamlFlowMappingDelimiter,yamlComment skipwhite
    6              0.000055 syn match  yamlEscape contained '\\\%([\\"abefnrtv\^0_ NLP\n]\|x\x\x\|u\x\{4}\|U\x\{8}\)'
    6              0.000012 syn match  yamlSingleEscape contained "''"
                            
    6              0.000029 syn cluster yamlConstant contains=yamlBool,yamlNull
                            
    6              0.000030 syn cluster yamlFlowNode contains=yamlFlowString,yamlFlowMapping,yamlFlowCollection
    6              0.000028 syn cluster yamlFlowNode      add=yamlFlowMappingKey,yamlFlowMappingKeyStart,yamlFlowMappingMerge
    6              0.000031 syn cluster yamlFlowNode      add=@yamlConstant,yamlPlainScalar,yamlFloat,yamlComment
    6              0.000030 syn cluster yamlFlowNode      add=yamlTimestamp,yamlInteger,yamlAlias,yamlFlowNodeProperties
    6              0.000043 syn region yamlFlowMapping    matchgroup=yamlFlowIndicator start='{\@<!{{\@!' end='}' contains=@yamlFlowNode
    6              0.000027 syn region yamlFlowCollection matchgroup=yamlFlowIndicator start='\[' end='\]' contains=@yamlFlowNode
                            
    6              0.000089 execute 'syn match yamlPlainScalar /'.s:ns_plain_out.'/'
    6              0.000079 execute 'syn match yamlPlainScalar contained /'.s:ns_plain_in.'/'
                            
    6              0.000206 execute 'syn match yamlFlowMappingKey /'.s:ns_plain_in.'\%(\s\+'.s:ns_plain_in.'\)*\ze\s*:/ contained '.
                                        \'nextgroup=yamlFlowMappingDelimiter skipwhite'
    6              0.000025 syn match yamlFlowMappingKeyStart      /?/ contained nextgroup=@yamlFlowNode skipwhite
    6              0.000029 syn match yamlFlowMappingMerge /<<\ze\s*:/ contained nextgroup=yamlFlowMappingDelimiter skipwhite
    6              0.000023 syn match yamlFlowMappingDelimiter     /:/ contained nextgroup=@yamlFlowNode skipwhite
    6              0.000487 execute 'syn match yamlFlowNodeProperties' string(s:c_ns_properties)
                                        \ 'contained contains=yamlNodeTag,yamlAnchor nextgroup=@yamlFlowNode skipwhite'
                            
    6              0.000166 execute 'syn match yamlBlockMappingKey /^\s*\zs'.s:ns_plain_out.'\%(\s\+'.s:ns_plain_out.'\)*\ze\s*:\%(\s\|$\)/ '.
                                        \'nextgroup=yamlBlockMappingDelimiter skipwhite'
    6              0.000155 execute 'syn match yamlBlockMappingKey        /'.s:ns_plain_out.'\%(\s\+'.s:ns_plain_out.'\)*\ze\s*:\%(\s\|$\)/ contained '.
                                        \'nextgroup=yamlBlockMappingDelimiter skipwhite'
    6              0.000081 syn match yamlBlockMappingKeyString /^\s*\zs\%("\%([^"]\|\\"\)*"\|'\%([^']\|''\)*'\)\ze\s*:\%(\s\|$\)/
                                        \ contains=yamlFlowString nextgroup=yamlBlockMappingDelimiter skipwhite
    6              0.000056 syn match yamlBlockMappingKeyString        /\%("\%([^"]\|\\"\)*"\|'\%([^']\|''\)*'\)\ze\s*:\%(\s\|$\)/ contained
                                        \ contains=yamlFlowString nextgroup=yamlBlockMappingDelimiter skipwhite
    6              0.000046 syn match yamlBlockMappingMerge   /^\s*\zs<<\ze\s*:\%(\s\|$\)/           nextgroup=yamlBlockMappingDelimiter skipwhite
    6              0.000024 syn match yamlBlockMappingMerge          /<<\ze\s*:\%(\s\|$\)/ contained nextgroup=yamlBlockMappingDelimiter skipwhite
                            
    6              0.000036 syn match yamlBlockMappingDelimiter    /^\s*\zs:\ze\%(\s\|$\)/           nextgroup=@yamlBlockNode skipwhite
    6              0.000026 syn match yamlBlockMappingDelimiter           /:\ze\%(\s\|$\)/ contained nextgroup=@yamlBlockNode skipwhite
    6              0.000048 syn match yamlBlockMappingKeyStart     /^\s*\zs?\ze\%(\s\|$\)/           nextgroup=@yamlBlockNode skipwhite
    6              0.000021 syn match yamlBlockMappingKeyStart            /?\ze\%(\s\|$\)/ contained nextgroup=@yamlBlockNode skipwhite
                            
    6              0.000029 syn match yamlBlockCollectionItemStart /^\s*\zs-\ze\%(\s\|$\)/           nextgroup=@yamlBlockNode skipwhite
    6              0.000025 syn match yamlBlockCollectionItemStart        /-\ze\%(\s\|$\)/ contained nextgroup=@yamlBlockNode skipwhite
                            
    6              0.000275 execute 'syn match yamlBlockNodeProperties' string(s:c_ns_properties)
                                        \ 'contained contains=yamlNodeTag,yamlAnchor nextgroup=@yamlFlowNode,yamlBlockScalarHeader skipwhite'
    6              0.000054 syn match yamlBlockScalarHeader '[|>]\%([1-9][+-]\|[+-]\?[1-9]\?\)\%(\s\+#.*\)\?$' contained
                                        \ contains=yamlComment nextgroup=yamlBlockString skipnl
    6              0.000061 syn region yamlBlockString start=/^\z(\s\+\)/ skip=/^$/ end=/^\%(\z1\)\@!/ contained
                            
    6              0.000061 syn cluster yamlBlockNode contains=@yamlFlowNode,yamlBlockMappingKey,yamlBlockMappingKeyString,
                                        \yamlBlockMappingMerge,yamlBlockMappingKeyStart,yamlBlockCollectionItemStart,
                                        \yamlBlockNodeProperties,yamlBlockScalarHeader
                            
    6              0.000044 syn cluster yamlScalarWithSpecials contains=yamlPlainScalar,yamlBlockMappingKey,yamlFlowMappingKey
                            
    6   0.000211   0.000077 let s:_bounder = s:SimplifyToAssumeAllPrintable('\%([[\]{}, \t]\@!\p\)')
    6              0.000023 if b:yaml_schema is# 'json'
                                syn keyword yamlNull null contained containedin=@yamlScalarWithSpecials
                                syn keyword yamlBool true false
                                exe 'syn match   yamlInteger /'.s:_bounder.'\@1<!\%(0\|-\=[1-9][0-9]*\)'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
                                exe 'syn match   yamlFloat   /'.s:_bounder.'\@1<!\%(-\=[1-9][0-9]*\%(\.[0-9]*\)\=\(e[-+]\=[0-9]\+\)\=\|0\|-\=\.inf\|\.nan\)'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
    6              0.000014 elseif b:yaml_schema is# 'core'
    6              0.000032     syn keyword yamlNull null Null NULL contained containedin=@yamlScalarWithSpecials
    6              0.000032     syn keyword yamlBool true True TRUE false False FALSE contained containedin=@yamlScalarWithSpecials
    6              0.000076     exe 'syn match   yamlNull /'.s:_bounder.'\@1<!\~'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
    6              0.000130     exe 'syn match   yamlInteger /'.s:_bounder.'\@1<!\%([-+]\=\%(\%(0\%(b[0-1_]\+\|o\?[0-7_]\+\|x[0-9a-fA-F_]\+\)\=\|\%([1-9][0-9_]*\%(:[0-5]\=\d\)\+\)\)\|[1-9][0-9_]*\)\)'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
    6              0.000142     exe 'syn match   yamlFloat /'.s:_bounder.'\@1<!\%([-+]\=\%(\%(\d[0-9_]*\)\.[0-9_]*\%([eE][-+]\=\d\+\)\=\|\.[0-9_]\+\%([eE][-+]\=[0-9]\+\)\=\|\d[0-9_]*\%(:[0-5]\=\d\)\+\.[0-9_]*\|\.\%(inf\|Inf\|INF\)\)\|\%(\.\%(nan\|NaN\|NAN\)\)\)'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
                            elseif b:yaml_schema is# 'pyyaml'
                                syn keyword yamlNull null Null NULL contained containedin=@yamlScalarWithSpecials
                                syn keyword yamlBool true True TRUE false False FALSE yes Yes YES no No NO on On ON off Off OFF contained containedin=@yamlScalarWithSpecials
                                exe 'syn match   yamlNull /'.s:_bounder.'\@1<!\~'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
                                exe 'syn match  yamlFloat /'.s:_bounder.'\@1<!\%(\v[-+]?%(\d[0-9_]*)\.[0-9_]*%([eE][-+]\d+)?|\.[0-9_]+%([eE][-+]\d+)?|[-+]?\d[0-9_]*%(\:[0-5]?\d)+\.[0-9_]*|[-+]?\.%(inf|Inf|INF)|\.%(nan|NaN|NAN)\m\)'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
                                exe 'syn match  yamlInteger /'.s:_bounder.'\@1<!\%(\v[-+]?0b[0-1_]+|[-+]?0[0-7_]+|[-+]?%(0|[1-9][0-9_]*)|[-+]?0x[0-9a-fA-F_]+|[-+]?[1-9][0-9_]*%(:[0-5]?\d)+\m\)'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
                                exe 'syn match  yamlTimestamp /'.s:_bounder.'\@1<!\%(\v\d\d\d\d\-\d\d\-\d\d|\d\d\d\d \-\d\d? \-\d\d?%([Tt]|[ \t]+)\d\d?\:\d\d \:\d\d %(\.\d*)?%([ \t]*%(Z|[-+]\d\d?%(\:\d\d)?))?\m\)'.s:_bounder.'\@!/ contained containedin=@yamlScalarWithSpecials'
                            elseif b:yaml_schema is# 'failsafe'
                                " Nothing
    6              0.000006 endif
    6              0.000011 unlet s:_bounder
                            
                            
    6              0.000235 execute 'syn match yamlNodeTag '.string(s:c_ns_tag_property)
    6              0.000074 execute 'syn match yamlAnchor  '.string(s:c_ns_anchor_property)
    6              0.000066 execute 'syn match yamlAlias   '.string(s:c_ns_alias_node)
                            
    6              0.000046 syn match yamlDocumentStart '^---\ze\%(\s\|$\)'
    6              0.000032 syn match yamlDocumentEnd   '^\.\.\.\ze\%(\s\|$\)'
                            
    6              0.000017 hi def link yamlTodo                     Todo
    6              0.000009 hi def link yamlComment                  Comment
                            
    6              0.000009 hi def link yamlDocumentStart            PreProc
    6              0.000007 hi def link yamlDocumentEnd              PreProc
                            
    6              0.000016 hi def link yamlDirectiveName            Keyword
                            
    6              0.000010 hi def link yamlTAGDirective             yamlDirectiveName
    6              0.000008 hi def link yamlTagHandle                String
    6              0.000007 hi def link yamlTagPrefix                String
                            
    6              0.000009 hi def link yamlYAMLDirective            yamlDirectiveName
    6              0.000008 hi def link yamlReservedDirective        Error
    6              0.000008 hi def link yamlYAMLVersion              Number
                            
    6              0.000008 hi def link yamlString                   String
    6              0.000009 hi def link yamlFlowString               yamlString
    6              0.000009 hi def link yamlFlowStringDelimiter      yamlString
    6              0.000009 hi def link yamlEscape                   SpecialChar
    6              0.000009 hi def link yamlSingleEscape             SpecialChar
                            
    6              0.000010 hi def link yamlMappingKey               Identifier
    6              0.000009 hi def link yamlMappingKeyStart          Special
    6              0.000008 hi def link yamlMappingMerge             Special
    6              0.000008 hi def link yamlKeyValueDelimiter        Special
                            
    6              0.000008 hi def link yamlFlowIndicator            Special
    6              0.000010 hi def link yamlFlowMappingKey           yamlMappingKey
    6              0.000009 hi def link yamlFlowMappingKeyStart      yamlMappingKeyStart
    6              0.000010 hi def link yamlFlowMappingMerge         yamlMappingMerge
    6              0.000008 hi def link yamlFlowMappingDelimiter     yamlKeyValueDelimiter
                            
    6              0.000009 hi def link yamlBlockMappingKey          yamlMappingKey
    6              0.000009 hi def link yamlBlockMappingKeyStart     yamlMappingKeyStart
    6              0.000009 hi def link yamlBlockMappingMerge        yamlMappingMerge
    6              0.000010 hi def link yamlBlockMappingDelimiter    yamlKeyValueDelimiter
    6              0.000015 hi def link yamlBlockCollectionItemStart Label
    6              0.000009 hi def link yamlBlockScalarHeader        Special
                            " We do not link yamlBlockString to yamlString, because yamlPlainScalar is
                            " not highlighted as string neighter, and also due to historical reasons.
                            " hi def link yamlBlockString              yamlString
                            
    6              0.000007 hi def link yamlConstant                 Constant
                            
    6              0.000009 hi def link yamlNull                     yamlConstant
    6              0.000008 hi def link yamlBool                     yamlConstant
                            
    6              0.000008 hi def link yamlAnchor                   Type
    6              0.000015 hi def link yamlAlias                    Type
    6              0.000006 hi def link yamlNodeTag                  Type
                            
    6              0.000008 hi def link yamlInteger                  Number
    6              0.000014 hi def link yamlFloat                    Float
    6              0.000007 hi def link yamlTimestamp                Number
                            
    6              0.000021 let b:current_syntax = "yaml"
                            
    6              0.000167 unlet s:ns_char s:ns_word_char s:ns_uri_char s:ns_tag_char s:c_indicator s:c_flow_indicator
                                        \ s:ns_anchor_char s:ns_char_without_c_indicator s:_collection s:_neg_collection
                                        \ s:c_verbatim_tag s:c_named_tag_handle s:c_secondary_tag_handle s:c_primary_tag_handle
                                        \ s:c_tag_handle s:c_ns_shorthand_tag s:c_non_specific_tag s:c_ns_tag_property
                                        \ s:c_ns_anchor_name s:c_ns_anchor_property s:c_ns_alias_node s:c_ns_properties
                                        \ s:ns_directive_name s:ns_local_tag_prefix s:ns_global_tag_prefix s:ns_tag_prefix
                                        \ s:ns_plain_safe_out s:ns_plain_safe_in s:ns_plain_safe_in_without_colhash s:ns_plain_safe_out_without_colhash
                                        \ s:ns_plain_first_in s:ns_plain_first_out s:ns_plain_char_in s:ns_plain_char_out s:ns_plain_out s:ns_plain_in
    6              0.000026 delfunction s:SimplifyAdjacentCollections
    6              0.000016 delfunction s:SimplifyToAssumeAllPrintable
                            
    6   0.000084   0.000048 let &cpo = s:cpo_save
    6              0.000008 unlet s:cpo_save
                            
                            " vim: set et sw=4 sts=4 ts=8:

SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax\rmd.vim
Sourced 3 times
Total time:   0.174205
 Self time:   0.005314

count  total (s)   self (s)
                            " Language: Markdown with chunks of R, Python and other languages
                            " Maintainer: This runtime file is looking for a new maintainer.
                            " Former Maintainer: Jakson Alves de Aquino <jalvesaq@gmail.com>
                            " Former Repository: https://github.com/jalvesaq/R-Vim-runtime
                            " Last Change: 2023 Dec 24  07:21AM
                            "   2024 Feb 19 by Vim Project (announce adoption)
                            "
                            "   For highlighting pandoc extensions to markdown like citations and TeX and
                            "   many other advanced features like folding of markdown sections, it is
                            "   recommended to install the vim-pandoc filetype plugin as well as the
                            "   vim-pandoc-syntax filetype plugin from https://github.com/vim-pandoc.
                            
                            
    3              0.000023 if exists("b:current_syntax")
                              finish
    3              0.000002 endif
                            
    3              0.000012 let s:cpo_save = &cpo
    3   0.000051   0.000032 set cpo&vim
                            
    3              0.000034 let g:rmd_include_latex = get(g:, 'rmd_include_latex', 1)
    3              0.000015 if g:rmd_include_latex == 0 || g:rmd_include_latex == 1
    3              0.000012   let b:rmd_has_LaTeX = v:false
                            elseif g:rmd_include_latex == 2
                              let b:rmd_has_LaTeX = v:true
    3              0.000002 endif
                            
                            " Highlight the header of the chunks as R code
    3              0.000009 let g:rmd_syn_hl_chunk = get(g:, 'rmd_syn_hl_chunk', 0)
                            
                            " Pandoc-syntax has more features, but it is slower.
                            " https://github.com/vim-pandoc/vim-pandoc-syntax
                            
                            " Don't waste time loading syntax that will be discarded:
    3              0.000012 let s:save_pandoc_lngs = get(g:, 'pandoc#syntax#codeblocks#embeds#langs', [])
    3              0.000004 let g:pandoc#syntax#codeblocks#embeds#langs = []
                            
    3              0.000008 let g:rmd_dynamic_fenced_languages = get(g:, 'rmd_dynamic_fenced_languages', v:true)
                            
                            " Step_1: Source pandoc.vim if it is installed:
    3   0.160635   0.002224 runtime syntax/pandoc.vim
    3              0.000035 if exists("b:current_syntax")
    3              0.000009   if hlexists('pandocDelimitedCodeBlock')
    3              0.000004     syn clear pandocDelimitedCodeBlock
    3              0.000002   endif
                            
    3              0.000012   if len(s:save_pandoc_lngs) > 0 && !exists('g:rmd_fenced_languages')
                                let g:rmd_fenced_languages = deepcopy(s:save_pandoc_lngs)
    3              0.000002   endif
                            
                              " Recognize inline R code
    3              0.000042   syn region rmdrInline matchgroup=rmdInlineDelim start="`r "  end="`" contains=@Rmdr containedin=pandocLaTeXRegion,yamlFlowString keepend
                            else
                              " Step_2: Source markdown.vim if pandoc.vim is not installed
                            
                              " Configuration if not using pandoc syntax:
                              " Add syntax highlighting of YAML header
                              let g:rmd_syn_hl_yaml = get(g:, 'rmd_syn_hl_yaml', 1)
                              " Add syntax highlighting of citation keys
                              let g:rmd_syn_hl_citations = get(g:, 'rmd_syn_hl_citations', 1)
                            
                              " R chunks will not be highlighted by syntax/markdown because their headers
                              " follow a non standard pattern: "```{lang" instead of "^```lang".
                              " Make a copy of g:markdown_fenced_languages to highlight the chunks later:
                              if exists('g:markdown_fenced_languages') && !exists('g:rmd_fenced_languages')
                                let g:rmd_fenced_languages = deepcopy(g:markdown_fenced_languages)
                              endif
                            
                              if exists('g:markdown_fenced_languages') && len(g:markdown_fenced_languages) > 0
                                let s:save_mfl = deepcopy(g:markdown_fenced_languages)
                              endif
                              " Don't waste time loading syntax that will be discarded:
                              let g:markdown_fenced_languages = []
                              runtime syntax/markdown.vim
                              if exists('s:save_mfl') > 0
                                let g:markdown_fenced_languages = deepcopy(s:save_mfl)
                                unlet s:save_mfl
                              endif
                              syn region rmdrInline matchgroup=rmdInlineDelim start="`r "  end="`" contains=@Rmdr keepend
                            
                              " Step_2a: Add highlighting for both YAML and citations which are pandoc
                              " specific, but also used in Rmd files
                            
                              " You don't need this if either your markdown/syntax.vim already highlights
                              " the YAML header or you are writing standard markdown
                              if g:rmd_syn_hl_yaml
                                " Basic highlighting of YAML header
                                syn match rmdYamlFieldTtl /^\s*\zs\w\%(-\|\w\)*\ze:/ contained
                                syn match rmdYamlFieldTtl /^\s*-\s*\zs\w\%(-\|\w\)*\ze:/ contained
                                syn region yamlFlowString matchgroup=yamlFlowStringDelimiter start='"' skip='\\"' end='"' contains=yamlEscape,rmdrInline contained
                                syn region yamlFlowString matchgroup=yamlFlowStringDelimiter start="'" skip="''"  end="'" contains=yamlSingleEscape,rmdrInline contained
                                syn match  yamlEscape contained '\\\%([\\"abefnrtv\^0_ NLP\n]\|x\x\x\|u\x\{4}\|U\x\{8}\)'
                                syn match  yamlSingleEscape contained "''"
                                syn match yamlComment /#.*/ contained
                                " A second colon is a syntax error, unless within a string or following !expr
                                syn match yamlColonError /:\s*[^'^"^!]*:/ contained
                                if &filetype == 'quarto'
                                  syn region pandocYAMLHeader matchgroup=rmdYamlBlockDelim start=/\%(\%^\|\_^\s*\n\)\@<=\_^-\{3}\ze\n.\+/ end=/^---$/ keepend contains=rmdYamlFieldTtl,yamlFlowString,yamlComment,yamlColonError
                                else
                                  syn region pandocYAMLHeader matchgroup=rmdYamlBlockDelim start=/\%(\%^\|\_^\s*\n\)\@<=\_^-\{3}\ze\n.\+/ end=/^\([-.]\)\1\{2}$/ keepend contains=rmdYamlFieldTtl,yamlFlowString,yamlComment,yamlColonError
                                endif
                                hi def link rmdYamlBlockDelim Delimiter
                                hi def link rmdYamlFieldTtl Identifier
                                hi def link yamlFlowString String
                                hi def link yamlComment Comment
                                hi def link yamlColonError Error
                              endif
                            
                              " Conceal char for manual line break
                              if &encoding ==# 'utf-8'
                                syn match rmdNewLine '  $' conceal cchar=↵
                              endif
                            
                              " You don't need this if either your markdown/syntax.vim already highlights
                              " citations or you are writing standard markdown
                              if g:rmd_syn_hl_citations
                                " From vim-pandoc-syntax
                                " parenthetical citations
                                syn match pandocPCite /\^\@<!\[[^\[\]]\{-}-\{0,1}@[[:alnum:]_][[:alnum:]à-öø-ÿÀ-ÖØ-ß_:.#$%&\-+?<>~\/]*.\{-}\]/ contains=pandocEmphasis,pandocStrong,pandocLatex,pandocCiteKey,@Spell,pandocAmpersandEscape display
                                " in-text citations with location
                                syn match pandocICite /@[[:alnum:]_][[:alnum:]à-öø-ÿÀ-ÖØ-ß_:.#$%&\-+?<>~\/]*\s\[.\{-1,}\]/ contains=pandocCiteKey,@Spell display
                                " cite keys
                                syn match pandocCiteKey /\(-\=@[[:alnum:]_][[:alnum:]à-öø-ÿÀ-ÖØ-ß_:.#$%&\-+?<>~\/]*\)/ containedin=pandocPCite,pandocICite contains=@NoSpell display
                                syn match pandocCiteAnchor /[-@]/ contained containedin=pandocCiteKey display
                                syn match pandocCiteLocator /[\[\]]/ contained containedin=pandocPCite,pandocICite
                                hi def link pandocPCite Operator
                                hi def link pandocICite Operator
                                hi def link pandocCiteKey Label
                                hi def link pandocCiteAnchor Operator
                                hi def link pandocCiteLocator Operator
                              endif
    3              0.000002 endif
                            
                            " Step_3: Highlight code blocks.
                            
    3              0.000035 syn region rmdCodeBlock matchgroup=rmdCodeDelim start="^\s*```\s*{.*}$" matchgroup=rmdCodeDelim end="^\s*```\ze\s*$" keepend
    3              0.000023 syn region rmdCodeBlock matchgroup=rmdCodeDelim start="^\s*```.+$" matchgroup=rmdCodeDelim end="^```$" keepend
    3              0.000010 hi link rmdCodeBlock Special
                            
                            " Now highlight chunks:
    3              0.000022 syn region knitrBodyOptions start='^#| ' end='$' contained  containedin=rComment,pythonComment contains=knitrBodyVar,knitrBodyValue transparent
    3              0.000013 syn match knitrBodyValue ': \zs.*\ze$' keepend contained containedin=knitrBodyOptions
    3              0.000012 syn match knitrBodyVar '| \zs\S\{-}\ze:' contained containedin=knitrBodyOptions
                            
    3              0.000021 let g:rmd_fenced_languages = get(g:, 'rmd_fenced_languages', ['r'])
                            
    3              0.000007 let s:no_syntax_vim = []
    3              0.000009 function s:IncludeLanguage(lng)
                              if a:lng =~ '='
                                let ftpy = substitute(a:lng, '.*=', '', '')
                                let lnm = substitute(a:lng, '=.*', '', '')
                              else
                                let ftpy = a:lng
                                let lnm  = a:lng
                              endif
                              if index(s:no_syntax_vim, ftpy) >= 0
                                return
                              endif
                              if len(globpath(&rtp, "syntax/" . ftpy . ".vim"))
                                unlet! b:current_syntax
                                exe 'syn include @Rmd'.lnm.' syntax/'.ftpy.'.vim'
                                let b:current_syntax = "rmd"
                                if g:rmd_syn_hl_chunk
                                  exe 'syn match knitrChunkDelim /```\s*{\s*'.lnm.'/ contained containedin=knitrChunkBrace contains=knitrChunkLabel'
                                  exe 'syn match knitrChunkLabelDelim /```\s*{\s*'.lnm.',\=\s*[-[:alnum:]]\{-1,}[,}]/ contained containedin=knitrChunkBrace'
                                  syn match knitrChunkDelim /}\s*$/ contained containedin=knitrChunkBrace
                                  exe 'syn match knitrChunkBrace /```\s*{\s*'.lnm.'.*$/ contained containedin=rmd'.lnm.'Chunk contains=knitrChunkDelim,knitrChunkLabelDelim,@Rmd'.lnm
                                  exe 'syn region rmd'.lnm.'Chunk start="^\s*```\s*{\s*=\?'.lnm.'\>.*$" matchgroup=rmdCodeDelim end="^\s*```\ze\s*$" keepend contains=knitrChunkBrace,@Rmd'.lnm
                            
                                  hi link knitrChunkLabel Identifier
                                  hi link knitrChunkDelim rmdCodeDelim
                                  hi link knitrChunkLabelDelim rmdCodeDelim
                                else
                                  exe 'syn region rmd'.lnm.'Chunk matchgroup=rmdCodeDelim start="^\s*```\s*{\s*=\?'.lnm.'\>.*$" matchgroup=rmdCodeDelim end="^\s*```\ze\s*$" keepend contains=@Rmd'.lnm
                                endif
                              else
                                " Avoid the cost of running globpath() whenever the buffer is saved
                                let s:no_syntax_vim += [ftpy]
                              endif
                            endfunction
                            
    6              0.000014 for s:type in g:rmd_fenced_languages
    3   0.010300   0.000031   call s:IncludeLanguage(s:type)
    6              0.000006 endfor
    3              0.000005 unlet! s:type
                            
    3              0.000007 let s:LaTeX_included = v:false
    3              0.000007 function s:IncludeLaTeX()
                              let s:LaTeX_included = v:true
                              unlet! b:current_syntax
                              syn include @RmdLaTeX syntax/tex.vim
                              " From vim-pandoc-syntax
                              syn region rmdLaTeXInlineMath start=/\v\\@<!\$\S@=/ end=/\v\\@<!\$\d@!/ keepend contains=@RmdLaTeX
                              syn match rmdLaTeXCmd /\\[[:alpha:]]\+\(\({.\{-}}\)\=\(\[.\{-}\]\)\=\)*/ contains=@RmdLaTeX
                              syn region rmdLaTeX start='\$\$'  end='\$\$' keepend contains=@RmdLaTeX
                              syn region rmdLaTeX start=/\\begin{\z(.\{-}\)}/ end=/\\end{\z1}/ keepend contains=@RmdLaTeX
                            endfunction
                            
    3              0.000005 function s:CheckRmdFencedLanguages()
                              let alines = getline(1, '$')
                              call filter(alines, "v:val =~ '^```{'")
                              call map(alines, "substitute(v:val, '^```{', '', '')")
                              call map(alines, "substitute(v:val, '\\W.*', '', '')")
                              for tpy in alines
                                if len(tpy) == 0
                                  continue
                                endif
                                let has_lng = 0
                                for lng in g:rmd_fenced_languages
                                  if tpy == lng
                                    let has_lng = 1
                                    continue
                                  endif
                                endfor
                                if has_lng == 0
                                  let g:rmd_fenced_languages += [tpy]
                                  call s:IncludeLanguage(tpy)
                                endif
                              endfor
                            
                              if hlexists('pandocLaTeXCommand')
                                return
                              endif
                              if g:rmd_include_latex
                                if !b:rmd_has_LaTeX && (search('\$\$', 'wn') > 0 ||
                                      \ search('\\begin{', 'wn') > 0) ||
                                      \ search('\\[[:alpha:]]\+', 'wn') ||
                                      \ search('\$[^\$]\+\$', 'wn')
                                  let b:rmd_has_LaTeX = v:true
                                endif
                                if b:rmd_has_LaTeX && !s:LaTeX_included
                                  call s:IncludeLaTeX()
                                endif
                              endif
                            endfunction
                            
    3              0.000006 if g:rmd_dynamic_fenced_languages
    3   0.000206   0.000026   call s:CheckRmdFencedLanguages()
    3              0.000019   augroup RmdSyntax
    3              0.000025     autocmd!
    3              0.000023     autocmd BufWritePost <buffer> call s:CheckRmdFencedLanguages()
    3              0.000004   augroup END
    3              0.000002 endif
                            
                            " Step_4: Highlight code recognized by pandoc but not defined in pandoc.vim yet:
    3              0.000021 syn match pandocDivBegin '^:::\+ {.\{-}}' contains=pandocHeaderAttr
    3              0.000012 syn match pandocDivEnd '^:::\+$'
                            
    3              0.000005 hi def link knitrBodyVar PreProc
    3              0.000004 hi def link knitrBodyValue Constant
    3              0.000008 hi def link knitrBodyOptions rComment
    3              0.000017 hi def link pandocDivBegin Delimiter
    3              0.000003 hi def link pandocDivEnd Delimiter
    3              0.000004 hi def link rmdInlineDelim Delimiter
    3              0.000003 hi def link rmdCodeDelim Delimiter
                            
    3              0.000008 if len(s:save_pandoc_lngs)
                              let g:pandoc#syntax#codeblocks#embeds#langs = s:save_pandoc_lngs
    3              0.000002 endif
    3              0.000006 unlet s:save_pandoc_lngs
    3   0.000040   0.000027 let &cpo = s:cpo_save
    3              0.000003 unlet s:cpo_save
                            
    3              0.000005 syntax iskeyword clear
                            
    3              0.000005 let b:current_syntax = "rmd"
                            
                            " vim: ts=8 sw=2

SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax\pandoc.vim
Sourced 3 times
Total time:   0.158405
 Self time:   0.016794

count  total (s)   self (s)
    3              0.000012 scriptencoding utf-8
                            "
                            " Language:	Pandoc (superset of Markdown)
                            " Maintainer:	Felipe Morales <hel.sheep@gmail.com>
                            " Maintainer:	Caleb Maclennan <caleb@alerque.com>
                            " Upstream:	https://github.com/vim-pandoc/vim-pandoc-syntax
                            "
                            " Contributor:	David Sanson <dsanson@gmail.com>
                            "		Jorge Israel Peña <jorge.israel.p@gmail.com>
                            " Original Author:	Jeremy Schultz <taozhyn@gmail.com>
                            " Version: 5.0
                            " Last Change:	2024 Apr 08
                            
    3              0.000011 let s:cpo_save = &cpo
    3   0.000038   0.000023 set cpo&vim
                            
                            " Configuration: {{{1
                            "
                            " use conceal? {{{2
    3              0.000014 if !exists('g:pandoc#syntax#conceal#use')
                                let g:pandoc#syntax#conceal#use = 1
    3              0.000003 endif
                            "}}}2
                            
                            " what groups not to use conceal in. works as a blacklist {{{2
    3              0.000008 if !exists('g:pandoc#syntax#conceal#blacklist')
                                let g:pandoc#syntax#conceal#blacklist = []
    3              0.000002 endif
                            " }}}2
                            
                            " cchars used in conceal rules {{{2
                            " utf-8 defaults (preferred)
    3              0.000006 if &encoding ==# 'utf-8'
    3              0.000084     let s:cchars = {
                                            \'newline': '↵',
                                            \'image': '▨',
                                            \'super': 'ⁿ',
                                            \'sub': 'ₙ',
                                            \'strike': 'x̶',
                                            \'atx': '§',
                                            \'codelang': 'λ',
                                            \'codeend': '—',
                                            \'abbrev': '→',
                                            \'footnote': '†',
                                            \'definition': ' ',
                                            \'li': '•',
                                            \'html_c_s': '‹',
                                            \'html_c_e': '›',
                                            \'quote_s': '“',
                                            \'quote_e': '”'}
                            else
                                " ascii defaults
                                let s:cchars = {
                                            \'newline': ' ',
                                            \'image': 'i',
                                            \'super': '^',
                                            \'sub': '_',
                                            \'strike': '~',
                                            \'atx': '#',
                                            \'codelang': 'l',
                                            \'codeend': '-',
                                            \'abbrev': 'a',
                                            \'footnote': 'f',
                                            \'definition': ' ',
                                            \'li': '*',
                                            \'html_c_s': '+',
                                            \'html_c_e': '+'}
    3              0.000002 endif
                            " }}}2
                            
                            " if the user has a dictionary with replacements for the default cchars, use those {{{2
    3              0.000010 if exists('g:pandoc#syntax#conceal#cchar_overrides')
                                let s:cchars = extend(s:cchars, g:pandoc#syntax#conceal#cchar_overrides)
    3              0.000002 endif
                            " }}}2
                            
                            "should the urls in links be concealed? {{{2
    3              0.000007 if !exists('g:pandoc#syntax#conceal#urls')
                                let g:pandoc#syntax#conceal#urls = 0
    3              0.000002 endif
                            " should backslashes in escapes be concealed? {{{2
    3              0.000007 if !exists('g:pandoc#syntax#conceal#backslash')
                                let g:pandoc#syntax#conceal#backslash = 0
    3              0.000002 endif
                            " }}}2
                            
                            " leave specified codeblocks as Normal (i.e. 'unhighlighted') {{{2
    3              0.000008 if !exists('g:pandoc#syntax#codeblocks#ignore')
                                let g:pandoc#syntax#codeblocks#ignore = []
    3              0.000001 endif
                            " }}}2
                            
                            " use embedded highlighting for delimited codeblocks where a language is specifed. {{{2
    3              0.000007 if !exists('g:pandoc#syntax#codeblocks#embeds#use')
                                let g:pandoc#syntax#codeblocks#embeds#use = 1
    3              0.000002 endif
                            " }}}2
                            
                            " for what languages and using what vim syntax files highlight those embeds. {{{2
                            " defaults to None.
    3              0.000007 if !exists('g:pandoc#syntax#codeblocks#embeds#langs')
                                let g:pandoc#syntax#codeblocks#embeds#langs = []
    3              0.000002 endif
                            " }}}2
                            
                            " use italics ? {{{2
    3              0.000006 if !exists('g:pandoc#syntax#style#emphases')
                                let g:pandoc#syntax#style#emphases = 1
    3              0.000002 endif
                            " if 0, we don't conceal the emphasis marks, otherwise there wouldn't be a way
                            " to tell where the styles apply.
    3              0.000005 if g:pandoc#syntax#style#emphases == 0
                                call add(g:pandoc#syntax#conceal#blacklist, 'block')
    3              0.000002 endif
                            " }}}2
                            
                            " underline subscript, superscript and strikeout? {{{2
    3              0.000008 if !exists('g:pandoc#syntax#style#underline_special')
                                let g:pandoc#syntax#style#underline_special = 1
    3              0.000002 endif
                            " }}}2
                            
                            " protect code blocks? {{{2
    3              0.000008 if !exists('g:pandoc#syntax#protect#codeblocks')
                                let g:pandoc#syntax#protect#codeblocks = 1
    3              0.000002 endif
                            " }}}2
                            
                            " use color column? {{{2
    3              0.000008 if !exists('g:pandoc#syntax#colorcolumn')
                                let g:pandoc#syntax#colorcolumn = 0
    3              0.000002 endif
                            " }}}2
                            
                            " highlight new lines? {{{2
    3              0.000007 if !exists('g:pandoc#syntax#newlines')
                                let g:pandoc#syntax#newlines = 1
    3              0.000002 endif
                            " }}}
                            
                            " detect roman-numeral list items? {{{2
    3              0.000008 if !exists('g:pandoc#syntax#roman_lists')
                                let g:pandoc#syntax#roman_lists = 0
    3              0.000002 endif
                            " }}}2
                            
                            " disable syntax highlighting for definition lists? (better performances) {{{2
    3              0.000008 if !exists('g:pandoc#syntax#use_definition_lists')
                                let g:pandoc#syntax#use_definition_lists = 1
    3              0.000002 endif
                            " }}}2
                            
                            " }}}1
                            
                            " Functions: {{{1
                            " EnableEmbedsforCodeblocksWithLang {{{2
    3              0.000012 function! EnableEmbedsforCodeblocksWithLang(entry)
                                " prevent embedded language syntaxes from changing 'foldmethod' 
                                if has('folding')
                                    let s:foldmethod = &l:foldmethod
                                    let s:foldtext = &l:foldtext     
                                endif
                            
                                try
                                    let s:langname = matchstr(a:entry, '^[^=]*')
                                    let s:langsyntaxfile = matchstr(a:entry, '[^=]*$')
                                    unlet! b:current_syntax
                                    exe 'syn include @'.toupper(s:langname).' syntax/'.s:langsyntaxfile.'.vim'
                                    " We might have just turned off spellchecking by including the file,
                                    " so we turn it back on here.
                                    exe 'syntax spell toplevel'
                                    exe 'syn region pandocDelimitedCodeBlock_' . s:langname . ' start=/\(\_^\( \+\|\t\)\=\(`\{3,}`*\|\~\{3,}\~*\)\s*\%({[^.]*\.\)\=' . s:langname . '\>.*\n\)\@<=\_^/' .
                                                \' end=/\_$\n\(\( \+\|\t\)\=\(`\{3,}`*\|\~\{3,}\~*\)\_$\n\_$\)\@=/ contained containedin=pandocDelimitedCodeBlock' .
                                                \' contains=@' . toupper(s:langname)
                                    exe 'syn region pandocDelimitedCodeBlockinBlockQuote_' . s:langname . ' start=/>\s\(`\{3,}`*\|\~\{3,}\~*\)\s*\%({[^.]*\.\)\=' . s:langname . '\>/' .
                                                \ ' end=/\(`\{3,}`*\|\~\{3,}\~*\)/ contained containedin=pandocDelimitedCodeBlock' .
                                                \' contains=@' . toupper(s:langname) .
                                                \',pandocDelimitedCodeBlockStart,pandocDelimitedCodeBlockEnd,pandodDelimitedCodeblockLang,pandocBlockQuoteinDelimitedCodeBlock'
                                catch /E484/
                                  echo "No syntax file found for '" . s:langsyntaxfile . "'"
                                endtry
                            
                                if exists('s:foldmethod') && s:foldmethod !=# &l:foldmethod
                                    let &l:foldmethod = s:foldmethod
                                endif
                                if exists('s:foldtext') && s:foldtext !=# &l:foldtext
                                    let &l:foldtext = s:foldtext
                                endif
                            endfunction
                            " }}}2
                            
                            " DisableEmbedsforCodeblocksWithLang {{{2
    3              0.000006 function! DisableEmbedsforCodeblocksWithLang(langname)
                                try
                                  exe 'syn clear pandocDelimitedCodeBlock_'.a:langname
                                  exe 'syn clear pandocDelimitedCodeBlockinBlockQuote_'.a:langname
                                catch /E28/
                                  echo "No existing highlight definitions found for '" . a:langname . "'"
                                endtry
                            endfunction
                            " }}}2
                            
                            " WithConceal {{{2
    3              0.000010 function! s:WithConceal(rule_group, rule, conceal_rule)
                                let l:rule_tail = ''
                                if g:pandoc#syntax#conceal#use != 0
                                    if index(g:pandoc#syntax#conceal#blacklist, a:rule_group) == -1
                                        let l:rule_tail = ' ' . a:conceal_rule
                                    endif
                                endif
                                execute a:rule . l:rule_tail
                            endfunction
                            " }}}2
                            
                            " }}}1
                            
                            " Commands: {{{1
    3              0.000074 command! -buffer -nargs=1 -complete=syntax PandocHighlight call EnableEmbedsforCodeblocksWithLang(<f-args>)
    3              0.000331 command! -buffer -nargs=1 -complete=syntax PandocUnhighlight call DisableEmbedsforCodeblocksWithLang(<f-args>)
                            " }}}1
                            
                            " BASE:
    3              0.000005 syntax clear
    3              0.000007 syntax spell toplevel
                            " }}}1
                            
                            " Syntax Rules: {{{1
                            
                            " Embeds: {{{2
                            
                            " prevent embedded language syntaxes from changing 'foldmethod' 
    3              0.000044 if has('folding')
    3              0.000015     let s:foldmethod = &l:foldmethod
    3              0.000002 endif
                            
                            " HTML: {{{3
                            " Set embedded HTML highlighting
    3   0.084168   0.003378 syn include @HTML syntax/html.vim
    3              0.000019 syn match pandocHTML /<\/\?\a\_.\{-}>/ contains=@HTML
                            " Support HTML multi line comments
    3              0.000022 syn region pandocHTMLComment start=/<!--\s\=/ end=/\s\=-->/ keepend contains=pandocHTMLCommentStart,pandocHTMLCommentEnd
    3   0.000093   0.000045 call s:WithConceal('html_c_s', 'syn match pandocHTMLCommentStart /<!--/ contained', 'conceal cchar='.s:cchars['html_c_s'])
    3   0.000049   0.000019 call s:WithConceal('html_c_e', 'syn match pandocHTMLCommentEnd /-->/ contained', 'conceal cchar='.s:cchars['html_c_e'])
                            " }}}3
                            
                            " LaTeX: {{{3
                            " Set embedded LaTex (pandoc extension) highlighting
                            " Unset current_syntax so the 2nd include will work
    3              0.000004 unlet b:current_syntax
    3   0.057412   0.003509 syn include @LATEX syntax/tex.vim
    3              0.000021 if index(g:pandoc#syntax#conceal#blacklist, 'inlinemath') == -1
                                " Can't use WithConceal here because it will mess up all other conceals
                                " when dollar signs are used normally. It must be skipped entirely if
                                " inlinemath is blacklisted
    3              0.000045     syn region pandocLaTeXInlineMath start=/\v\\@<!\$\S@=/ end=/\v\\@<!\$\d@!/ keepend contains=@LATEX
    3              0.000020     syn region pandocLaTeXInlineMath start=/\\\@<!\\(/ end=/\\\@<!\\)/ keepend contains=@LATEX
    3              0.000003 endif
    3              0.000011 syn match pandocEscapedDollar /\\\$/ conceal cchar=$
    3              0.000032 syn match pandocProtectedFromInlineLaTeX /\\\@<!\${.*}\(\(\s\|[[:punct:]]\)\([^$]*\|.*\(\\\$.*\)\{2}\)\n\n\|$\)\@=/ display
                            " contains=@LATEX
    3              0.000015 syn region pandocLaTeXMathBlock start=/\$\$/ end=/\$\$/ keepend contains=@LATEX
    3              0.000015 syn region pandocLaTeXMathBlock start=/\\\@<!\\\[/ end=/\\\@<!\\\]/ keepend contains=@LATEX
    3              0.000029 syn match pandocLaTeXCommand /\\[[:alpha:]]\+\(\({.\{-}}\)\=\(\[.\{-}\]\)\=\)*/ contains=@LATEX
    3              0.000028 syn region pandocLaTeXRegion start=/\\begin{\z(.\{-}\)}/ end=/\\end{\z1}/ keepend contains=@LATEX
                            " we rehighlight sectioning commands, because otherwise tex.vim captures all text until EOF or a new sectioning command
    3              0.000038 syn region pandocLaTexSection start=/\\\(part\|chapter\|\(sub\)\{,2}section\|\(sub\)\=paragraph\)\*\=\(\[.*\]\)\={/ end=/\}/ keepend
    3              0.000028 syn match pandocLaTexSectionCmd /\\\(part\|chapter\|\(sub\)\{,2}section\|\(sub\)\=paragraph\)/ contained containedin=pandocLaTexSection
    3              0.000012 syn match pandocLaTeXDelimiter /[[\]{}]/ contained containedin=pandocLaTexSection
                            " }}}3
                            
    3              0.000018 if exists('s:foldmethod') && s:foldmethod !=# &l:foldmethod
                                let &l:foldmethod = s:foldmethod
    3              0.000002 endif
                            
                            " }}}2
                            
                            " Titleblock: {{{2
    3              0.000022 syn region pandocTitleBlock start=/\%^%/ end=/\n\n/ contains=pandocReferenceLabel,pandocReferenceURL,pandocNewLine
    3   0.000086   0.000032 call s:WithConceal('titleblock', 'syn match pandocTitleBlockMark /%\ / contained containedin=pandocTitleBlock,pandocTitleBlockTitle', 'conceal')
    3              0.000009 syn match pandocTitleBlockTitle /\%^%.*\n/ contained containedin=pandocTitleBlock
                            " }}}2
                            
                            " Blockquotes: {{{2
    3              0.000043 syn match pandocBlockQuote /^\s\{,3}>.*\n\(.*\n\@1<!\n\)*/ contains=@Spell,pandocEmphasis,pandocStrong,pandocPCite,pandocSuperscript,pandocSubscript,pandocStrikeout,pandocUListItem,pandocNoFormatted,pandocAmpersandEscape,pandocLaTeXInlineMath,pandocEscapedDollar,pandocLaTeXCommand,pandocLaTeXMathBlock,pandocLaTeXRegion skipnl
    3              0.000020 syn match pandocBlockQuoteMark /\_^\s\{,3}>/ contained containedin=pandocEmphasis,pandocStrong,pandocPCite,pandocSuperscript,pandocSubscript,pandocStrikeout,pandocUListItem,pandocNoFormatted
                            " }}}2
                            
                            " Code Blocks: {{{2
    3              0.000006 if g:pandoc#syntax#protect#codeblocks == 1
    3              0.000015     syn match pandocCodeblock /\([ ]\{4}\|\t\).*$/
    3              0.000004 endif
    3              0.000033 syn region pandocCodeBlockInsideIndent   start=/\(\(\d\|\a\|*\).*\n\)\@<!\(^\(\s\{8,}\|\t\+\)\).*\n/ end=/.\(\n^\s*\n\)\@=/ contained
                            " }}}2
                            
                            " Links: {{{2
                            
                            " Base: {{{3
    3              0.000034 syn region pandocReferenceLabel matchgroup=pandocOperator start=/!\{,1}\\\@<!\^\@<!\[/ skip=/\(\\\@<!\]\]\@=\|`.*\\\@<!].*`\)/ end=/\\\@<!\]/ keepend display
    3              0.000006 if g:pandoc#syntax#conceal#urls == 1
                                syn region pandocReferenceURL matchgroup=pandocOperator start=/\]\@1<=(/ end=/)/ keepend conceal
    3              0.000004 else
    3              0.000014     syn region pandocReferenceURL matchgroup=pandocOperator start=/\]\@1<=(/ end=/)/ keepend
    3              0.000003 endif
                            " let's not consider "a [label] a" as a label, remove formatting - Note: breaks implicit links
    3              0.000029 syn match pandocNoLabel /\]\@1<!\(\s\{,3}\|^\)\[[^\[\]]\{-}\]\(\s\+\|$\)[\[(]\@!/ contains=pandocPCite
    3              0.000016 syn match pandocLinkTip /\s*".\{-}"/ contained containedin=pandocReferenceURL contains=@Spell,pandocAmpersandEscape display
    3   0.000083   0.000032 call s:WithConceal('image', 'syn match pandocImageIcon /!\[\@=/ display', 'conceal cchar='. s:cchars['image'])
                            " }}}3
                            
                            " Definitions: {{{3
    3              0.000020 syn region pandocReferenceDefinition start=/\[.\{-}\]:/ end=/\(\n\s*".*"$\|$\)/ keepend
    3              0.000042 syn match pandocReferenceDefinitionLabel /\[\zs.\{-}\ze\]:/ contained containedin=pandocReferenceDefinition display
    3              0.000012 syn match pandocReferenceDefinitionAddress /:\s*\zs.*/ contained containedin=pandocReferenceDefinition
    3              0.000016 syn match pandocReferenceDefinitionTip /\s*".\{-}"/ contained containedin=pandocReferenceDefinition,pandocReferenceDefinitionAddress contains=@Spell,pandocAmpersandEscape
                            " }}}3
                            
                            " Automatic_links: {{{3
    3              0.000037 syn match pandocAutomaticLink /<\(https\{0,1}.\{-}\|[A-Za-z0-9!#$%&'*+\-/=?^_`{|}~.]\{-}@[A-Za-z0-9\-]\{-}\.\w\{-}\)>/ contains=NONE
                            " }}}3
                            
                            " }}}2
                            
                            " Citations: {{{2
                            " parenthetical citations
    3              0.000039 syn match pandocPCite "\^\@<!\[[^\[\]]\{-}-\{0,1}@[[:alnum:]_][[:digit:][:lower:][:upper:]_:.#$%&\-+?<>~/]*.\{-}\]" contains=pandocEmphasis,pandocStrong,pandocLatex,pandocCiteKey,@Spell,pandocAmpersandEscape display
                            " in-text citations with location
    3              0.000023 syn match pandocICite "@[[:alnum:]_][[:digit:][:lower:][:upper:]_:.#$%&\-+?<>~/]*\s\[.\{-1,}\]" contains=pandocCiteKey,@Spell display
                            " cite keys
    3              0.000031 syn match pandocCiteKey /\(-\=@[[:alnum:]_][[:digit:][:lower:][:upper:]_:.#$%&\-+?<>~/]*\)/ containedin=pandocPCite,pandocICite contains=@NoSpell display
    3              0.000010 syn match pandocCiteAnchor /[-@]/ contained containedin=pandocCiteKey display
    3              0.000010 syn match pandocCiteLocator /[\[\]]/ contained containedin=pandocPCite,pandocICite
                            " }}}2
                            
                            " Text Styles: {{{2
                            
                            " Emphasis: {{{3
    3   0.000116   0.000033 call s:WithConceal('block', 'syn region pandocEmphasis matchgroup=pandocOperator start=/\\\@1<!\(\_^\|\s\|[[:punct:]]\)\@<=\*\S\@=/ skip=/\(\*\*\|__\)/ end=/\*\([[:punct:]]\|\s\|\_$\)\@=/ contains=@Spell,pandocNoFormattedInEmphasis,pandocLatexInlineMath,pandocAmpersandEscape', 'concealends')
    3   0.000091   0.000024 call s:WithConceal('block', 'syn region pandocEmphasis matchgroup=pandocOperator start=/\\\@1<!\(\_^\|\s\|[[:punct:]]\)\@<=_\S\@=/ skip=/\(\*\*\|__\)/ end=/\S\@1<=_\([[:punct:]]\|\s\|\_$\)\@=/ contains=@Spell,pandocNoFormattedInEmphasis,pandocLatexInlineMath,pandocAmpersandEscape', 'concealends')
                            " }}}3
                            
                            " Strong: {{{3
    3   0.000092   0.000023 call s:WithConceal('block', 'syn region pandocStrong matchgroup=pandocOperator start=/\(\\\@<!\*\)\{2}/ end=/\(\\\@<!\*\)\{2}/ contains=@Spell,pandocNoFormattedInStrong,pandocLatexInlineMath,pandocAmpersandEscape', 'concealends')
    3   0.000073   0.000025 call s:WithConceal('block', 'syn region pandocStrong matchgroup=pandocOperator start=/__/ end=/__/ contains=@Spell,pandocNoFormattedInStrong,pandocLatexInlineMath,pandocAmpersandEscape', 'concealends')
                            " }}}3
                            
                            " Strong Emphasis: {{{3
    3   0.000078   0.000022 call s:WithConceal('block', 'syn region pandocStrongEmphasis matchgroup=pandocOperator start=/\*\{3}\(\S[^*]*\(\*\S\|\n[^*]*\*\S\)\)\@=/ end=/\S\@<=\*\{3}/ contains=@Spell,pandocAmpersandEscape', 'concealends')
    3   0.000065   0.000019 call s:WithConceal('block', 'syn region pandocStrongEmphasis matchgroup=pandocOperator start=/\(___\)\S\@=/ end=/\S\@<=___/ contains=@Spell,pandocAmpersandEscape', 'concealends')
                            " }}}3
                            
                            " Mixed: {{{3
    3   0.000066   0.000021 call s:WithConceal('block', 'syn region pandocStrongInEmphasis matchgroup=pandocOperator start=/\*\*/ end=/\*\*/ contained containedin=pandocEmphasis contains=@Spell,pandocAmpersandEscape', 'concealends')
    3   0.000069   0.000023 call s:WithConceal('block', 'syn region pandocStrongInEmphasis matchgroup=pandocOperator start=/__/ end=/__/ contained containedin=pandocEmphasis contains=@Spell,pandocAmpersandEscape', 'concealends')
    3   0.000089   0.000026 call s:WithConceal('block', 'syn region pandocEmphasisInStrong matchgroup=pandocOperator start=/\\\@1<!\(\_^\|\s\|[[:punct:]]\)\@<=\*\S\@=/ skip=/\(\*\*\|__\)/ end=/\S\@<=\*\([[:punct:]]\|\s\|\_$\)\@=/ contained containedin=pandocStrong contains=@Spell,pandocAmpersandEscape', 'concealends')
    3   0.000082   0.000025 call s:WithConceal('block', 'syn region pandocEmphasisInStrong matchgroup=pandocOperator start=/\\\@<!\(\_^\|\s\|[[:punct:]]\)\@<=_\S\@=/ skip=/\(\*\*\|__\)/ end=/\S\@<=_\([[:punct:]]\|\s\|\_$\)\@=/ contained containedin=pandocStrong contains=@Spell,pandocAmpersandEscape', 'concealends')
                            " }}}3
                            
                            " Inline Code: {{{3
                            " Using single back ticks
    3   0.000087   0.000044 call s:WithConceal('inlinecode', 'syn region pandocNoFormatted matchgroup=pandocOperator start=/\\\@<!`/ end=/\\\@<!`/ nextgroup=pandocNoFormattedAttrs', 'concealends')
    3   0.000068   0.000021 call s:WithConceal('inlinecode', 'syn region pandocNoFormattedInEmphasis matchgroup=pandocOperator start=/\\\@<!`/ end=/\\\@<!`/ nextgroup=pandocNoFormattedAttrs contained', 'concealends')
    3   0.000058   0.000020 call s:WithConceal('inlinecode', 'syn region pandocNoFormattedInStrong matchgroup=pandocOperator start=/\\\@<!`/ end=/\\\@<!`/ nextgroup=pandocNoFormattedAttrs contained', 'concealends')
                            " Using double back ticks
    3   0.000060   0.000019 call s:WithConceal('inlinecode', 'syn region pandocNoFormatted matchgroup=pandocOperator start=/\\\@<!``/ end=/\\\@<!``/ nextgroup=pandocNoFormattedAttrs', 'concealends')
    3   0.000064   0.000020 call s:WithConceal('inlinecode', 'syn region pandocNoFormattedInEmphasis matchgroup=pandocOperator start=/\\\@<!``/ end=/\\\@<!``/ nextgroup=pandocNoFormattedAttrs contained', 'concealends')
    3   0.000064   0.000019 call s:WithConceal('inlinecode', 'syn region pandocNoFormattedInStrong matchgroup=pandocOperator start=/\\\@<!``/ end=/\\\@<!``/ nextgroup=pandocNoFormattedAttrs contained', 'concealends')
    3              0.000009 syn match pandocNoFormattedAttrs /{.\{-}}/ contained
                            " }}}3
                            
                            " Subscripts: {{{3
    3              0.000023 syn region pandocSubscript start=/\~\(\([[:graph:]]\(\\ \)\=\)\{-}\~\)\@=/ end=/\~/ keepend
    3   0.000069   0.000027 call s:WithConceal('subscript', 'syn match pandocSubscriptMark /\~/ contained containedin=pandocSubscript', 'conceal cchar='.s:cchars['sub'])
                            " }}}3
                            
                            " Superscript: {{{3
    3              0.000022 syn region pandocSuperscript start=/\^\(\([[:graph:]]\(\\ \)\=\)\{-}\^\)\@=/ skip=/\\ / end=/\^/ keepend
    3   0.000059   0.000020 call s:WithConceal('superscript', 'syn match pandocSuperscriptMark /\^/ contained containedin=pandocSuperscript', 'conceal cchar='.s:cchars['super'])
                            " }}}3
                            
                            " Strikeout: {{{3
    3              0.000019 syn region pandocStrikeout start=/\~\~/ end=/\~\~/ contains=@Spell,pandocAmpersandEscape keepend
    3   0.000061   0.000020 call s:WithConceal('strikeout', 'syn match pandocStrikeoutMark /\~\~/ contained containedin=pandocStrikeout', 'conceal cchar='.s:cchars['strike'])
                            " }}}3
                            
                            " }}}2
                            
                            " Headers: {{{2
    3              0.000040 syn match pandocAtxHeader /\(\%^\|<.\+>.*\n\|^\s*\n\)\@<=#\{1,6}.*\n/ contains=pandocEmphasis,pandocStrong,pandocNoFormatted,pandocLaTeXInlineMath,pandocEscapedDollar,@Spell,pandocAmpersandEscape,pandocReferenceLabel,pandocReferenceURL display
    3              0.000020 syn match pandocAtxHeaderMark /\(^#\{1,6}\|\\\@<!#\+\(\s*.*$\)\@=\)/ contained containedin=pandocAtxHeader
    3   0.000061   0.000023 call s:WithConceal('atx', 'syn match pandocAtxStart /#/ contained containedin=pandocAtxHeaderMark', 'conceal cchar='.s:cchars['atx'])
    3              0.000025 syn match pandocSetexHeader /^.\+\n[=]\+$/ contains=pandocEmphasis,pandocStrong,pandocNoFormatted,pandocLaTeXInlineMath,pandocEscapedDollar,@Spell,pandocAmpersandEscape
    3              0.000029 syn match pandocSetexHeader /^.\+\n[-]\+$/ contains=pandocEmphasis,pandocStrong,pandocNoFormatted,pandocLaTeXInlineMath,pandocEscapedDollar,@Spell,pandocAmpersandEscape
    3              0.000011 syn match pandocHeaderAttr /{.*}/ contained containedin=pandocAtxHeader,pandocSetexHeader
    3              0.000013 syn match pandocHeaderID /#[-_:.[:lower:][:upper:]]*/ contained containedin=pandocHeaderAttr
                            " }}}2
                            
                            " Line Blocks: {{{2
    3              0.000036 syn region pandocLineBlock start=/^|/ end=/\(^|\(.*\n|\@!\)\@=.*\)\@<=\n/ transparent
    3              0.000008 syn match pandocLineBlockDelimiter /^|/ contained containedin=pandocLineBlock
                            " }}}2
                            
                            " Tables: {{{2
                            
                            " Simple: {{{3
    3              0.000037 syn region pandocSimpleTable start=/\%#=2\(^.*[[:graph:]].*\n\)\@<!\(^.*[[:graph:]].*\n\)\(-\{2,}\s*\)\+\n\n\@!/ end=/\n\n/ containedin=ALLBUT,pandocDelimitedCodeBlock,pandocDelimitedCodeBlockStart,pandocYAMLHeader keepend
    3              0.000009 syn match pandocSimpleTableDelims /\-/ contained containedin=pandocSimpleTable
    3              0.000014 syn match pandocSimpleTableHeader /\%#=2\(^.*[[:graph:]].*\n\)\@<!\(^.*[[:graph:]].*\n\)/ contained containedin=pandocSimpleTable
                            
    3              0.000042 syn region pandocTable start=/\%#=2^\(-\{2,}\s*\)\+\n\n\@!/ end=/\%#=2^\(-\{2,}\s*\)\+\n\n/ containedin=ALLBUT,pandocDelimitedCodeBlock,pandocYAMLHeader keepend
    3              0.000008 syn match pandocTableDelims /\-/ contained containedin=pandocTable
    3              0.000019 syn region pandocTableMultilineHeader start=/\%#=2\(^-\{2,}\n\)\@<=./ end=/\%#=2\n-\@=/ contained containedin=pandocTable
                            " }}}3
                            
                            " Grid: {{{3
    3              0.000027 syn region pandocGridTable start=/\%#=2\n\@1<=+-/ end=/+\n\n/ containedin=ALLBUT,pandocDelimitedCodeBlock,pandocYAMLHeader keepend
    3              0.000030 syn match pandocGridTableDelims /[\|=]/ contained containedin=pandocGridTable
    3              0.000021 syn match pandocGridTableDelims /\%#=2\([\-+][\-+=]\@=\|[\-+=]\@1<=[\-+]\)/ contained containedin=pandocGridTable
    3              0.000010 syn match pandocGridTableHeader /\%#=2\(^.*\n\)\(+=.*\)\@=/ contained containedin=pandocGridTable
                            " }}}3
                            
                            " Pipe: {{{3
                            " with beginning and end pipes
    3              0.000030 syn region pandocPipeTable start=/\%#=2\([+|]\n\)\@<!\n\@1<=|\(.*|\)\@=/ end=/|.*\n\(\n\|{\)/ containedin=ALLBUT,pandocDelimitedCodeBlock,pandocYAMLHeader keepend
                            " without beginning and end pipes
    3              0.000018 syn region pandocPipeTable start=/\%#=2^.*\n-.\{-}|/ end=/|.*\n\n/ keepend
    3              0.000010 syn match pandocPipeTableDelims /[\|\-:+]/ contained containedin=pandocPipeTable
    3              0.000011 syn match pandocPipeTableHeader /\(^.*\n\)\(|-\)\@=/ contained containedin=pandocPipeTable
    3              0.000009 syn match pandocPipeTableHeader /\(^.*\n\)\(-\)\@=/ contained containedin=pandocPipeTable
                            " }}}3
                            
    3              0.000014 syn match pandocTableHeaderWord /\<.\{-}\>/ contained containedin=pandocGridTableHeader,pandocPipeTableHeader contains=@Spell
                            " }}}2
                            
                            " Delimited Code Blocks: {{{2
                            " this is here because we can override strikeouts and subscripts
    3              0.000033 syn region pandocDelimitedCodeBlock start=/^\(>\s\)\?\z(\([ ]\+\|\t\)\=\~\{3,}\~*\)/ end=/^\z1\~*/ skipnl contains=pandocDelimitedCodeBlockStart,pandocDelimitedCodeBlockEnd keepend
    3              0.000031 syn region pandocDelimitedCodeBlock start=/^\(>\s\)\?\z(\([ ]\+\|\t\)\=`\{3,}`*\)/ end=/^\z1`*/ skipnl contains=pandocDelimitedCodeBlockStart,pandocDelimitedCodeBlockEnd keepend
    3   0.000105   0.000032 call s:WithConceal('codeblock_start', 'syn match pandocDelimitedCodeBlockStart /\(\(\_^\n\_^\|\%^\)\(>\s\)\?\( \+\|\t\)\=\)\@<=\(\~\{3,}\~*\|`\{3,}`*\)/ contained containedin=pandocDelimitedCodeBlock nextgroup=pandocDelimitedCodeBlockLanguage', 'conceal cchar='.s:cchars['codelang'])
    3              0.000020 syn match pandocDelimitedCodeBlockLanguage /\(\s\?\)\@<=.\+\(\_$\)\@=/ contained
    3   0.000075   0.000025 call s:WithConceal('codeblock_delim', 'syn match pandocDelimitedCodeBlockEnd /\(`\{3,}`*\|\~\{3,}\~*\)\(\_$\n\(>\s\)\?\_$\)\@=/ contained containedin=pandocDelimitedCodeBlock', 'conceal cchar='.s:cchars['codeend'])
    3              0.000010 syn match pandocBlockQuoteinDelimitedCodeBlock '^>' contained containedin=pandocDelimitedCodeBlock
    3              0.000020 syn match pandocCodePre /<pre>.\{-}<\/pre>/ skipnl
    3              0.000013 syn match pandocCodePre /<code>.\{-}<\/code>/ skipnl
                            
                            " enable highlighting for embedded region in codeblocks if there exists a
                            " g:pandoc#syntax#codeblocks#embeds#langs *list*.
                            "
                            " entries in this list are the language code interpreted by pandoc,
                            " if this differs from the name of the vim syntax file, append =vimname
                            " e.g. let g:pandoc#syntax#codeblocks#embeds#langs = ["haskell", "literatehaskell=lhaskell"]
                            "
    3              0.000006 if g:pandoc#syntax#codeblocks#embeds#use != 0
    3              0.000008     for l in g:pandoc#syntax#codeblocks#embeds#langs
                                  call EnableEmbedsforCodeblocksWithLang(l)
    3              0.000003     endfor
    3              0.000002 endif
                            " }}}2
                            
                            " Abbreviations: {{{2
    3              0.000025 syn region pandocAbbreviationDefinition start=/^\*\[.\{-}\]:\s*/ end='$' contains=pandocNoFormatted,@Spell,pandocAmpersandEscape
    3   0.000060   0.000024 call s:WithConceal('abbrev', 'syn match pandocAbbreviationSeparator /:/ contained containedin=pandocAbbreviationDefinition', 'conceal cchar='.s:cchars['abbrev'])
    3              0.000012 syn match pandocAbbreviation /\*\[.\{-}\]/ contained containedin=pandocAbbreviationDefinition
    3   0.000054   0.000020 call s:WithConceal('abbrev', 'syn match pandocAbbreviationHead /\*\[/ contained containedin=pandocAbbreviation', 'conceal')
    3   0.000053   0.000021 call s:WithConceal('abbrev', 'syn match pandocAbbreviationTail /\]/ contained containedin=pandocAbbreviation', 'conceal')
                            " }}}2
                            
                            " Footnotes: {{{2
                            " we put these here not to interfere with superscripts.
    3              0.000016 syn match pandocFootnoteID /\[\^[^\]]\+\]/ nextgroup=pandocFootnoteDef
                            
                            "   Inline footnotes
    3              0.000049 syn region pandocFootnoteDef start=/\^\[/ skip=/\[.\{-}]/ end=/\]/ contains=pandocReferenceLabel,pandocReferenceURL,pandocLatex,pandocPCite,pandocCiteKey,pandocStrong,pandocEmphasis,pandocStrongEmphasis,pandocNoFormatted,pandocSuperscript,pandocSubscript,pandocStrikeout,pandocEnDash,pandocEmDash,pandocEllipses,pandocBeginQuote,pandocEndQuote,@Spell,pandocAmpersandEscape skipnl keepend
    3   0.000091   0.000054 call s:WithConceal('footnote', 'syn match pandocFootnoteDefHead /\^\[/ contained containedin=pandocFootnoteDef', 'conceal cchar='.s:cchars['footnote'])
    3   0.000051   0.000017 call s:WithConceal('footnote', 'syn match pandocFootnoteDefTail /\]/ contained containedin=pandocFootnoteDef', 'conceal')
                            
                            " regular footnotes
    3              0.000055 syn region pandocFootnoteBlock start=/\[\^.\{-}\]:\s*\n*/ end=/^\n^\s\@!/ contains=pandocReferenceLabel,pandocReferenceURL,pandocLatex,pandocPCite,pandocCiteKey,pandocStrong,pandocEmphasis,pandocNoFormatted,pandocSuperscript,pandocSubscript,pandocStrikeout,pandocEnDash,pandocEmDash,pandocNewLine,pandocStrongEmphasis,pandocEllipses,pandocBeginQuote,pandocEndQuote,pandocLaTeXInlineMath,pandocEscapedDollar,pandocLaTeXCommand,pandocLaTeXMathBlock,pandocLaTeXRegion,pandocAmpersandEscape,@Spell skipnl
    3              0.000013 syn match pandocFootnoteBlockSeparator /:/ contained containedin=pandocFootnoteBlock
    3              0.000011 syn match pandocFootnoteID /\[\^.\{-}\]/ contained containedin=pandocFootnoteBlock
    3   0.000066   0.000023 call s:WithConceal('footnote', 'syn match pandocFootnoteIDHead /\[\^/ contained containedin=pandocFootnoteID', 'conceal cchar='.s:cchars['footnote'])
    3   0.000051   0.000018 call s:WithConceal('footnote', 'syn match pandocFootnoteIDTail /\]/ contained containedin=pandocFootnoteID', 'conceal')
                            " }}}2
                            
                            " List Items: {{{2
                            " Unordered lists
    3              0.000096 syn match pandocUListItem /^>\=\s*[*+-]\s\+-\@!.*$/ nextgroup=pandocUListItem,pandocLaTeXMathBlock,pandocLaTeXInlineMath,pandocEscapedDollar,pandocDelimitedCodeBlock,pandocListItemContinuation contains=@Spell,pandocEmphasis,pandocStrong,pandocNoFormatted,pandocStrikeout,pandocSubscript,pandocSuperscript,pandocStrongEmphasis,pandocStrongEmphasis,pandocPCite,pandocICite,pandocCiteKey,pandocReferenceLabel,pandocLaTeXCommand,pandocLaTeXMathBlock,pandocLaTeXInlineMath,pandocEscapedDollar,pandocReferenceURL,pandocAutomaticLink,pandocFootnoteDef,pandocFootnoteBlock,pandocFootnoteID,pandocAmpersandEscape skipempty display
    3   0.000063   0.000024 call s:WithConceal('list', 'syn match pandocUListItemBullet /^>\=\s*\zs[*+-]/ contained containedin=pandocUListItem', 'conceal cchar='.s:cchars['li'])
                            
                            " Ordered lists
    3              0.000066 syn match pandocListItem /^\s*(\?\(\d\+\|\l\|\#\|@\)[.)].*$/ nextgroup=pandocListItem,pandocLaTeXMathBlock,pandocLaTeXInlineMath,pandocEscapedDollar,pandocDelimitedCodeBlock,pandocListItemContinuation contains=@Spell,pandocEmphasis,pandocStrong,pandocNoFormatted,pandocStrikeout,pandocSubscript,pandocSuperscript,pandocStrongEmphasis,pandocStrongEmphasis,pandocPCite,pandocICite,pandocCiteKey,pandocReferenceLabel,pandocLaTeXCommand,pandocLaTeXMathBlock,pandocLaTeXInlineMath,pandocEscapedDollar,pandocAutomaticLink,pandocFootnoteDef,pandocFootnoteBlock,pandocFootnoteID,pandocAmpersandEscape skipempty display
                            
                            " support for roman numerals up to 'c'
    3              0.000008 if g:pandoc#syntax#roman_lists != 0
                                syn match pandocListItem /^\s*(\?x\=l\=\(i\{,3}[vx]\=\)\{,3}c\{,3}[.)].*$/ nextgroup=pandocListItem,pandocMathBlock,pandocLaTeXInlineMath,pandocEscapedDollar,pandocDelimitedCodeBlock,pandocListItemContinuation,pandocAutomaticLink skipempty display
    3              0.000003 endif
    3              0.000025 syn match pandocListItemBullet /^(\?.\{-}[.)]/ contained containedin=pandocListItem
    3              0.000051 syn match pandocListItemBulletId /\(\d\+\|\l\|\#\|@.\{-}\|x\=l\=\(i\{,3}[vx]\=\)\{,3}c\{,3}\)/ contained containedin=pandocListItemBullet
                            
    3              0.000087 syn match pandocListItemContinuation /^\s\+\([-+*]\s\+\|(\?.\+[).]\)\@<!\([[:upper:][:lower:]_"[]\|\*\S\)\@=.*$/ nextgroup=pandocLaTeXMathBlock,pandocLaTeXInlineMath,pandocEscapedDollar,pandocDelimitedCodeBlock,pandocListItemContinuation,pandocListItem contains=@Spell,pandocEmphasis,pandocStrong,pandocNoFormatted,pandocStrikeout,pandocSubscript,pandocSuperscript,pandocStrongEmphasis,pandocStrongEmphasis,pandocPCite,pandocICite,pandocCiteKey,pandocReferenceLabel,pandocReferenceURL,pandocLaTeXCommand,pandocLaTeXMathBlock,pandocLaTeXInlineMath,pandocEscapedDollar,pandocAutomaticLink,pandocFootnoteDef,pandocFootnoteBlock,pandocFootnoteID,pandocAmpersandEscape contained skipempty display
                            " }}}2
                            
                            " Definitions: {{{2
    3              0.000040 if g:pandoc#syntax#use_definition_lists == 1
    3              0.000090     syn region pandocDefinitionBlock start=/^\%(\_^\s*\([`~]\)\1\{2,}\)\@!.*\n\(^\s*\n\)\=\s\{0,2}\([:~]\)\(\3\{2,}\3*\)\@!/ skip=/\n\n\zs\s/ end=/\n\n/ contains=pandocDefinitionBlockMark,pandocDefinitionBlockTerm,pandocCodeBlockInsideIndent,pandocEmphasis,pandocStrong,pandocStrongEmphasis,pandocNoFormatted,pandocStrikeout,pandocSubscript,pandocSuperscript,pandocFootnoteID,pandocReferenceURL,pandocReferenceLabel,pandocLaTeXMathBlock,pandocLaTeXInlineMath,pandocEscapedDollar,pandocAutomaticLink,pandocEmDash,pandocEnDash,pandocFootnoteDef,pandocFootnoteBlock,pandocFootnoteID
    3              0.000031     syn match pandocDefinitionBlockTerm /^.*\n\(^\s*\n\)\=\(\s*[:~]\)\@=/ contained contains=pandocNoFormatted,pandocEmphasis,pandocStrong,pandocLaTeXInlineMath,pandocEscapedDollar,pandocFootnoteDef,pandocFootnoteBlock,pandocFootnoteID nextgroup=pandocDefinitionBlockMark
    3   0.000082   0.000029     call s:WithConceal('definition', 'syn match pandocDefinitionBlockMark /^\s*[:~]/ contained', 'conceal cchar='.s:cchars['definition'])
    3              0.000002 endif
                            " }}}2
                            
                            " Special: {{{2
                            
                            " New_lines: {{{3
    3              0.000007 if g:pandoc#syntax#newlines == 1
    3   0.000133   0.000042   call s:WithConceal('newline', 'syn match pandocNewLine /\%(\%(\S\)\@<= \{2,}\|\\\)$/ display containedin=pandocEmphasis,pandocStrong,pandocStrongEmphasis,pandocStrongInEmphasis,pandocEmphasisInStrong', 'conceal cchar='.s:cchars['newline'])
    3              0.000003 endif
                            " }}}3
                            
                            " Emdashes: {{{3
    3              0.000013 if &encoding ==# 'utf-8'
    3   0.000072   0.000021   call s:WithConceal('emdashes', 'syn match pandocEllipses /\([^-]\)\@<=---\([^-]\)\@=/ display', 'conceal cchar=—')
    3              0.000002 endif
                            " }}}3
                            
                            " Endashes: {{{3
    3              0.000008 if &encoding ==# 'utf-8'
    3   0.000058   0.000018   call s:WithConceal('endashes', 'syn match pandocEllipses /\([^-]\)\@<=--\([^-]\)\@=/ display', 'conceal cchar=–')
    3              0.000002 endif
                            " }}}3
                            
                            " Ellipses: {{{3
    3              0.000008 if &encoding ==# 'utf-8'
    3   0.000057   0.000021     call s:WithConceal('ellipses', 'syn match pandocEllipses /\.\.\./ display', 'conceal cchar=…')
    3              0.000002 endif
                            " }}}3
                            
                            " Quotes: {{{3
    3              0.000006 if &encoding ==# 'utf-8'
    3   0.000071   0.000027     call s:WithConceal('quotes', 'syn match pandocBeginQuote /"\</  containedin=pandocEmphasis,pandocStrong,pandocListItem,pandocListItemContinuation,pandocUListItem display', 'conceal cchar='.s:cchars['quote_s'])
    3   0.000077   0.000024     call s:WithConceal('quotes', 'syn match pandocEndQuote /\(\>[[:punct:]]*\)\@<="[[:blank:][:punct:]\n]\@=/  containedin=pandocEmphasis,pandocStrong,pandocUListItem,pandocListItem,pandocListItemContinuation display', 'conceal cchar='.s:cchars['quote_e'])
    3              0.000002 endif
                            " }}}3
                            
                            " Hrule: {{{3
    3              0.000033 syn match pandocHRule /^\s*\([*\-_]\)\s*\%(\1\s*\)\{2,}$/ display
                            " }}}3
                            
                            " Backslashes: {{{3
    3              0.000008 if g:pandoc#syntax#conceal#backslash == 1
                                syn match pandocBackslash /\v\\@<!\\((re)?newcommand)@!/ containedin=ALLBUT,pandocCodeblock,pandocCodeBlockInsideIndent,pandocNoFormatted,pandocNoFormattedInEmphasis,pandocNoFormattedInStrong,pandocDelimitedCodeBlock,pandocLineBlock,pandocYAMLHeader conceal
    3              0.000003 endif
                            " }}}3
                            
                            " &-escaped Special Characters: {{{3
    3              0.000045 syn match pandocAmpersandEscape /\v\&(#\d+|#x\x+|[[:alnum:]]+)\;/ contains=NoSpell
                            " }}}3
                            
                            " YAML: {{{2
    3              0.000003 try
    3              0.000027     unlet! b:current_syntax
    3   0.008067   0.003809     syn include @YAML syntax/yaml.vim
                            catch /E484/
    3              0.000006 endtry
    3              0.000087 syn region pandocYAMLHeader start=/\%(\%^\|\_^\s*\n\)\@<=\_^-\{3}\ze\n.\+/ end=/^\([-.]\)\1\{2}$/ keepend contains=@YAML containedin=TOP
                            " }}}2
                            
                            " }}}1
                            
                            " Styling: {{{1
    3              0.000009 function! s:SetupPandocHighlights()
                            
                              hi def link pandocOperator Operator
                            
                              " override this for consistency
                              hi pandocTitleBlock term=italic gui=italic
                              hi def link pandocTitleBlockTitle Directory
                              hi def link pandocAtxHeader Title
                              hi def link pandocAtxStart Operator
                              hi def link pandocSetexHeader Title
                              hi def link pandocHeaderAttr Comment
                              hi def link pandocHeaderID Identifier
                            
                              hi def link pandocLaTexSectionCmd texSection
                              hi def link pandocLaTeXDelimiter texDelimiter
                            
                              hi def link pandocHTMLComment Comment
                              hi def link pandocHTMLCommentStart Delimiter
                              hi def link pandocHTMLCommentEnd Delimiter
                              hi def link pandocBlockQuote Comment
                              hi def link pandocBlockQuoteMark Comment
                              hi def link pandocAmpersandEscape Special
                            
                              " if the user sets g:pandoc#syntax#codeblocks#ignore to contain
                              " a codeblock type, don't highlight it so that it remains Normal
                              if index(g:pandoc#syntax#codeblocks#ignore, 'definition') == -1
                                hi def link pandocCodeBlockInsideIndent String
                              endif
                            
                              if index(g:pandoc#syntax#codeblocks#ignore, 'delimited') == -1
                                hi def link pandocDelimitedCodeBlock Special
                              endif
                            
                              hi def link pandocDelimitedCodeBlockStart Delimiter
                              hi def link pandocDelimitedCodeBlockEnd Delimiter
                              hi def link pandocDelimitedCodeBlockLanguage Comment
                              hi def link pandocBlockQuoteinDelimitedCodeBlock pandocBlockQuote
                              hi def link pandocCodePre String
                            
                              hi def link pandocLineBlockDelimiter Delimiter
                            
                              hi def link pandocListItemBullet Operator
                              hi def link pandocUListItemBullet Operator
                              hi def link pandocListItemBulletId Identifier
                            
                              hi def link pandocReferenceLabel Label
                              hi def link pandocReferenceURL Underlined
                              hi def link pandocLinkTip Identifier
                              hi def link pandocImageIcon Operator
                            
                              hi def link pandocReferenceDefinition Operator
                              hi def link pandocReferenceDefinitionLabel Label
                              hi def link pandocReferenceDefinitionAddress Underlined
                              hi def link pandocReferenceDefinitionTip Identifier
                            
                              hi def link pandocAutomaticLink Underlined
                            
                              hi def link pandocDefinitionBlockTerm Identifier
                              hi def link pandocDefinitionBlockMark Operator
                            
                              hi def link pandocSimpleTableDelims Delimiter
                              hi def link pandocSimpleTableHeader pandocStrong
                              hi def link pandocTableMultilineHeader pandocStrong
                              hi def link pandocTableDelims Delimiter
                              hi def link pandocGridTableDelims Delimiter
                              hi def link pandocGridTableHeader Delimiter
                              hi def link pandocPipeTableDelims Delimiter
                              hi def link pandocPipeTableHeader Delimiter
                              hi def link pandocTableHeaderWord pandocStrong
                            
                              hi def link pandocAbbreviationHead Type
                              hi def link pandocAbbreviation Label
                              hi def link pandocAbbreviationTail Type
                              hi def link pandocAbbreviationSeparator Identifier
                              hi def link pandocAbbreviationDefinition Comment
                            
                              hi def link pandocFootnoteID Label
                              hi def link pandocFootnoteIDHead Type
                              hi def link pandocFootnoteIDTail Type
                              hi def link pandocFootnoteDef Comment
                              hi def link pandocFootnoteDefHead Type
                              hi def link pandocFootnoteDefTail Type
                              hi def link pandocFootnoteBlock Comment
                              hi def link pandocFootnoteBlockSeparator Operator
                            
                              hi def link pandocPCite Operator
                              hi def link pandocICite Operator
                              hi def link pandocCiteKey Label
                              hi def link pandocCiteAnchor Operator
                              hi def link pandocCiteLocator Operator
                            
                              if g:pandoc#syntax#style#emphases == 1
                                  hi pandocEmphasis gui=italic cterm=italic
                                  hi pandocStrong gui=bold cterm=bold
                                  hi pandocStrongEmphasis gui=bold,italic cterm=bold,italic
                                  hi pandocStrongInEmphasis gui=bold,italic cterm=bold,italic
                                  hi pandocEmphasisInStrong gui=bold,italic cterm=bold,italic
                                  if !exists('s:hi_tail')
                                      let s:fg = '' " Vint can't figure ou these get set dynamically
                                      let s:bg = '' " so initialize them manually first
                                      for s:i in ['fg', 'bg']
                                          let s:tmp_val = synIDattr(synIDtrans(hlID('String')), s:i)
                                          let s:tmp_ui =  has('gui_running') || (has('termguicolors') && &termguicolors) ? 'gui' : 'cterm'
                                          if !empty(s:tmp_val) && s:tmp_val != -1
                                              exe 'let s:'.s:i . ' = "'.s:tmp_ui.s:i.'='.s:tmp_val.'"'
                                          else
                                              exe 'let s:'.s:i . ' = ""'
                                          endif
                                      endfor
                                      let s:hi_tail = ' '.s:fg.' '.s:bg
                                  endif
                                  exe 'hi pandocNoFormattedInEmphasis gui=italic cterm=italic'.s:hi_tail
                                  exe 'hi pandocNoFormattedInStrong gui=bold cterm=bold'.s:hi_tail
                              endif
                              hi def link pandocNoFormatted String
                              hi def link pandocNoFormattedAttrs Comment
                              hi def link pandocSubscriptMark Operator
                              hi def link pandocSuperscriptMark Operator
                              hi def link pandocStrikeoutMark Operator
                              if g:pandoc#syntax#style#underline_special == 1
                                  hi pandocSubscript gui=underline cterm=underline
                                  hi pandocSuperscript gui=underline cterm=underline
                                  hi pandocStrikeout gui=underline cterm=underline
                              endif
                              hi def link pandocNewLine Error
                              hi def link pandocHRule Delimiter
                            endfunction
                            
    3   0.000707   0.000034 call s:SetupPandocHighlights()
                            
                            " }}}1
                            
    3              0.000007 let b:current_syntax = 'pandoc'
                            
    3              0.000007 syntax sync clear
    3              0.000005 syntax sync minlines=1000
                            
    3   0.000037   0.000023 let &cpo = s:cpo_save
    3              0.000006 unlet s:cpo_save
                            
                            " vim: set fdm=marker foldlevel=0:

SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax\html.vim
Sourced 9 times
Total time:   0.252356
 Self time:   0.076446

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:		HTML
                            " Maintainer:		Doug Kearns <dougkearns@gmail.com>
                            " Previous Maintainers: Jorge Maldonado Ventura <jorgesumle@freakspot.net>
                            "			Claudio Fleiner <claudio@fleiner.com>
                            " Last Change:		2023 Nov 28
                            
                            " See :help html.vim for some comments and a description of the options
                            
                            " quit when a syntax file was already loaded
    9              0.000054 if !exists("main_syntax")
    3              0.000008   if exists("b:current_syntax")
                                finish
    3              0.000003   endif
    3              0.000008   let main_syntax = 'html'
    9              0.000007 endif
                            
    9              0.000027 let s:cpo_save = &cpo
    9   0.000126   0.000070 set cpo&vim
                            
    9              0.000025 syntax spell toplevel
                            
    9   0.024485   0.010253 syn include @htmlXml syntax/xml.vim
    9              0.000022 unlet b:current_syntax
                            
    9              0.000017 syn case ignore
                            
                            " mark illegal characters
    9              0.000033 syn match htmlError "[<>&]"
                            
                            " tags
    9              0.000067 syn region  htmlString	 contained start=+"+ end=+"+ contains=htmlSpecialChar,javaScriptExpression,@htmlPreproc
    9              0.000045 syn region  htmlString	 contained start=+'+ end=+'+ contains=htmlSpecialChar,javaScriptExpression,@htmlPreproc
    9              0.000098 syn match   htmlValue	 contained "=[\t ]*[^'" \t>][^ \t>]*"hs=s+1   contains=javaScriptExpression,@htmlPreproc
    9              0.000047 syn region  htmlEndTag		   start=+</+	   end=+>+ contains=htmlTagN,htmlTagError
    9              0.000092 syn region  htmlTag		   start=+<[^/]+   end=+>+ fold contains=htmlTagN,htmlString,htmlArg,htmlValue,htmlTagError,htmlEvent,htmlCssDefinition,@htmlPreproc,@htmlArgCluster
    9              0.000087 syn match   htmlTagN	 contained +<\s*[-a-zA-Z0-9]\++hs=s+1 contains=htmlTagName,htmlSpecialTagName,@htmlTagNameCluster
    9              0.000058 syn match   htmlTagN	 contained +</\s*[-a-zA-Z0-9]\++hs=s+2 contains=htmlTagName,htmlSpecialTagName,@htmlTagNameCluster
    9              0.000023 syn match   htmlTagError contained "[^>]<"ms=s+1
                            
                            " tag names
    9              0.000037 syn keyword htmlTagName contained address applet area a base basefont
    9              0.000032 syn keyword htmlTagName contained big blockquote br caption center
    9              0.000043 syn keyword htmlTagName contained cite code dd dfn dir div dl dt font
    9              0.000023 syn keyword htmlTagName contained form hr html img
    9              0.000033 syn keyword htmlTagName contained input isindex kbd li link map menu
    9              0.000032 syn keyword htmlTagName contained meta ol option param pre p samp span
    9              0.000030 syn keyword htmlTagName contained select small strike sub sup
    9              0.000036 syn keyword htmlTagName contained table td textarea th tr tt ul var xmp
    9              0.000061 syn match   htmlTagName contained "\<\%(b\|i\|u\|h[1-6]\|em\|strong\|head\|body\|title\)\>"
                            
                            " new html 4.0 tags
    9              0.000029 syn keyword htmlTagName contained abbr acronym bdo button col colgroup
    9              0.000027 syn keyword htmlTagName contained del fieldset iframe ins label legend
    9              0.000029 syn keyword htmlTagName contained object optgroup q s tbody tfoot thead
                            
                            " new html 5 tags
    9              0.000029 syn keyword htmlTagName contained article aside audio bdi canvas data
    9              0.000032 syn keyword htmlTagName contained datalist details dialog embed figcaption
    9              0.000035 syn keyword htmlTagName contained figure footer header hgroup keygen main
    9              0.000027 syn keyword htmlTagName contained mark menuitem meter nav output picture
    9              0.000032 syn keyword htmlTagName contained progress rb rp rt rtc ruby search section
    9              0.000031 syn keyword htmlTagName contained slot source summary template time track
    9              0.000014 syn keyword htmlTagName contained video wbr
                            
                            " svg and math tags
    9              0.000013 syn keyword htmlMathTagName contained math
    9              0.000013 syn keyword htmlSvgTagName  contained svg
                            
    9              0.000065 syn region  htmlMath start="<math>" end="</math>" contains=@htmlXml transparent keepend
    9              0.000073 syn region  htmlSvg  start="<svg>"  end="</svg>"  contains=@htmlXml transparent keepend
                            
    9              0.000043 syn cluster xmlTagHook	add=htmlMathTagName,htmlSvgTagName
                            
                            " legal arg names
    9              0.000015 syn keyword htmlArg contained action
    9              0.000027 syn keyword htmlArg contained align alink alt archive background bgcolor
    9              0.000029 syn keyword htmlArg contained border bordercolor cellpadding
    9              0.000035 syn keyword htmlArg contained cellspacing checked class clear code codebase color
    9              0.000039 syn keyword htmlArg contained cols colspan content coords enctype face
    9              0.000022 syn keyword htmlArg contained gutter height hspace id
    9              0.000020 syn keyword htmlArg contained link lowsrc marginheight
    9              0.000034 syn keyword htmlArg contained marginwidth maxlength method name prompt
    9              0.000030 syn keyword htmlArg contained rel rev rows rowspan scrolling selected shape
    9              0.000035 syn keyword htmlArg contained size src start target text type url
    9              0.000100 syn keyword htmlArg contained usemap ismap valign value vlink vspace width wrap
    9              0.000056 syn match   htmlArg contained "\<\%(http-equiv\|href\|title\)="me=e-1
                            
    9              0.000015 syn keyword htmlArg contained role
                            
                            " ARIA attributes {{{1
    9              0.000017 let s:aria =<< trim END
                              activedescendant
                              atomic
                              autocomplete
                              braillelabel
                              brailleroledescription
                              busy
                              checked
                              colcount
                              colindex
                              colindextext
                              colspan
                              controls
                              current
                              describedby
                              description
                              details
                              disabled
                              errormessage
                              expanded
                              flowto
                              haspopup
                              hidden
                              invalid
                              keyshortcuts
                              label
                              labelledby
                              level
                              live
                              modal
                              multiline
                              multiselectable
                              orientation
                              owns
                              placeholder
                              posinset
                              pressed
                              readonly
                              relevant
                              required
                              roledescription
                              rowcount
                              rowindex
                              rowindextext
                              rowspan
                              selected
                              setsize
                              sort
                              valuemax
                              valuemin
                              valuenow
                              valuetext
                            END
    9              0.000013 let s:aria_deprecated =<< trim END
                              dropeffect
                              grabbed
                            END
                            
    9              0.000082 call extend(s:aria, s:aria_deprecated)
    9              0.000574 exe 'syn match htmlArg contained "\%#=1\<aria-\%(' .. s:aria->join('\|') .. '\)\>"'
    9              0.000063 unlet s:aria s:aria_deprecated
                            " }}}
                            
                            " Netscape extensions
    9              0.000043 syn keyword htmlTagName contained frame noframes frameset nobr blink
    9              0.000043 syn keyword htmlTagName contained layer ilayer nolayer spacer
    9              0.000030 syn keyword htmlArg	contained frameborder noresize pagex pagey above below
    9              0.000034 syn keyword htmlArg	contained left top visibility clip id noshade
    9              0.000034 syn match   htmlArg	contained "\<z-index\>"
                            
                            " Microsoft extensions
    9              0.000013 syn keyword htmlTagName contained marquee
                            
                            " html 4.0 arg names
    9              0.000046 syn match   htmlArg contained "\<\%(accept-charset\|label\)\>"
    9              0.000035 syn keyword htmlArg contained abbr accept accesskey axis char charoff charset
    9              0.000032 syn keyword htmlArg contained cite classid codetype compact data datetime
    9              0.000031 syn keyword htmlArg contained declare defer dir disabled for frame
    9              0.000025 syn keyword htmlArg contained headers hreflang lang language longdesc
    9              0.000031 syn keyword htmlArg contained multiple nohref nowrap object profile readonly
    9              0.000029 syn keyword htmlArg contained rules scheme scope span standby style
    9              0.000023 syn keyword htmlArg contained summary tabindex valuetype version
                            
                            " html 5 arg names
    9              0.000028 syn keyword htmlArg contained allow autocapitalize as blocking decoding
    9              0.000028 syn keyword htmlArg contained enterkeyhint imagesizes imagesrcset inert
    9              0.000028 syn keyword htmlArg contained integrity is itemid itemprop itemref itemscope
    9              0.000027 syn keyword htmlArg contained itemtype loading nomodule ping playsinline
    9              0.000026 syn keyword htmlArg contained referrerpolicy slot allowfullscreen async
    9              0.000024 syn keyword htmlArg contained autocomplete autofocus autoplay challenge
    9              0.000030 syn keyword htmlArg contained contenteditable contextmenu controls crossorigin
    9              0.000031 syn keyword htmlArg contained default dirname download draggable dropzone form
    9              0.000027 syn keyword htmlArg contained formaction formenctype formmethod formnovalidate
    9              0.000029 syn keyword htmlArg contained formtarget hidden high icon inputmode keytype
    9              0.000032 syn keyword htmlArg contained kind list loop low max min minlength muted nonce
    9              0.000029 syn keyword htmlArg contained novalidate open optimum pattern placeholder
    9              0.000051 syn keyword htmlArg contained poster preload radiogroup required reversed
    9              0.000062 syn keyword htmlArg contained sandbox spellcheck sizes srcset srcdoc srclang
    9              0.000033 syn keyword htmlArg contained step title translate typemustmatch
    9              0.000085 syn match   htmlArg contained "\<data-\h\%(\w\|[-.]\)*\%(\_s*=\)\@="
                            
                            " special characters
    9              0.000110 syn match htmlSpecialChar "&#\=[0-9A-Za-z]\{1,8};"
                            
                            " Comments (the real ones or the old netscape ones)
    9              0.000035 if exists("html_wrong_comments")
                              syn region htmlComment	start=+<!--+	end=+--\s*>+	contains=@Spell
    9              0.000013 else
                              " The HTML 5.2 syntax 8.2.4.41: bogus comment is parser error; browser skips until next &gt
    9              0.000066   syn region htmlComment	start=+<!+	end=+>+		contains=htmlCommentError keepend
                              " Idem 8.2.4.42,51: Comment starts with <!-- and ends with -->
                              " Idem 8.2.4.43,44: Except <!--> and <!---> are parser errors
                              " Idem 8.2.4.52: dash-dash-bang (--!>) is error ignored by parser, also closes comment
    9              0.000151   syn region htmlComment matchgroup=htmlComment start=+<!--\%(-\?>\)\@!+	end=+--!\?>+	contains=htmlCommentNested,@htmlPreProc,@Spell keepend
                              " Idem 8.2.4.49: nested comment is parser error, except <!--> is all right
    9              0.000041   syn match htmlCommentNested contained "<!-->\@!"
    9              0.000049   syn match htmlCommentError  contained "[^><!]"
    9              0.000010 endif
    9              0.000081 syn region htmlComment	start=+<!DOCTYPE+	end=+>+ keepend
                            
                            " server-parsed commands
    9              0.000061 syn region htmlPreProc start=+<!--#+ end=+-->+ contains=htmlPreStmt,htmlPreError,htmlPreAttr
    9              0.000107 syn match htmlPreStmt contained "<!--#\%(config\|echo\|exec\|fsize\|flastmod\|include\|printenv\|set\|if\|elif\|else\|endif\|geoguide\)\>"
    9              0.000030 syn match htmlPreError contained "<!--#\S*"ms=s+4
    9              0.000059 syn match htmlPreAttr contained "\w\+=[^"]\S\+" contains=htmlPreProcAttrError,htmlPreProcAttrName
    9              0.000061 syn region htmlPreAttr contained start=+\w\+="+ skip=+\\\\\|\\"+ end=+"+ contains=htmlPreProcAttrName keepend
    9              0.000027 syn match htmlPreProcAttrError contained "\w\+="he=e-1
    9              0.000104 syn match htmlPreProcAttrName contained "\%(expr\|errmsg\|sizefmt\|timefmt\|var\|cgi\|cmd\|file\|virtual\|value\)="he=e-1
                            
    9              0.000031 if !exists("html_no_rendering")
                              " rendering
    9              0.000077   syn cluster htmlTop contains=@Spell,htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLink,javaScript,@htmlPreproc
                            
    9              0.000080   syn region htmlStrike start="<del\>" end="</del\_s*>"me=s-1 contains=@htmlTop
    9              0.000067   syn region htmlStrike start="<s\>" end="</s\_s*>"me=s-1 contains=@htmlTop
    9              0.000067   syn region htmlStrike start="<strike\>" end="</strike\_s*>"me=s-1 contains=@htmlTop
                            
    9              0.000068   syn region htmlBold start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderline,htmlBoldItalic
    9              0.000078   syn region htmlBold start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderline,htmlBoldItalic
    9              0.000164   syn region htmlBoldUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderlineItalic
    9              0.000065   syn region htmlBoldItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlBoldItalicUnderline
    9              0.000075   syn region htmlBoldItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop,htmlBoldItalicUnderline
    9              0.000063   syn region htmlBoldUnderlineItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop
    9              0.000064   syn region htmlBoldUnderlineItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
    9              0.000049   syn region htmlBoldItalicUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlBoldUnderlineItalic
                            
    9              0.000070   syn region htmlUnderline start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBold,htmlUnderlineItalic
    9              0.000062   syn region htmlUnderlineBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBoldItalic
    9              0.000066   syn region htmlUnderlineBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineBoldItalic
    9              0.000054   syn region htmlUnderlineItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineItalicBold
    9              0.000054   syn region htmlUnderlineItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop,htmlUnderlineItalicBold
    9              0.000049   syn region htmlUnderlineItalicBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop
    9              0.000057   syn region htmlUnderlineItalicBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop
    9              0.000078   syn region htmlUnderlineBoldItalic contained start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop
    9              0.000047   syn region htmlUnderlineBoldItalic contained start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
                            
    9              0.000065   syn region htmlItalic start="<i\>" end="</i\_s*>"me=s-1 contains=@htmlTop,htmlItalicBold,htmlItalicUnderline
    9              0.000053   syn region htmlItalic start="<em\>" end="</em\_s*>"me=s-1 contains=@htmlTop
    9              0.000588   syn region htmlItalicBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop,htmlItalicBoldUnderline
    9              0.000072   syn region htmlItalicBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop,htmlItalicBoldUnderline
    9              0.000069   syn region htmlItalicBoldUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop
    9              0.000059   syn region htmlItalicUnderline contained start="<u\>" end="</u\_s*>"me=s-1 contains=@htmlTop,htmlItalicUnderlineBold
    9              0.000101   syn region htmlItalicUnderlineBold contained start="<b\>" end="</b\_s*>"me=s-1 contains=@htmlTop
    9              0.000087   syn region htmlItalicUnderlineBold contained start="<strong\>" end="</strong\_s*>"me=s-1 contains=@htmlTop
                            
    9              0.000033   syn match htmlLeadingSpace "^\s\+" contained
    9              0.000121   syn region htmlLink start="<a\>\_[^>]*\<href\>" end="</a\_s*>"me=s-1 contains=@Spell,htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLeadingSpace,javaScript,@htmlPreproc
    9              0.000061   syn region htmlH1 start="<h1\>" end="</h1\_s*>"me=s-1 contains=@htmlTop
    9              0.000053   syn region htmlH2 start="<h2\>" end="</h2\_s*>"me=s-1 contains=@htmlTop
    9              0.000053   syn region htmlH3 start="<h3\>" end="</h3\_s*>"me=s-1 contains=@htmlTop
    9              0.000068   syn region htmlH4 start="<h4\>" end="</h4\_s*>"me=s-1 contains=@htmlTop
    9              0.000054   syn region htmlH5 start="<h5\>" end="</h5\_s*>"me=s-1 contains=@htmlTop
    9              0.000074   syn region htmlH6 start="<h6\>" end="</h6\_s*>"me=s-1 contains=@htmlTop
    9              0.000136   syn region htmlHead start="<head\>" end="</head\_s*>"me=s-1 end="<body\>"me=s-1 end="<h[1-6]\>"me=s-1 contains=htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,htmlLink,htmlTitle,javaScript,cssStyle,@htmlPreproc
    9              0.000078   syn region htmlTitle start="<title\>" end="</title\_s*>"me=s-1 contains=htmlTag,htmlEndTag,htmlSpecialChar,htmlPreProc,htmlComment,javaScript,@htmlPreproc
    9              0.000007 endif
                            
    9              0.000021 syn keyword htmlTagName		contained noscript
    9              0.000022 syn keyword htmlSpecialTagName	contained script style
    9              0.000039 if main_syntax != 'java' || exists("java_javascript")
                              " JAVA SCRIPT
    9   0.015840   0.010224   syn include @htmlJavaScript syntax/javascript.vim
    9              0.000035   unlet b:current_syntax
    9              0.000230   syn region  javaScript start=+<script\>\_[^>]*>+ keepend end=+</script\_[^>]*>+me=s-1 contains=@htmlJavaScript,htmlCssStyleComment,htmlScriptTag,@htmlPreproc
    9              0.000085   syn region  htmlScriptTag	contained start=+<script+ end=+>+ fold contains=htmlTagN,htmlString,htmlArg,htmlValue,htmlTagError,htmlEvent
    9              0.000025   hi def link htmlScriptTag htmlTag
                            
                              " html events (i.e. arguments that include javascript commands)
    9              0.000041   if exists("html_extended_events")
                                syn region htmlEvent	contained start=+\<on\a\+\s*=[\t ]*'+ end=+'+ contains=htmlEventSQ
                                syn region htmlEvent	contained start=+\<on\a\+\s*=[\t ]*"+ end=+"+ contains=htmlEventDQ
    9              0.000021   else
    9              0.000054     syn region htmlEvent	contained start=+\<on\a\+\s*=[\t ]*'+ end=+'+ keepend contains=htmlEventSQ
    9              0.000049     syn region htmlEvent	contained start=+\<on\a\+\s*=[\t ]*"+ end=+"+ keepend contains=htmlEventDQ
    9              0.000010   endif
    9              0.000068   syn region htmlEventSQ	contained start=+'+ms=s+1 end=+'+me=s-1 contains=@htmlJavaScript
    9              0.000048   syn region htmlEventDQ	contained start=+"+ms=s+1 end=+"+me=s-1 contains=@htmlJavaScript
    9              0.000013   hi def link htmlEventSQ htmlEvent
    9              0.000009   hi def link htmlEventDQ htmlEvent
                            
                              " a javascript expression is used as an arg value
    9              0.000060   syn region  javaScriptExpression contained start=+&{+ keepend end=+};+ contains=@htmlJavaScript,@htmlPreproc
    9              0.000006 endif
                            
    9              0.000041 if main_syntax != 'java' || exists("java_vb")
                              " VB SCRIPT
    9   0.020318   0.010215   syn include @htmlVbScript syntax/vb.vim
    9              0.000040   unlet b:current_syntax
    9              0.000169   syn region  javaScript start=+<script \_[^>]*language *=\_[^>]*vbscript\_[^>]*>+ keepend end=+</script\_[^>]*>+me=s-1 contains=@htmlVbScript,htmlCssStyleComment,htmlScriptTag,@htmlPreproc
    9              0.000008 endif
                            
    9              0.000039 syn cluster htmlJavaScript	add=@htmlPreproc
                            
    9              0.000036 if main_syntax != 'java' || exists("java_css")
                              " embedded style sheets
    9              0.000019   syn keyword htmlArg		contained media
    9   0.155101   0.009238   syn include @htmlCss syntax/css.vim
    9              0.000026   unlet b:current_syntax
    9              0.000143   syn region cssStyle start=+<style+ keepend end=+</style>+ contains=@htmlCss,htmlTag,htmlEndTag,htmlCssStyleComment,@htmlPreproc
    9              0.000046   syn match htmlCssStyleComment contained "\%(<!--\|-->\)"
    9              0.018403   syn region htmlCssDefinition matchgroup=htmlArg start='style="' keepend matchgroup=htmlString end='"' contains=css.*Attr,css.*Prop,cssComment,cssLength,cssColor,cssURL,cssImportant,cssError,cssString,@htmlPreproc
    9              0.000037   hi def link htmlStyleArg htmlString
    9              0.000008 endif
                            
    9              0.000031 if main_syntax == "html"
                              " synchronizing (does not always work if a comment includes legal
                              " html tags, but doing it right would mean to always start
                              " at the first line, which is too slow)
    3              0.000026   syn sync match htmlHighlight groupthere NONE "<[/a-zA-Z]"
    3              0.000018   syn sync match htmlHighlight groupthere javaScript "<script"
    3              0.000014   syn sync match htmlHighlightSkip "^.*['\"].*$"
    3              0.000004   syn sync minlines=10
    9              0.000006 endif
                            
                            " Folding
                            " Originally by Ingo Karkat and Marcus Zanona
    9              0.000071 if get(g:, "html_syntax_folding", 0)
                              syn region htmlFold start="<\z(\<\%(area\|base\|br\|col\|command\|embed\|hr\|img\|input\|keygen\|link\|meta\|param\|source\|track\|wbr\>\)\@![a-z-]\+\>\)\%(\_s*\_[^/]\?>\|\_s\_[^>]*\_[^>/]>\)" end="</\z1\_s*>" fold transparent keepend extend containedin=htmlHead,htmlH\d
                              " fold comments (the real ones and the old Netscape ones)
                              if exists("html_wrong_comments")
                                syn region htmlComment start=+<!--+ end=+--\s*>\%(\n\s*<!--\)\@!+ contains=@Spell fold
                              endif
    9              0.000005 endif
                            
                            " The default highlighting.
    9              0.000013 hi def link htmlTag			Function
    9              0.000010 hi def link htmlEndTag			Identifier
    9              0.000014 hi def link htmlArg			Type
    9              0.000011 hi def link htmlTagName			htmlStatement
    9              0.000011 hi def link htmlSpecialTagName		Exception
    9              0.000010 hi def link htmlMathTagName		htmlTagName
    9              0.000009 hi def link htmlSvgTagName		htmlTagName
    9              0.000008 hi def link htmlValue			String
    9              0.000008 hi def link htmlSpecialChar		Special
                            
    9              0.000029 if !exists("html_no_rendering")
    9              0.000011   hi def link htmlH1			  Title
    9              0.000009   hi def link htmlH2			  htmlH1
    9              0.000008   hi def link htmlH3			  htmlH2
    9              0.000008   hi def link htmlH4			  htmlH3
    9              0.000007   hi def link htmlH5			  htmlH4
    9              0.000008   hi def link htmlH6			  htmlH5
    9              0.000010   hi def link htmlHead			  PreProc
    9              0.000010   hi def link htmlTitle			  Title
    9              0.000012   hi def link htmlBoldItalicUnderline	  htmlBoldUnderlineItalic
    9              0.000016   hi def link htmlUnderlineBold		  htmlBoldUnderline
    9              0.000011   hi def link htmlUnderlineItalicBold	  htmlBoldUnderlineItalic
    9              0.000011   hi def link htmlUnderlineBoldItalic	  htmlBoldUnderlineItalic
    9              0.000011   hi def link htmlItalicUnderline	  htmlUnderlineItalic
    9              0.000011   hi def link htmlItalicBold		  htmlBoldItalic
    9              0.000012   hi def link htmlItalicBoldUnderline	  htmlBoldUnderlineItalic
    9              0.000014   hi def link htmlItalicUnderlineBold	  htmlBoldUnderlineItalic
    9              0.000009   hi def link htmlLink			  Underlined
    9              0.000012   hi def link htmlLeadingSpace		  None
    9              0.000029   if !exists("html_my_rendering")
    9              0.000019     hi def htmlBold		   term=bold cterm=bold gui=bold
    9              0.000012     hi def htmlBoldUnderline	   term=bold,underline cterm=bold,underline gui=bold,underline
    9              0.000011     hi def htmlBoldItalic	   term=bold,italic cterm=bold,italic gui=bold,italic
    9              0.000012     hi def htmlBoldUnderlineItalic term=bold,italic,underline cterm=bold,italic,underline gui=bold,italic,underline
    9              0.000012     hi def htmlUnderline	   term=underline cterm=underline gui=underline
    9              0.000010     hi def htmlUnderlineItalic	   term=italic,underline cterm=italic,underline gui=italic,underline
    9              0.000013     hi def htmlItalic		   term=italic cterm=italic gui=italic
    9              0.000029     if v:version > 800 || v:version == 800 && has("patch1038")
    9              0.000010       hi def htmlStrike	term=strikethrough cterm=strikethrough gui=strikethrough
                                else
                                  hi def htmlStrike	term=underline cterm=underline gui=underline
    9              0.000005     endif
    9              0.000005   endif
    9              0.000004 endif
                            
    9              0.000009 hi def link htmlPreStmt		   PreProc
    9              0.000008 hi def link htmlPreError	   Error
    9              0.000008 hi def link htmlPreProc		   PreProc
    9              0.000009 hi def link htmlPreAttr		   String
    9              0.000010 hi def link htmlPreProcAttrName    PreProc
    9              0.000009 hi def link htmlPreProcAttrError   Error
    9              0.000009 hi def link htmlString		   String
    9              0.000009 hi def link htmlStatement	   Statement
    9              0.000008 hi def link htmlComment		   Comment
    9              0.000010 hi def link htmlCommentNested	   htmlError
    9              0.000009 hi def link htmlCommentError	   htmlError
    9              0.000008 hi def link htmlTagError	   htmlError
    9              0.000008 hi def link htmlEvent		   javaScript
    9              0.000007 hi def link htmlError		   Error
                            
    9              0.000008 hi def link javaScript		   Special
    9              0.000010 hi def link javaScriptExpression   javaScript
    9              0.000013 hi def link htmlCssStyleComment    Comment
    9              0.000008 hi def link htmlCssDefinition	   Special
                            
    9              0.000023 let b:current_syntax = "html"
                            
    9              0.000015 if main_syntax == 'html'
    3              0.000004   unlet main_syntax
    9              0.000004 endif
                            
    9   0.000106   0.000067 let &cpo = s:cpo_save
    9              0.000014 unlet s:cpo_save
                            
                            " vim: nowrap sw=2 sts=2 ts=8 noet fdm=marker:

SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax\xml.vim
Sourced 9 times
Total time:   0.014228
 Self time:   0.011581

count  total (s)   self (s)
                            " Vim syntax file
                            " Language: XML
                            " Maintainer: Christian Brabandt <cb@256bit.org>
                            " Repository: https://github.com/chrisbra/vim-xml-ftplugin
                            " Previous Maintainer: Johannes Zellner <johannes@zellner.org>
                            " Author: Paul Siegmann <pauls@euronet.nl>
                            " Last Changed:	Nov 03, 2019
                            " Filenames:	*.xml
                            " Last Change:
                            " 20190923 - Fix xmlEndTag to match xmlTag (vim/vim#884)
                            " 20190924 - Fix xmlAttribute property (amadeus/vim-xml@d8ce1c946)
                            " 20191103 - Enable spell checking globally
                            " 20210428 - Improve syntax synchronizing
                            
                            " CONFIGURATION:
                            "   syntax folding can be turned on by
                            "
                            "      let g:xml_syntax_folding = 1
                            "
                            "   before the syntax file gets loaded (e.g. in ~/.vimrc).
                            "   This might slow down syntax highlighting significantly,
                            "   especially for large files.
                            "
                            " CREDITS:
                            "   The original version was derived by Paul Siegmann from
                            "   Claudio Fleiner's html.vim.
                            "
                            " REFERENCES:
                            "   [1] http://www.w3.org/TR/2000/REC-xml-20001006
                            "   [2] http://www.w3.org/XML/1998/06/xmlspec-report-19980910.htm
                            "
                            "   as <hirauchi@kiwi.ne.jp> pointed out according to reference [1]
                            "
                            "   2.3 Common Syntactic Constructs
                            "   [4]    NameChar    ::=    Letter | Digit | '.' | '-' | '_' | ':' | CombiningChar | Extender
                            "   [5]    Name        ::=    (Letter | '_' | ':') (NameChar)*
                            "
                            " NOTE:
                            "   1) empty tag delimiters "/>" inside attribute values (strings)
                            "      confuse syntax highlighting.
                            "   2) for large files, folding can be pretty slow, especially when
                            "      loading a file the first time and viewoptions contains 'folds'
                            "      so that folds of previous sessions are applied.
                            "      Don't use 'foldmethod=syntax' in this case.
                            
                            
                            " Quit when a syntax file was already loaded
    9              0.000066 if exists("b:current_syntax")
                                finish
    9              0.000007 endif
                            
    9              0.000035 let s:xml_cpo_save = &cpo
    9   0.000130   0.000075 set cpo&vim
                            
    9              0.000018 syn case match
                            
                            " Allow spell checking in tag values,
                            " there is no syntax region for that,
                            " so enable spell checking in top-level elements
                            " <tag>This text is spell checked</tag>
    9              0.000027 syn spell toplevel
                            
                            " mark illegal characters
    9              0.000096 syn match xmlError "[<&]"
                            
                            " strings (inside tags) aka VALUES
                            "
                            " EXAMPLE:
                            "
                            " <tag foo.attribute = "value">
                            "                      ^^^^^^^
    9              0.000161 syn region  xmlString contained start=+"+ end=+"+ contains=xmlEntity,@Spell display
    9              0.000046 syn region  xmlString contained start=+'+ end=+'+ contains=xmlEntity,@Spell display
                            
                            
                            " punctuation (within attributes) e.g. <tag xml:foo.attribute ...>
                            "                                              ^   ^
                            " syn match   xmlAttribPunct +[-:._]+ contained display
    9              0.000044 syn match   xmlAttribPunct +[:.]+ contained display
                            
                            " no highlighting for xmlEqual (xmlEqual has no highlighting group)
    9              0.000032 syn match   xmlEqual +=+ display
                            
                            
                            " attribute, everything before the '='
                            "
                            " PROVIDES: @xmlAttribHook
                            "
                            " EXAMPLE:
                            "
                            " <tag foo.attribute = "value">
                            "      ^^^^^^^^^^^^^
                            "
    9              0.000143 syn match   xmlAttrib
                                \ +[-'"<]\@1<!\<[a-zA-Z:_][-.0-9a-zA-Z:_]*\>\%(['"]\@!\|$\)+
                                \ contained
                                \ contains=xmlAttribPunct,@xmlAttribHook
                                \ display
                            
                            
                            " namespace spec
                            "
                            " PROVIDES: @xmlNamespaceHook
                            "
                            " EXAMPLE:
                            "
                            " <xsl:for-each select = "lola">
                            "  ^^^
                            "
    9              0.000040 if exists("g:xml_namespace_transparent")
                            syn match   xmlNamespace
                                \ +\(<\|</\)\@2<=[^ /!?<>"':]\+[:]\@=+
                                \ contained
                                \ contains=@xmlNamespaceHook
                                \ transparent
                                \ display
    9              0.000012 else
    9              0.000095 syn match   xmlNamespace
                                \ +\(<\|</\)\@2<=[^ /!?<>"':]\+[:]\@=+
                                \ contained
                                \ contains=@xmlNamespaceHook
                                \ display
    9              0.000016 endif
                            
                            
                            " tag name
                            "
                            " PROVIDES: @xmlTagHook
                            "
                            " EXAMPLE:
                            "
                            " <tag foo.attribute = "value">
                            "  ^^^
                            "
    9              0.000117 syn match   xmlTagName
                                \ +\%(<\|</\)\@2<=[^ /!?<>"']\++
                                \ contained
                                \ contains=xmlNamespace,xmlAttribPunct,@xmlTagHook
                                \ display
                            
                            
    9              0.000028 if exists('g:xml_syntax_folding')
                            
                                " start tag
                                " use matchgroup=xmlTag to skip over the leading '<'
                                "
                                " PROVIDES: @xmlStartTagHook
                                "
                                " EXAMPLE:
                                "
                                " <tag id="whoops">
                                " s^^^^^^^^^^^^^^^e
                                "
                                syn region   xmlTag
                            	\ matchgroup=xmlTag start=+<[^ /!?<>"']\@=+
                            	\ matchgroup=xmlTag end=+>+
                            	\ contained
                            	\ contains=xmlError,xmlTagName,xmlAttrib,xmlEqual,xmlString,@xmlStartTagHook
                            
                            
                                " highlight the end tag
                                "
                                " PROVIDES: @xmlTagHook
                                " (should we provide a separate @xmlEndTagHook ?)
                                "
                                " EXAMPLE:
                                "
                                " </tag>
                                " ^^^^^^
                                "
                                syn region   xmlEndTag
                            	\ matchgroup=xmlTag start=+</[^ /!?<>"']\@=+
                            	\ matchgroup=xmlTag end=+>+
                            	\ contained
                            	\ contains=xmlTagName,xmlNamespace,xmlAttribPunct,@xmlTagHook
                            
                                " tag elements with syntax-folding.
                                " NOTE: NO HIGHLIGHTING -- highlighting is done by contained elements
                                "
                                " PROVIDES: @xmlRegionHook
                                "
                                " EXAMPLE:
                                "
                                " <tag id="whoops">
                                "   <!-- comment -->
                                "   <another.tag></another.tag>
                                "   <empty.tag/>
                                "   some data
                                " </tag>
                                "
                                syn region   xmlRegion
                            	\ start=+<\z([^ /!?<>"']\+\)+
                            	\ skip=+<!--\_.\{-}-->+
                            	\ end=+</\z1\_\s\{-}>+
                            	\ end=+/>+
                            	\ fold
                            	\ contains=xmlTag,xmlEndTag,xmlCdata,xmlRegion,xmlComment,xmlEntity,xmlProcessing,@xmlRegionHook,@Spell
                            	\ keepend
                            	\ extend
                            
    9              0.000009 else
                            
                                " no syntax folding:
                                " - contained attribute removed
                                " - xmlRegion not defined
                                "
    9              0.000114     syn region   xmlTag
                            	\ matchgroup=xmlTag start=+<[^ /!?<>"']\@=+
                            	\ matchgroup=xmlTag end=+>+
                            	\ contains=xmlError,xmlTagName,xmlAttrib,xmlEqual,xmlString,@xmlStartTagHook
                            
    9              0.000095     syn region   xmlEndTag
                            	\ matchgroup=xmlTag start=+</[^ /!?<>"']\@=+
                            	\ matchgroup=xmlTag end=+>+
                            	\ contains=xmlTagName,xmlNamespace,xmlAttribPunct,@xmlTagHook
                            
    9              0.000007 endif
                            
                            
                            " &entities; compare with dtd
    9              0.000049 syn match   xmlEntity                 "&[^; \t]*;" contains=xmlEntityPunct
    9              0.000031 syn match   xmlEntityPunct  contained "[&.;]"
                            
    9              0.000028 if exists('g:xml_syntax_folding')
                            
                                " The real comments (this implements the comments as defined by xml,
                                " but not all xml pages actually conform to it. Errors are flagged.
                                syn region  xmlComment
                            	\ start=+<!+
                            	\ end=+>+
                            	\ contains=xmlCommentStart,xmlCommentError
                            	\ extend
                            	\ fold
                            
    9              0.000007 else
                            
                                " no syntax folding:
                                " - fold attribute removed
                                "
    9              0.000066     syn region  xmlComment
                            	\ start=+<!+
                            	\ end=+>+
                            	\ contains=xmlCommentStart,xmlCommentError
                            	\ extend
                            
    9              0.000006 endif
                            
    9              0.000028 syn match xmlCommentStart   contained "<!" nextgroup=xmlCommentPart
    9              0.000035 syn keyword xmlTodo         contained TODO FIXME XXX
    9              0.000027 syn match   xmlCommentError contained "[^><!]"
    9              0.000081 syn region  xmlCommentPart
                                \ start=+--+
                                \ end=+--+
                                \ contained
                                \ contains=xmlTodo,@xmlCommentHook,@Spell
                            
                            
                            " CData sections
                            "
                            " PROVIDES: @xmlCdataHook
                            "
    9              0.000123 syn region    xmlCdata
                                \ start=+<!\[CDATA\[+
                                \ end=+]]>+
                                \ contains=xmlCdataStart,xmlCdataEnd,@xmlCdataHook,@Spell
                                \ keepend
                                \ extend
                            
                            " using the following line instead leads to corrupt folding at CDATA regions
                            " syn match    xmlCdata      +<!\[CDATA\[\_.\{-}]]>+  contains=xmlCdataStart,xmlCdataEnd,@xmlCdataHook
    9              0.000037 syn match    xmlCdataStart +<!\[CDATA\[+  contained contains=xmlCdataCdata
    9              0.000019 syn keyword  xmlCdataCdata CDATA          contained
    9              0.000025 syn match    xmlCdataEnd   +]]>+          contained
                            
                            
                            " Processing instructions
                            " This allows "?>" inside strings -- good idea?
    9              0.000051 syn region  xmlProcessing matchgroup=xmlProcessingDelim start="<?" end="?>" contains=xmlAttrib,xmlEqual,xmlString
                            
                            
    9              0.000024 if exists('g:xml_syntax_folding')
                            
                                " DTD -- we use dtd.vim here
                                syn region  xmlDocType matchgroup=xmlDocTypeDecl
                            	\ start="<!DOCTYPE"he=s+2,rs=s+2 end=">"
                            	\ fold
                            	\ contains=xmlDocTypeKeyword,xmlInlineDTD,xmlString
    9              0.000008 else
                            
                                " no syntax folding:
                                " - fold attribute removed
                                "
    9              0.000079     syn region  xmlDocType matchgroup=xmlDocTypeDecl
                            	\ start="<!DOCTYPE"he=s+2,rs=s+2 end=">"
                            	\ contains=xmlDocTypeKeyword,xmlInlineDTD,xmlString
                            
    9              0.000007 endif
                            
    9              0.000027 syn keyword xmlDocTypeKeyword contained DOCTYPE PUBLIC SYSTEM
    9              0.000085 syn region  xmlInlineDTD contained matchgroup=xmlDocTypeDecl start="\[" end="]" contains=@xmlDTD
    9   0.006968   0.004409 syn include @xmlDTD <sfile>:p:h/dtd.vim
    9              0.000014 unlet b:current_syntax
                            
                            
                            " synchronizing
                            
    9              0.000101 syn sync match xmlSyncComment grouphere xmlComment +<!--+
    9              0.000027 syn sync match xmlSyncComment groupthere NONE +-->+
                            
                            " The following is slow on large documents (and the doctype is optional
                            " syn sync match xmlSyncDT grouphere  xmlDocType +\_.\(<!DOCTYPE\)\@=+
                            " syn sync match xmlSyncDT groupthere  NONE       +]>+
                            
    9              0.000027 if exists('g:xml_syntax_folding')
                                syn sync match xmlSync grouphere   xmlRegion  +\_.\(<[^ /!?<>"']\+\)\@=+
                                " syn sync match xmlSync grouphere  xmlRegion "<[^ /!?<>"']*>"
                                syn sync match xmlSync groupthere  xmlRegion  +</[^ /!?<>"']\+>+
    9              0.000011 endif
                            
    9              0.000014 syn sync minlines=100 maxlines=200
                            
                            
                            " The default highlighting.
    9              0.000011 hi def link xmlTodo		Todo
    9              0.000011 hi def link xmlTag		Function
    9              0.000010 hi def link xmlTagName		Function
    9              0.000012 hi def link xmlEndTag		Identifier
    9              0.000025 if !exists("g:xml_namespace_transparent")
    9              0.000012     hi def link xmlNamespace	Tag
    9              0.000006 endif
    9              0.000011 hi def link xmlEntity		Statement
    9              0.000009 hi def link xmlEntityPunct	Type
                            
    9              0.000010 hi def link xmlAttribPunct	Comment
    9              0.000007 hi def link xmlAttrib		Type
                            
    9              0.000009 hi def link xmlString		String
    9              0.000010 hi def link xmlComment		Comment
    9              0.000011 hi def link xmlCommentStart	xmlComment
    9              0.000009 hi def link xmlCommentPart	Comment
    9              0.000009 hi def link xmlCommentError	Error
    9              0.000009 hi def link xmlError		Error
                            
    9              0.000009 hi def link xmlProcessingDelim	Comment
    9              0.000008 hi def link xmlProcessing	Type
                            
    9              0.000009 hi def link xmlCdata		String
    9              0.000009 hi def link xmlCdataCdata	Statement
    9              0.000009 hi def link xmlCdataStart	Type
    9              0.000007 hi def link xmlCdataEnd		Type
                            
    9              0.000009 hi def link xmlDocTypeDecl	Function
    9              0.000009 hi def link xmlDocTypeKeyword	Statement
    9              0.000008 hi def link xmlInlineDTD	Function
                            
    9              0.000016 let b:current_syntax = "xml"
                            
    9   0.000082   0.000051 let &cpo = s:xml_cpo_save
    9              0.000011 unlet s:xml_cpo_save
                            
                            " vim: ts=4

SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax/dtd.vim
Sourced 9 times
Total time:   0.002555
 Self time:   0.002495

count  total (s)   self (s)
                            " Vim syntax file
                            " Language: DTD (Document Type Definition for XML)
                            " Maintainer: Christian Brabandt <cb@256bit.org>
                            " Repository: https://github.com/chrisbra/vim-xml-ftplugin
                            " Previous Maintainer: Johannes Zellner <johannes@zellner.org>
                            " Author: Daniel Amyot <damyot@site.uottawa.ca>
                            " Last Changed:	Sept 24, 2019
                            " Filenames: *.dtd
                            "
                            " REFERENCES:
                            "   http://www.w3.org/TR/html40/
                            "   http://www.w3.org/TR/NOTE-html-970421
                            "
                            " TODO:
                            "   - improve synchronizing.
                            
    9              0.000039 if exists("b:current_syntax")
                                finish
    9              0.000006 endif
    9              0.000026 let s:dtd_cpo_save = &cpo
    9   0.000078   0.000049 set cpo&vim
                            
    9              0.000021 if !exists("dtd_ignore_case")
                                " I prefer having the case takes into consideration.
    9              0.000014     syn case match
                            else
                                syn case ignore
    9              0.000005 endif
                            
                            
                            " the following line makes the opening <! and
                            " closing > highlighted using 'dtdFunction'.
                            "
                            " PROVIDES: @dtdTagHook
                            "
    9              0.000137 syn region dtdTag matchgroup=dtdFunction
                                \ start=+<!+ end=+>+ matchgroup=NONE
                                \ contains=dtdTag,dtdTagName,dtdError,dtdComment,dtdString,dtdAttrType,dtdAttrDef,dtdEnum,dtdParamEntityInst,dtdParamEntityDecl,dtdCard,@dtdTagHook
                            
    9              0.000021 if !exists("dtd_no_tag_errors")
                                " mark everything as an error which starts with a <!
                                " and is not overridden later. If this is annoying,
                                " it can be switched off by setting the variable
                                " dtd_no_tag_errors.
    9              0.000036     syn region dtdError contained start=+<!+lc=2 end=+>+
    9              0.000005 endif
                            
                            " if this is a html like comment highlight also
                            " the opening <! and the closing > as Comment.
    9              0.000089 syn region dtdComment		start=+<![ \t]*--+ end=+-->+ contains=dtdTodo,@Spell
                            
                            
                            " proper DTD comment
    9              0.000043 syn region dtdComment contained start=+--+ end=+--+ contains=dtdTodo,@Spell
                            
                            
                            " Start tags (keywords). This is contained in dtdFunction.
                            " Note that everything not contained here will be marked
                            " as error.
    9              0.000097 syn match dtdTagName contained +<!\(ATTLIST\|DOCTYPE\|ELEMENT\|ENTITY\|NOTATION\|SHORTREF\|USEMAP\|\[\)+lc=2,hs=s+2
                            
                            
                            " wildcards and operators
    9              0.000017 syn match  dtdCard contained "|"
    9              0.000015 syn match  dtdCard contained ","
                            " evenutally overridden by dtdEntity
    9              0.000014 syn match  dtdCard contained "&"
    9              0.000014 syn match  dtdCard contained "?"
    9              0.000035 syn match  dtdCard contained "\*"
    9              0.000014 syn match  dtdCard contained "+"
                            
                            " ...and finally, special cases.
    9              0.000026 syn match  dtdCard      "ANY"
    9              0.000022 syn match  dtdCard      "EMPTY"
                            
    9              0.000021 if !exists("dtd_no_param_entities")
                            
                                " highlight parameter entity declarations
                                " and instances. Note that the closing `;'
                                " is optional.
                            
                                " instances
    9              0.000109     syn region dtdParamEntityInst oneline matchgroup=dtdParamEntityPunct
                            	\ start="%[-_a-zA-Z0-9.]\+"he=s+1,rs=s+1
                            	\ skip=+[-_a-zA-Z0-9.]+
                            	\ end=";\|\>"
                            	\ matchgroup=NONE contains=dtdParamEntityPunct
    9              0.000016     syn match  dtdParamEntityPunct contained "\."
                            
                                " declarations
                                " syn region dtdParamEntityDecl oneline matchgroup=dtdParamEntityDPunct start=+<!ENTITY % +lc=8 skip=+[-_a-zA-Z0-9.]+ matchgroup=NONE end="\>" contains=dtdParamEntityDPunct
    9              0.000048     syn match dtdParamEntityDecl +<!ENTITY % [-_a-zA-Z0-9.]*+lc=8 contains=dtdParamEntityDPunct
    9              0.000017     syn match  dtdParamEntityDPunct contained "%\|\."
                            
    9              0.000005 endif
                            
                            " &entities; compare with xml
    9              0.000049 syn match   dtdEntity		      "&[^; \t]*;" contains=dtdEntityPunct
    9              0.000023 syn match   dtdEntityPunct  contained "[&.;]"
                            
                            " Strings are between quotes
    9              0.000065 syn region dtdString    start=+"+ skip=+\\\\\|\\"+  end=+"+ contains=dtdAttrDef,dtdAttrType,dtdParamEntityInst,dtdEntity,dtdCard
    9              0.000048 syn region dtdString    start=+'+ skip=+\\\\\|\\'+  end=+'+ contains=dtdAttrDef,dtdAttrType,dtdParamEntityInst,dtdEntity,dtdCard
                            
                            " Enumeration of elements or data between parenthesis
                            "
                            " PROVIDES: @dtdEnumHook
                            "
    9              0.000050 syn region dtdEnum matchgroup=dtdType start="(" end=")" matchgroup=NONE contains=dtdEnum,dtdParamEntityInst,dtdCard,@dtdEnumHook
                            
                            "Attribute types
    9              0.000031 syn keyword dtdAttrType NMTOKEN  ENTITIES  NMTOKENS  ID  CDATA
    9              0.000023 syn keyword dtdAttrType IDREF  IDREFS
                            " ENTITY has to treated special for not overriding <!ENTITY
    9              0.000036 syn match   dtdAttrType +[^!]\<ENTITY+
                            
                            "Attribute Definitions
    9              0.000026 syn match  dtdAttrDef   "#REQUIRED"
    9              0.000044 syn match  dtdAttrDef   "#IMPLIED"
    9              0.000022 syn match  dtdAttrDef   "#FIXED"
                            
    9              0.000015 syn case match
                            " define some common keywords to mark TODO
                            " and important sections inside comments.
    9              0.000017 syn keyword dtdTodo contained TODO FIXME XXX
                            
    9              0.000013 syn sync lines=250
                            
                            " Define the default highlighting.
                            " Only when an item doesn't have highlighting yet
                            
                            " The default highlighting.
    9              0.000017 hi def link dtdFunction		Function
    9              0.000013 hi def link dtdTag		Normal
    9              0.000010 hi def link dtdType		Type
    9              0.000010 hi def link dtdAttrType		dtdType
    9              0.000009 hi def link dtdAttrDef		dtdType
    9              0.000013 hi def link dtdConstant		Constant
    9              0.000010 hi def link dtdString		dtdConstant
    9              0.000010 hi def link dtdEnum		dtdConstant
    9              0.000010 hi def link dtdCard		dtdFunction
                            
    9              0.000009 hi def link dtdEntity		Statement
    9              0.000010 hi def link dtdEntityPunct	dtdType
    9              0.000011 hi def link dtdParamEntityInst	dtdConstant
    9              0.000017 hi def link dtdParamEntityPunct	dtdType
    9              0.000012 hi def link dtdParamEntityDecl	dtdType
    9              0.000011 hi def link dtdParamEntityDPunct dtdComment
                            
    9              0.000011 hi def link dtdComment		Comment
    9              0.000010 hi def link dtdTagName		Statement
    9              0.000022 hi def link dtdError		Error
    9              0.000010 hi def link dtdTodo		Todo
                            
                            
    9   0.000104   0.000074 let &cpo = s:dtd_cpo_save
    9              0.000018 unlet s:dtd_cpo_save
                            
    9              0.000018 let b:current_syntax = "dtd"
                            
                            " vim: ts=8

SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax\javascript.vim
Sourced 9 times
Total time:   0.005611
 Self time:   0.005482

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:	JavaScript
                            " Maintainer:	Claudio Fleiner <claudio@fleiner.com>
                            " Updaters:	Scott Shattuck (ss) <ss@technicalpursuit.com>
                            " URL:		http://www.fleiner.com/vim/syntax/javascript.vim
                            " Changes:	(ss) added keywords, reserved words, and other identifiers
                            "		(ss) repaired several quoting and grouping glitches
                            "		(ss) fixed regex parsing issue with multiple qualifiers [gi]
                            "		(ss) additional factoring of keywords, globals, and members
                            " Last Change:	2022 Jun 09
                            " 		2013 Jun 12: adjusted javaScriptRegexpString (Kevin Locke)
                            " 		2018 Apr 14: adjusted javaScriptRegexpString (LongJohnCoder)
                            
                            " tuning parameters:
                            " unlet javaScript_fold
                            
    9              0.000067 if !exists("main_syntax")
                              " quit when a syntax file was already loaded
                              if exists("b:current_syntax")
                                finish
                              endif
                              let main_syntax = 'javascript'
    9              0.000032 elseif exists("b:current_syntax") && b:current_syntax == "javascript"
                              finish
    9              0.000006 endif
                            
    9              0.000026 let s:cpo_save = &cpo
    9   0.000117   0.000065 set cpo&vim
                            
                            
    9              0.000044 syn keyword javaScriptCommentTodo      TODO FIXME XXX TBD contained
    9              0.000074 syn match   javaScriptLineComment      "\/\/.*" contains=@Spell,javaScriptCommentTodo
    9              0.000085 syn match   javaScriptCommentSkip      "^[ \t]*\*\($\|[ \t]\+\)"
    9              0.000066 syn region  javaScriptComment	       start="/\*"  end="\*/" contains=@Spell,javaScriptCommentTodo
    9              0.000064 syn match   javaScriptSpecial	       "\\\d\d\d\|\\."
    9              0.000097 syn region  javaScriptStringD	       start=+"+  skip=+\\\\\|\\"+  end=+"\|$+	contains=javaScriptSpecial,@htmlPreproc
    9              0.000082 syn region  javaScriptStringS	       start=+'+  skip=+\\\\\|\\'+  end=+'\|$+	contains=javaScriptSpecial,@htmlPreproc
    9              0.000066 syn region  javaScriptStringT	       start=+`+  skip=+\\\\\|\\`+  end=+`+	contains=javaScriptSpecial,javaScriptEmbed,@htmlPreproc
                            
    9              0.000054 syn region  javaScriptEmbed	       start=+${+  end=+}+	contains=@javaScriptEmbededExpr
                            
                            " number handling by Christopher Leonard chris.j.leonard@gmx.com
    9              0.000035 syn match   javaScriptSpecialCharacter "'\\.'"
    9              0.000083 syn match   javaScriptNumber           "\<0[bB][0-1]\+\(_[0-1]\+\)*\>"
    9              0.000052 syn match   javaScriptNumber           "\<0[oO][0-7]\+\(_[0-7]\+\)*\>"
    9              0.000044 syn match   javaScriptNumber           "\<0\([0-7]\+\(_[0-7]\+\)*\)\?\>"
    9              0.000042 syn match   javaScriptNumber           "\<0[xX][0-9a-fA-F]\+\(_[0-9a-fA-F]\+\)*\>"
    9              0.000047 syn match   javaScriptNumber           "\<\d\+\(_\d\+\)*[eE][+-]\?\d\+\>"
    9              0.000122 syn match   javaScriptNumber           "\<[1-9]\d*\(_\d\+\)*\(\.\(\d\+\(_\d\+\)*\([eE][+-]\?\d\+\)\?\)\?\)\?\>"
    9              0.000082 syn match   javaScriptNumber           "\<\(\d\+\(_\d\+\)*\)\?\.\d\+\(_\d\+\)*\([eE][+-]\?\d\+\)\?\>"
    9              0.000074 syn match   javaScriptNumber           "\<\d\+\(_\d\+\)*\.\(\d\+\(_\d\+\)*\([eE][+-]\?\d\+\)\?\)\?\>"
    9              0.000209 syn region  javaScriptRegexpString     start=+[,(=+]\s*/[^/*]+ms=e-1,me=e-1 skip=+\\\\\|\\/+ end=+/[gimuys]\{0,2\}\s*$+ end=+/[gimuys]\{0,2\}\s*[+;.,)\]}]+me=e-1 end=+/[gimuys]\{0,2\}\s\+\/+me=e-1 contains=@htmlPreproc,javaScriptComment oneline
                            
    9              0.000035 syn keyword javaScriptConditional	if else switch
    9              0.000041 syn keyword javaScriptRepeat		while for do in of
    9              0.000031 syn keyword javaScriptBranch		break continue
    9              0.000037 syn keyword javaScriptOperator		new delete instanceof typeof
    9              0.000048 syn keyword javaScriptType		Array Boolean Date Function Number Object String RegExp
    9              0.000033 syn keyword javaScriptStatement		return with await yield
    9              0.000026 syn keyword javaScriptBoolean		true false
    9              0.000036 syn keyword javaScriptNull		null undefined
    9              0.000033 syn keyword javaScriptIdentifier	arguments this var let
    9              0.000027 syn keyword javaScriptLabel		case default
    9              0.000033 syn keyword javaScriptException		try catch finally throw
    9              0.000034 syn keyword javaScriptMessage		alert confirm prompt status
    9              0.000030 syn keyword javaScriptGlobal		self window top parent
    9              0.000036 syn keyword javaScriptMember		document event location 
    9              0.000040 syn keyword javaScriptDeprecated	escape unescape
    9              0.000145 syn keyword javaScriptReserved		abstract boolean byte char class const debugger double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile async
                            
    9              0.000063 syn cluster  javaScriptEmbededExpr	contains=javaScriptBoolean,javaScriptNull,javaScriptIdentifier,javaScriptStringD,javaScriptStringS,javaScriptStringT
                            
    9              0.000045 if exists("javaScript_fold")
                                syn match	javaScriptFunction	"\<function\>"
                                syn region	javaScriptFunctionFold	start="\<function\>.*[^};]$" end="^\z1}.*$" transparent fold keepend
                            
                                syn sync match javaScriptSync	grouphere javaScriptFunctionFold "\<function\>"
                                syn sync match javaScriptSync	grouphere NONE "^}"
                            
                                setlocal foldmethod=syntax
                                setlocal foldtext=getline(v:foldstart)
    9              0.000016 else
    9              0.000032     syn keyword javaScriptFunction	function
    9              0.000043     syn match	javaScriptBraces	   "[{}\[\]]"
    9              0.000034     syn match	javaScriptParens	   "[()]"
    9              0.000007 endif
                            
    9              0.000025 if main_syntax == "javascript"
                              syn sync fromstart
                              syn sync maxlines=100
                            
                              syn sync ccomment javaScriptComment
    9              0.000007 endif
                            
                            " Define the default highlighting.
                            " Only when an item doesn't have highlighting yet
    9              0.000019 hi def link javaScriptComment		Comment
    9              0.000014 hi def link javaScriptLineComment		Comment
    9              0.000018 hi def link javaScriptCommentTodo		Todo
    9              0.000017 hi def link javaScriptSpecial		Special
    9              0.000012 hi def link javaScriptStringS		String
    9              0.000010 hi def link javaScriptStringD		String
    9              0.000012 hi def link javaScriptStringT		String
    9              0.000015 hi def link javaScriptCharacter		Character
    9              0.000020 hi def link javaScriptSpecialCharacter	javaScriptSpecial
    9              0.000013 hi def link javaScriptNumber		Number
    9              0.000012 hi def link javaScriptConditional		Conditional
    9              0.000011 hi def link javaScriptRepeat		Repeat
    9              0.000012 hi def link javaScriptBranch		Conditional
    9              0.000012 hi def link javaScriptOperator		Operator
    9              0.000011 hi def link javaScriptType			Type
    9              0.000013 hi def link javaScriptStatement		Statement
    9              0.000013 hi def link javaScriptFunction		Function
    9              0.000012 hi def link javaScriptBraces		Function
    9              0.000014 hi def link javaScriptError		Error
    9              0.000013 hi def link javaScrParenError		javaScriptError
    9              0.000011 hi def link javaScriptNull			Keyword
    9              0.000012 hi def link javaScriptBoolean		Boolean
    9              0.000010 hi def link javaScriptRegexpString		String
                            
    9              0.000012 hi def link javaScriptIdentifier		Identifier
    9              0.000011 hi def link javaScriptLabel		Label
    9              0.000011 hi def link javaScriptException		Exception
    9              0.000010 hi def link javaScriptMessage		Keyword
    9              0.000011 hi def link javaScriptGlobal		Keyword
    9              0.000012 hi def link javaScriptMember		Keyword
    9              0.000012 hi def link javaScriptDeprecated		Exception 
    9              0.000011 hi def link javaScriptReserved		Keyword
    9              0.000010 hi def link javaScriptDebug		Debug
    9              0.000013 hi def link javaScriptConstant		Label
    9              0.000009 hi def link javaScriptEmbed		Special
                            
                            
                            
    9              0.000034 let b:current_syntax = "javascript"
    9              0.000019 if main_syntax == 'javascript'
                              unlet main_syntax
    9              0.000007 endif
    9   0.000175   0.000098 let &cpo = s:cpo_save
    9              0.000016 unlet s:cpo_save
                            
                            " vim: ts=8

SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax\vb.vim
Sourced 9 times
Total time:   0.010092
 Self time:   0.010092

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     Visual Basic
                            " Maintainer:   Doug Kearns <dougkearns@gmail.com>
                            " Former Maintainer:    Tim Chase <vb.vim@tim.thechases.com>
                            " Former Maintainer:    Robert M. Cortopassi <cortopar@mindspring.com>
                            "       (tried multiple times to contact, but email bounced)
                            " Last Change:
                            "   2021 Nov 26  Incorporated additions from Doug Kearns
                            "   2005 May 25  Synched with work by Thomas Barthel
                            "   2004 May 30  Added a few keywords
                            
                            " This was thrown together after seeing numerous requests on the
                            " VIM and VIM-DEV mailing lists.  It is by no means complete.
                            " Send comments, suggestions and requests to the maintainer.
                            
                            " quit when a syntax file was already loaded
    9              0.000054 if exists("b:current_syntax")
                                    finish
    9              0.000006 endif
                            
                            " VB is case insensitive
    9              0.000019 syn case ignore
                            
    9              0.000055 syn keyword vbConditional If Then ElseIf Else Select Case
                            
    9              0.000042 syn keyword vbOperator AddressOf And ByRef ByVal Eqv Imp In
    9              0.000031 syn keyword vbOperator Is Like Mod Not Or To Xor
                            
    9              0.000047 syn match vbOperator "[()+.,\-/*=&]"
    9              0.000038 syn match vbOperator "[<>]=\="
    9              0.000032 syn match vbOperator "<>"
    9              0.000030 syn match vbOperator "\s\+_$"
                            
    9              0.000022 syn keyword vbBoolean  True False
    9              0.000019 syn keyword vbConst Null Nothing
                            
    9              0.000031 syn keyword vbRepeat Do For ForEach Loop Next
    9              0.000031 syn keyword vbRepeat Step To Until Wend While
                            
    9              0.000030 syn keyword vbEvents AccessKeyPress Activate ActiveRowChanged
    9              0.000028 syn keyword vbEvents AfterAddFile AfterChangeFileName AfterCloseFile
    9              0.000023 syn keyword vbEvents AfterColEdit AfterColUpdate AfterDelete
    9              0.000041 syn keyword vbEvents AfterInsert AfterLabelEdit AfterRemoveFile
    9              0.000023 syn keyword vbEvents AfterUpdate AfterWriteFile AmbientChanged
    9              0.000031 syn keyword vbEvents ApplyChanges Associate AsyncProgress
    9              0.000030 syn keyword vbEvents AsyncReadComplete AsyncReadProgress AxisActivated
    9              0.000021 syn keyword vbEvents AxisLabelActivated AxisLabelSelected
    9              0.000024 syn keyword vbEvents AxisLabelUpdated AxisSelected AxisTitleActivated
    9              0.000022 syn keyword vbEvents AxisTitleSelected AxisTitleUpdated AxisUpdated
    9              0.000023 syn keyword vbEvents BeforeClick BeforeColEdit BeforeColUpdate
    9              0.000022 syn keyword vbEvents BeforeConnect BeforeDelete BeforeInsert
    9              0.000023 syn keyword vbEvents BeforeLabelEdit BeforeLoadFile BeforeUpdate
    9              0.000023 syn keyword vbEvents BeginRequest BeginTrans ButtonClick
    9              0.000023 syn keyword vbEvents ButtonCompleted ButtonDropDown ButtonGotFocus
    9              0.000028 syn keyword vbEvents ButtonLostFocus CallbackKeyDown Change Changed
    9              0.000029 syn keyword vbEvents ChartActivated ChartSelected ChartUpdated Click
    9              0.000032 syn keyword vbEvents Close CloseQuery CloseUp ColEdit ColResize
    9              0.000029 syn keyword vbEvents Collapse ColumnClick CommitTrans Compare
    9              0.000025 syn keyword vbEvents ConfigChageCancelled ConfigChanged
    9              0.000027 syn keyword vbEvents ConfigChangedCancelled Connect ConnectionRequest
    9              0.000023 syn keyword vbEvents CurrentRecordChanged DECommandAdded
    9              0.000030 syn keyword vbEvents DECommandPropertyChanged DECommandRemoved
    9              0.000024 syn keyword vbEvents DEConnectionAdded DEConnectionPropertyChanged
    9              0.000026 syn keyword vbEvents DEConnectionRemoved DataArrival DataChanged
    9              0.000030 syn keyword vbEvents DataUpdated DateClicked DblClick Deactivate
    9              0.000031 syn keyword vbEvents DevModeChange DeviceArrival DeviceOtherEvent
    9              0.000024 syn keyword vbEvents DeviceQueryRemove DeviceQueryRemoveFailed
    9              0.000025 syn keyword vbEvents DeviceRemoveComplete DeviceRemovePending
    9              0.000024 syn keyword vbEvents Disconnect DisplayChanged Dissociate
    9              0.000030 syn keyword vbEvents DoGetNewFileName Done DonePainting DownClick
    9              0.000029 syn keyword vbEvents DragDrop DragOver DropDown EditProperty EditQuery
    9              0.000036 syn keyword vbEvents EndRequest EnterCell EnterFocus ExitFocus Expand
    9              0.000026 syn keyword vbEvents FontChanged FootnoteActivated FootnoteSelected
    9              0.000027 syn keyword vbEvents FootnoteUpdated Format FormatSize GotFocus
    9              0.000024 syn keyword vbEvents HeadClick HeightChanged Hide InfoMessage
    9              0.000029 syn keyword vbEvents IniProperties InitProperties Initialize
    9              0.000026 syn keyword vbEvents ItemActivated ItemAdded ItemCheck ItemClick
    9              0.000020 syn keyword vbEvents ItemReloaded ItemRemoved ItemRenamed
    9              0.000027 syn keyword vbEvents ItemSeletected KeyDown KeyPress KeyUp LeaveCell
    9              0.000021 syn keyword vbEvents LegendActivated LegendSelected LegendUpdated
    9              0.000023 syn keyword vbEvents LinkClose LinkError LinkExecute LinkNotify
    9              0.000084 syn keyword vbEvents LinkOpen Load LostFocus MouseDown MouseMove
    9              0.000026 syn keyword vbEvents MouseUp NodeCheck NodeClick OLECompleteDrag
    9              0.000034 syn keyword vbEvents OLEDragDrop OLEDragOver OLEGiveFeedback OLESetData
    9              0.000034 syn keyword vbEvents OLEStartDrag ObjectEvent ObjectMove OnAddNew
    9              0.000026 syn keyword vbEvents OnComm Paint PanelClick PanelDblClick PathChange
    9              0.000022 syn keyword vbEvents PatternChange PlotActivated PlotSelected
    9              0.000022 syn keyword vbEvents PlotUpdated PointActivated PointLabelActivated
    9              0.000026 syn keyword vbEvents PointLabelSelected PointLabelUpdated PointSelected
    9              0.000025 syn keyword vbEvents PointUpdated PowerQuerySuspend PowerResume
    9              0.000029 syn keyword vbEvents PowerStatusChanged PowerSuspend ProcessTag
    9              0.000023 syn keyword vbEvents ProcessingTimeout QueryChangeConfig QueryClose
    9              0.000023 syn keyword vbEvents QueryComplete QueryCompleted QueryTimeout
    9              0.000029 syn keyword vbEvents QueryUnload ReadProperties RepeatedControlLoaded
    9              0.000025 syn keyword vbEvents RepeatedControlUnloaded Reposition
    9              0.000025 syn keyword vbEvents RequestChangeFileName RequestWriteFile Resize
    9              0.000023 syn keyword vbEvents ResultsChanged RetainedProject RollbackTrans
    9              0.000022 syn keyword vbEvents RowColChange RowCurrencyChange RowResize
    9              0.000027 syn keyword vbEvents RowStatusChanged Scroll SelChange SelectionChanged
    9              0.000022 syn keyword vbEvents SendComplete SendProgress SeriesActivated
    9              0.000025 syn keyword vbEvents SeriesSelected SeriesUpdated SettingChanged Show
    9              0.000026 syn keyword vbEvents SplitChange Start StateChanged StatusUpdate
    9              0.000027 syn keyword vbEvents SysColorsChanged Terminate TimeChanged Timer
    9              0.000022 syn keyword vbEvents TitleActivated TitleSelected TitleUpdated
    9              0.000023 syn keyword vbEvents UnboundAddData UnboundDeleteRow
    9              0.000024 syn keyword vbEvents UnboundGetRelativeBookmark UnboundReadData
    9              0.000026 syn keyword vbEvents UnboundWriteData Unformat Unload UpClick Updated
    9              0.000026 syn keyword vbEvents UserEvent Validate ValidationError
    9              0.000030 syn keyword vbEvents VisibleRecordChanged WillAssociate WillChangeData
    9              0.000021 syn keyword vbEvents WillDissociate WillExecute WillUpdateRows
    9              0.000015 syn keyword vbEvents WriteProperties
                            
                            
    9              0.000052 syn keyword vbFunction Abs Array Asc AscB AscW Atn Avg BOF CBool CByte
    9              0.000047 syn keyword vbFunction CCur CDate CDbl CInt CLng CSng CStr CVDate CVErr
    9              0.000039 syn keyword vbFunction CVar CallByName Cdec Choose Chr ChrB ChrW Command
    9              0.000036 syn keyword vbFunction Cos Count CreateObject CurDir DDB Date DateAdd
    9              0.000050 syn keyword vbFunction DateDiff DatePart DateSerial DateValue Day Dir
    9              0.000031 syn keyword vbFunction DoEvents EOF Environ Error Exp FV FileAttr
    9              0.000028 syn keyword vbFunction FileDateTime FileLen FilterFix Fix Format
    9              0.000023 syn keyword vbFunction FormatCurrency FormatDateTime FormatNumber
    9              0.000085 syn keyword vbFunction FormatPercent FreeFile GetAllStrings GetAttr
    9              0.000027 syn keyword vbFunction GetAutoServerSettings GetObject GetSetting Hex
    9              0.000028 syn keyword vbFunction Hour IIf IMEStatus IPmt InStr Input InputB
    9              0.000048 syn keyword vbFunction InputBox InstrB Int IsArray IsDate IsEmpty IsError
    9              0.000025 syn keyword vbFunction IsMissing IsNull IsNumeric IsObject Join LBound
    9              0.000029 syn keyword vbFunction LCase LOF LTrim Left LeftB Len LenB LoadPicture
    9              0.000029 syn keyword vbFunction LoadResData LoadResPicture LoadResString Loc Log
    9              0.000028 syn keyword vbFunction MIRR Max Mid MidB Min Minute Month MonthName
    9              0.000037 syn keyword vbFunction MsgBox NPV NPer Now Oct PPmt PV Partition Pmt
    9              0.000030 syn keyword vbFunction QBColor RGB RTrim Rate Replace Right RightB Rnd
    9              0.000036 syn keyword vbFunction Round SLN SYD Second Seek Sgn Shell Sin Space Spc
    9              0.000030 syn keyword vbFunction Split Sqr StDev StDevP Str StrComp StrConv
    9              0.000030 syn keyword vbFunction StrReverse String Sum Switch Tab Tan Time
    9              0.000028 syn keyword vbFunction TimeSerial TimeValue Timer Trim TypeName UBound
    9              0.000025 syn keyword vbFunction UCase Val Var VarP VarType Weekday WeekdayName
    9              0.000013 syn keyword vbFunction Year
                            
    9              0.000033 syn keyword vbMethods AboutBox Accept Activate Add AddCustom AddFile
    9              0.000033 syn keyword vbMethods AddFromFile AddFromGuid AddFromString
    9              0.000026 syn keyword vbMethods AddFromTemplate AddItem AddNew AddToAddInToolbar
    9              0.000024 syn keyword vbMethods AddToolboxProgID Append AppendAppendChunk
    9              0.000025 syn keyword vbMethods AppendChunk Arrange Assert AsyncRead BatchUpdate
    9              0.000024 syn keyword vbMethods BeginQueryEdit BeginTrans Bind BuildPath
    9              0.000025 syn keyword vbMethods CanPropertyChange Cancel CancelAsyncRead
    9              0.000071 syn keyword vbMethods CancelBatch CancelUpdate CaptureImage CellText
    9              0.000029 syn keyword vbMethods CellValue Circle Clear ClearFields ClearSel
    9              0.000027 syn keyword vbMethods ClearSelCols ClearStructure Clone Close Cls
    9              0.000027 syn keyword vbMethods ColContaining CollapseAll ColumnSize CommitTrans
    9              0.000028 syn keyword vbMethods CompactDatabase Compose Connect Copy CopyFile
    9              0.000025 syn keyword vbMethods CopyFolder CopyQueryDef Count CreateDatabase
    9              0.000034 syn keyword vbMethods CreateDragImage CreateEmbed CreateField
    9              0.000025 syn keyword vbMethods CreateFolder CreateGroup CreateIndex CreateLink
    9              0.000031 syn keyword vbMethods CreatePreparedStatement CreatePropery CreateQuery
    9              0.000023 syn keyword vbMethods CreateQueryDef CreateRelation CreateTableDef
    9              0.000027 syn keyword vbMethods CreateTextFile CreateToolWindow CreateUser
    9              0.000027 syn keyword vbMethods CreateWorkspace Customize Cut Delete
    9              0.000026 syn keyword vbMethods DeleteColumnLabels DeleteColumns DeleteFile
    9              0.000023 syn keyword vbMethods DeleteFolder DeleteLines DeleteRowLabels
    9              0.000036 syn keyword vbMethods DeleteRows DeselectAll DesignerWindow DoVerb Drag
    9              0.000029 syn keyword vbMethods Draw DriveExists Edit EditCopy EditPaste EndDoc
    9              0.000034 syn keyword vbMethods EnsureVisible EstablishConnection Execute Exists
    9              0.000028 syn keyword vbMethods Expand Export ExportReport ExtractIcon Fetch
    9              0.000026 syn keyword vbMethods FetchVerbs FileExists Files FillCache Find
    9              0.000027 syn keyword vbMethods FindFirst FindItem FindLast FindNext FindPrevious
    9              0.000025 syn keyword vbMethods FolderExists Forward GetAbsolutePathName
    9              0.000025 syn keyword vbMethods GetBaseName GetBookmark GetChunk GetClipString
    9              0.000028 syn keyword vbMethods GetData GetDrive GetDriveName GetFile GetFileName
    9              0.000024 syn keyword vbMethods GetFirstVisible GetFolder GetFormat GetHeader
    9              0.000024 syn keyword vbMethods GetLineFromChar GetNumTicks GetParentFolderName
    9              0.000022 syn keyword vbMethods GetRows GetSelectedPart GetSelection
    9              0.000022 syn keyword vbMethods GetSpecialFolder GetTempName GetText
    9              0.000025 syn keyword vbMethods GetVisibleCount GoBack GoForward Hide HitTest
    9              0.000025 syn keyword vbMethods HoldFields Idle Import InitializeLabels Insert
    9              0.000023 syn keyword vbMethods InsertColumnLabels InsertColumns InsertFile
    9              0.000021 syn keyword vbMethods InsertLines InsertObjDlg InsertRowLabels
    9              0.000029 syn keyword vbMethods InsertRows Item Keys KillDoc Layout Line Lines
    9              0.000027 syn keyword vbMethods LinkExecute LinkPoke LinkRequest LinkSend Listen
    9              0.000024 syn keyword vbMethods LoadFile LoadResData LoadResPicture LoadResString
    9              0.000023 syn keyword vbMethods LogEvent MakeCompileFile MakeCompiledFile
    9              0.000025 syn keyword vbMethods MakeReplica MoreResults Move MoveData MoveFile
    9              0.000021 syn keyword vbMethods MoveFirst MoveFolder MoveLast MoveNext
    9              0.000025 syn keyword vbMethods MovePrevious NavigateTo NewPage NewPassword
    9              0.000027 syn keyword vbMethods NextRecordset OLEDrag OnAddinsUpdate OnConnection
    9              0.000023 syn keyword vbMethods OnDisconnection OnStartupComplete Open
    9              0.000031 syn keyword vbMethods OpenAsTextStream OpenConnection OpenDatabase
    9              0.000026 syn keyword vbMethods OpenQueryDef OpenRecordset OpenResultset OpenURL
    9              0.000025 syn keyword vbMethods Overlay PSet PaintPicture PastSpecialDlg Paste
    9              0.000024 syn keyword vbMethods PeekData Play Point PopulatePartial PopupMenu
    9              0.000027 syn keyword vbMethods Print PrintForm PrintReport PropertyChanged Quit
    9              0.000021 syn keyword vbMethods Raise RandomDataFill RandomFillColumns
    9              0.000026 syn keyword vbMethods RandomFillRows ReFill Read ReadAll ReadFromFile
    9              0.000034 syn keyword vbMethods ReadLine ReadProperty Rebind Refresh RefreshLink
    9              0.000024 syn keyword vbMethods RegisterDatabase ReleaseInstance Reload Remove
    9              0.000025 syn keyword vbMethods RemoveAddInFromToolbar RemoveAll RemoveItem Render
    9              0.000028 syn keyword vbMethods RepairDatabase ReplaceLine Reply ReplyAll Requery
    9              0.000021 syn keyword vbMethods ResetCustom ResetCustomLabel ResolveName
    9              0.000023 syn keyword vbMethods RestoreToolbar Resync Rollback RollbackTrans
    9              0.000026 syn keyword vbMethods RowBookmark RowContaining RowTop Save SaveAs
    9              0.000025 syn keyword vbMethods SaveFile SaveToFile SaveToOle1File SaveToolbar
    9              0.000030 syn keyword vbMethods Scale ScaleX ScaleY Scroll SelPrint SelectAll
    9              0.000029 syn keyword vbMethods SelectPart Send SendData Set SetAutoServerSettings
    9              0.000045 syn keyword vbMethods SetData SetFocus SetOption SetSelection SetSize
    9              0.000027 syn keyword vbMethods SetText SetViewport Show ShowColor ShowFont
    9              0.000025 syn keyword vbMethods ShowHelp ShowOpen ShowPrinter ShowSave
    9              0.000066 syn keyword vbMethods ShowWhatsThis SignOff SignOn Size Skip SkipLine
    9              0.000045 syn keyword vbMethods Span Split SplitContaining StartLabelEdit
    9              0.000047 syn keyword vbMethods StartLogging Stop Synchronize Tag TextHeight
    9              0.000028 syn keyword vbMethods TextWidth ToDefaults Trace TwipsToChartPart
    9              0.000026 syn keyword vbMethods TypeByChartType URLFor Update UpdateControls
    9              0.000025 syn keyword vbMethods UpdateRecord UpdateRow Upto ValidateControls Value
    9              0.000028 syn keyword vbMethods WhatsThisMode Write WriteBlankLines WriteLine
    9              0.000026 syn keyword vbMethods WriteProperty WriteTemplate ZOrder
    9              0.000021 syn keyword vbMethods rdoCreateEnvironment rdoRegisterDataSource
                            
    9              0.000039 syn keyword vbStatement Alias AppActivate As Base Beep Begin Call ChDir
    9              0.000040 syn keyword vbStatement ChDrive Close Const Date Declare DefBool DefByte
    9              0.000041 syn keyword vbStatement DefCur DefDate DefDbl DefDec DefInt DefLng DefObj
    9              0.000061 syn keyword vbStatement DefSng DefStr DefVar Deftype DeleteSetting Dim Do
    9              0.000049 syn keyword vbStatement Each ElseIf End Enum Erase Error Event Exit
    9              0.000033 syn keyword vbStatement Explicit FileCopy For ForEach Function Get GoSub
    9              0.000033 syn keyword vbStatement GoTo Gosub Implements Kill LSet Let Lib LineInput
    9              0.000037 syn keyword vbStatement Load Lock Loop Mid MkDir Name Next On OnError Open
    9              0.000035 syn keyword vbStatement Option Preserve Private Property Public Put RSet
    9              0.000028 syn keyword vbStatement RaiseEvent Randomize ReDim Redim Reset Resume
    9              0.000031 syn keyword vbStatement Return RmDir SavePicture SaveSetting Seek SendKeys
    9              0.000045 syn keyword vbStatement Sendkeys Set SetAttr Static Step Stop Sub Time
    9              0.000045 syn keyword vbStatement Type Unload Unlock Until Wend While Width With
    9              0.000015 syn keyword vbStatement Write
                            
    9              0.000052 syn keyword vbKeyword As Binary ByRef ByVal Date Empty Error Friend Get
    9              0.000033 syn keyword vbKeyword Input Is Len Lock Me Mid New Nothing Null On
    9              0.000029 syn keyword vbKeyword Option Optional ParamArray Print Private Property
    9              0.000025 syn keyword vbKeyword Public PublicNotCreateable OnNewProcessSingleUse
    9              0.000041 syn keyword vbKeyword InSameProcessMultiUse GlobalMultiUse Resume Seek
    9              0.000026 syn keyword vbKeyword Set Static Step String Time WithEvents
                            
    9              0.000013 syn keyword vbTodo contained    TODO
                            
                            "Datatypes
    9              0.000039 syn keyword vbTypes Boolean Byte Currency Date Decimal Double Empty
    9              0.000028 syn keyword vbTypes Integer Long Object Single String Variant
                            
                            "VB defined values
    9              0.000032 syn keyword vbDefine dbBigInt dbBinary dbBoolean dbByte dbChar
    9              0.000048 syn keyword vbDefine dbCurrency dbDate dbDecimal dbDouble dbFloat
    9              0.000034 syn keyword vbDefine dbGUID dbInteger dbLong dbLongBinary dbMemo
    9              0.000027 syn keyword vbDefine dbNumeric dbSingle dbText dbTime dbTimeStamp
    9              0.000015 syn keyword vbDefine dbVarBinary
                            
                            "VB defined values
    9              0.000025 syn keyword vbDefine vb3DDKShadow vb3DFace vb3DHighlight vb3DLight
    9              0.000022 syn keyword vbDefine vb3DShadow vbAbort vbAbortRetryIgnore
    9              0.000023 syn keyword vbDefine vbActiveBorder vbActiveTitleBar vbAlias
    9              0.000021 syn keyword vbDefine vbApplicationModal vbApplicationWorkspace
    9              0.000030 syn keyword vbDefine vbAppTaskManager vbAppWindows vbArchive vbArray
    9              0.000025 syn keyword vbDefine vbBack vbBinaryCompare vbBlack vbBlue vbBoolean
    9              0.000025 syn keyword vbDefine vbButtonFace vbButtonShadow vbButtonText vbByte
    9              0.000026 syn keyword vbDefine vbCalGreg vbCalHijri vbCancel vbCr vbCritical
    9              0.000025 syn keyword vbDefine vbCrLf vbCurrency vbCyan vbDatabaseCompare
    9              0.000027 syn keyword vbDefine vbDataObject vbDate vbDecimal vbDefaultButton1
    9              0.000027 syn keyword vbDefine vbDefaultButton2 vbDefaultButton3 vbDefaultButton4
    9              0.000030 syn keyword vbDefine vbDesktop vbDirectory vbDouble vbEmpty vbError
    9              0.000023 syn keyword vbDefine vbExclamation vbFirstFourDays vbFirstFullWeek
    9              0.000024 syn keyword vbDefine vbFirstJan1 vbFormCode vbFormControlMenu
    9              0.000026 syn keyword vbDefine vbFormFeed vbFormMDIForm vbFriday vbFromUnicode
    9              0.000029 syn keyword vbDefine vbGrayText vbGreen vbHidden vbHide vbHighlight
    9              0.000026 syn keyword vbDefine vbHighlightText vbHiragana vbIgnore vbIMEAlphaDbl
    9              0.000033 syn keyword vbDefine vbIMEAlphaSng vbIMEDisable vbIMEHiragana
    9              0.000025 syn keyword vbDefine vbIMEKatakanaDbl vbIMEKatakanaSng vbIMEModeAlpha
    9              0.000022 syn keyword vbDefine vbIMEModeAlphaFull vbIMEModeDisable
    9              0.000027 syn keyword vbDefine vbIMEModeHangul vbIMEModeHangulFull
    9              0.000027 syn keyword vbDefine vbIMEModeHiragana vbIMEModeKatakana
    9              0.000024 syn keyword vbDefine vbIMEModeKatakanaHalf vbIMEModeNoControl
    9              0.000072 syn keyword vbDefine vbIMEModeOff vbIMEModeOn vbIMENoOp vbIMEOff
    9              0.000025 syn keyword vbDefine vbIMEOn vbInactiveBorder vbInactiveCaptionText
    9              0.000035 syn keyword vbDefine vbInactiveTitleBar vbInfoBackground vbInformation
    9              0.000029 syn keyword vbDefine vbInfoText vbInteger vbKatakana vbKey0 vbKey1
    9              0.000030 syn keyword vbDefine vbKey2 vbKey3 vbKey4 vbKey5 vbKey6 vbKey7 vbKey8
    9              0.000028 syn keyword vbDefine vbKey9 vbKeyA vbKeyAdd vbKeyB vbKeyBack vbKeyC
    9              0.000027 syn keyword vbDefine vbKeyCancel vbKeyCapital vbKeyClear vbKeyControl
    9              0.000030 syn keyword vbDefine vbKeyD vbKeyDecimal vbKeyDelete vbKeyDivide
    9              0.000039 syn keyword vbDefine vbKeyDown vbKeyE vbKeyEnd vbKeyEscape vbKeyExecute
    9              0.000029 syn keyword vbDefine vbKeyF vbKeyF1 vbKeyF10 vbKeyF11 vbKeyF12 vbKeyF13
    9              0.000037 syn keyword vbDefine vbKeyF14 vbKeyF15 vbKeyF16 vbKeyF2 vbKeyF3 vbKeyF4
    9              0.000026 syn keyword vbDefine vbKeyF5 vbKeyF6 vbKeyF7 vbKeyF8 vbKeyF9 vbKeyG
    9              0.000029 syn keyword vbDefine vbKeyH vbKeyHelp vbKeyHome vbKeyI vbKeyInsert
    9              0.000031 syn keyword vbDefine vbKeyJ vbKeyK vbKeyL vbKeyLButton vbKeyLeft vbKeyM
    9              0.000026 syn keyword vbDefine vbKeyMButton vbKeyMenu vbKeyMultiply vbKeyN
    9              0.000023 syn keyword vbDefine vbKeyNumlock vbKeyNumpad0 vbKeyNumpad1
    9              0.000024 syn keyword vbDefine vbKeyNumpad2 vbKeyNumpad3 vbKeyNumpad4
    9              0.000037 syn keyword vbDefine vbKeyNumpad5 vbKeyNumpad6 vbKeyNumpad7
    9              0.000025 syn keyword vbDefine vbKeyNumpad8 vbKeyNumpad9 vbKeyO vbKeyP
    9              0.000032 syn keyword vbDefine vbKeyPageDown vbKeyPageUp vbKeyPause vbKeyPrint
    9              0.000032 syn keyword vbDefine vbKeyQ vbKeyR vbKeyRButton vbKeyReturn vbKeyRight
    9              0.000034 syn keyword vbDefine vbKeyS vbKeySelect vbKeySeparator vbKeyShift
    9              0.000026 syn keyword vbDefine vbKeySnapshot vbKeySpace vbKeySubtract vbKeyT
    9              0.000032 syn keyword vbDefine vbKeyTab vbKeyU vbKeyUp vbKeyV vbKeyW vbKeyX
    9              0.000029 syn keyword vbDefine vbKeyY vbKeyZ vbLf vbLong vbLowerCase vbMagenta
    9              0.000028 syn keyword vbDefine vbMaximizedFocus vbMenuBar vbMenuText
    9              0.000026 syn keyword vbDefine vbMinimizedFocus vbMinimizedNoFocus vbMonday
    9              0.000036 syn keyword vbDefine vbMsgBox vbMsgBoxHelpButton vbMsgBoxRight
    9              0.000023 syn keyword vbDefine vbMsgBoxRtlReading vbMsgBoxSetForeground
    9              0.000033 syn keyword vbDefine vbMsgBoxText vbNarrow vbNewLine vbNo vbNormal
    9              0.000027 syn keyword vbDefine vbNormalFocus vbNormalNoFocus vbNull vbNullChar
    9              0.000026 syn keyword vbDefine vbNullString vbObject vbObjectError vbOK
    9              0.000028 syn keyword vbDefine vbOKCancel vbOKOnly vbProperCase vbQuestion
    9              0.000028 syn keyword vbDefine vbReadOnly vbRed vbRetry vbRetryCancel vbSaturday
    9              0.000035 syn keyword vbDefine vbScrollBars vbSingle vbString vbSunday vbSystem
    9              0.000025 syn keyword vbDefine vbSystemModal vbTab vbTextCompare vbThursday
    9              0.000028 syn keyword vbDefine vbTitleBarText vbTuesday vbUnicode vbUpperCase
    9              0.000025 syn keyword vbDefine vbUseSystem vbUseSystemDayOfWeek vbVariant
    9              0.000035 syn keyword vbDefine vbVerticalTab vbVolume vbWednesday vbWhite vbWide
    9              0.000025 syn keyword vbDefine vbWindowBackground vbWindowFrame vbWindowText
    9              0.000023 syn keyword vbDefine vbYellow vbYes vbYesNo vbYesNoCancel
                            
                            "Numbers
                            "integer number, or floating point number without a dot.
    9              0.000041 syn match vbNumber "\<\d\+\>"
                            "floating point number, with dot
    9              0.000039 syn match vbNumber "\<\d\+\.\d*\>"
                            "floating point number, starting with a dot
    9              0.000039 syn match vbNumber "\.\d\+\>"
                            "syn match  vbNumber            "{[[:xdigit:]-]\+}\|&[hH][[:xdigit:]]\+&"
                            "syn match  vbNumber            ":[[:xdigit:]]\+"
                            "syn match  vbNumber            "[-+]\=\<\d\+\>"
    9              0.000055 syn match  vbFloat              "[-+]\=\<\d\+[eE][\-+]\=\d\+"
    9              0.000081 syn match  vbFloat              "[-+]\=\<\d\+\.\d*\([eE][\-+]\=\d\+\)\="
    9              0.000046 syn match  vbFloat              "[-+]\=\<\.\d\+\([eE][\-+]\=\d\+\)\="
                            
                            " String and Character constants
    9              0.000063 syn region  vbString		start=+"+  end=+"\|$+
    9              0.000064 syn region  vbComment		start="\(^\|\s\)REM\s" end="$" contains=vbTodo
    9              0.000049 syn region  vbComment		start="\(^\|\s\)\'"   end="$" contains=vbTodo
    9              0.000030 syn match   vbLineLabel		"^\h\w\+:"
    9              0.000035 syn match   vbLineNumber	"^\d\+\(:\|\s\|$\)"
    9              0.000061 syn match   vbTypeSpecifier  "\<\a\w*[@\$%&!#]"ms=s+1
    9              0.000038 syn match   vbTypeSpecifier  "#[a-zA-Z0-9]"me=e-1
                            " Conditional Compilation
    9              0.000037 syn match  vbPreProc "^#const\>"
    9              0.000115 syn region vbPreProc matchgroup=PreProc start="^#if\>"     end="\<then\>" transparent contains=TOP
    9              0.000076 syn region vbPreProc matchgroup=PreProc start="^#elseif\>" end="\<then\>" transparent contains=TOP
    9              0.000029 syn match  vbPreProc "^#else\>"
    9              0.000028 syn match  vbPreProc "^#end\s*if\>"
                            
                            " Define the default highlighting.
                            " Only when an item doesn't have highlighting yet
                            
    9              0.000019 hi def link vbBoolean           Boolean
    9              0.000017 hi def link vbLineNumber        Comment
    9              0.000012 hi def link vbLineLabel         Comment
    9              0.000010 hi def link vbComment           Comment
    9              0.000012 hi def link vbConditional       Conditional
    9              0.000010 hi def link vbConst             Constant
    9              0.000011 hi def link vbDefine            Constant
    9              0.000010 hi def link vbError             Error
    9              0.000011 hi def link vbFunction          Identifier
    9              0.000010 hi def link vbIdentifier        Identifier
    9              0.000011 hi def link vbNumber            Number
    9              0.000010 hi def link vbFloat             Float
    9              0.000013 hi def link vbMethods           PreProc
    9              0.000013 hi def link vbOperator          Operator
    9              0.000010 hi def link vbRepeat            Repeat
    9              0.000010 hi def link vbString            String
    9              0.000011 hi def link vbStatement         Statement
    9              0.000011 hi def link vbKeyword           Statement
    9              0.000015 hi def link vbEvents            Special
    9              0.000015 hi def link vbTodo              Todo
    9              0.000010 hi def link vbTypes             Type
    9              0.000015 hi def link vbTypeSpecifier     Type
    9              0.000009 hi def link vbPreProc           PreProc
                            
    9              0.000029 let b:current_syntax = "vb"
                            
                            " vim: ts=8

SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax\css.vim
Sourced 9 times
Total time:   0.145852
 Self time:   0.145713

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     Cascading Style Sheets
                            " Previous Contributor List:
                            "               Jules Wang      <w.jq0722@gmail.com>
                            "               Claudio Fleiner <claudio@fleiner.com>
                            "               Yeti            (Add full CSS2, HTML4 support)
                            "               Nikolai Weibull (Add CSS2 support)
                            " URL:          https://github.com/vim-language-dept/css-syntax.vim
                            " Maintainer:   Jay Sitter <jay@jaysitter.com>
                            " Last Change:  2024 Mar 2
                            
                            " quit when a syntax file was already loaded
    9              0.000049 if !exists("main_syntax")
                              if exists("b:current_syntax")
                                finish
                              endif
                              let main_syntax = 'css'
    9              0.000030 elseif exists("b:current_syntax") && b:current_syntax == "css"
                              finish
    9              0.000005 endif
                            
    9              0.000031 let s:cpo_save = &cpo
    9   0.000128   0.000059 set cpo&vim
                            
    9              0.000019 syn case ignore
                            " Add dash to allowed keyword characters.
    9              0.000076 syn iskeyword @,48-57,_,192-255,-
                            
                            " HTML4 tags
    9              0.000048 syn keyword cssTagName abbr address area a b base
    9              0.000033 syn keyword cssTagName bdo blockquote body br button
    9              0.000038 syn keyword cssTagName caption cite code col colgroup dd del
    9              0.000033 syn keyword cssTagName dfn div dl dt em fieldset form
    9              0.000035 syn keyword cssTagName h1 h2 h3 h4 h5 h6 head hr html img i
    9              0.000037 syn keyword cssTagName iframe input ins isindex kbd label legend li
    9              0.000038 syn keyword cssTagName link map menu meta noscript ol optgroup
    9              0.000039 syn keyword cssTagName option p param picture pre q s samp script small
    9              0.000038 syn keyword cssTagName span strong sub sup tbody td
    9              0.000033 syn keyword cssTagName textarea tfoot th thead title tr ul u var
    9              0.000019 syn keyword cssTagName object svg
    9              0.000076 syn match   cssTagName /\<select\>\|\<style\>\|\<table\>/
                            
                            " 34 HTML5 tags
    9              0.000035 syn keyword cssTagName article aside audio bdi canvas command data
    9              0.000036 syn keyword cssTagName datalist details dialog embed figcaption figure footer
    9              0.000032 syn keyword cssTagName header hgroup keygen main mark menuitem meter nav
    9              0.000026 syn keyword cssTagName output progress rt rp ruby section
    9              0.000031 syn keyword cssTagName source summary time track video wbr
                            
                            " Tags not supported in HTML5
                            " acronym applet basefont big center dir
                            " font frame frameset noframes strike tt
                            
    9              0.000025 syn match cssTagName "\*"
                            
                            " selectors
    9              0.000034 syn match cssSelectorOp "[,>+~]"
    9              0.000047 syn match cssSelectorOp2 "[~|^$*]\?=" contained
    9              0.000070 syn region cssAttributeSelector matchgroup=cssSelectorOp start="\[" end="]" contains=cssUnicodeEscape,cssSelectorOp2,cssStringQ,cssStringQQ
                            
                            " .class and #id
    9              0.000052 syn match cssClassName "\.-\=[A-Za-z_][A-Za-z0-9_-]*" contains=cssClassNameDot
    9              0.000019 syn match cssClassNameDot contained '\.'
                            
    9              0.000017 try
    9              0.000055 syn match cssIdentifier "#[A-Za-zÀ-ÿ_@][A-Za-zÀ-ÿ0-9_@-]*"
                            catch /^.*/
                            syn match cssIdentifier "#[A-Za-z_@][A-Za-z0-9_@-]*"
    9              0.000012 endtry
                            
                            " digits
    9              0.000051 syn match cssValueInteger contained "[-+]\=\d\+" contains=cssUnitDecorators
    9              0.000056 syn match cssValueNumber contained "[-+]\=\d\+\(\.\d*\)\=" contains=cssUnitDecorators
    9              0.000140 syn match cssValueLength contained "[-+]\=\d\+\(\.\d*\)\=\(mm\|cm\|in\|pt\|pc\|em\|ex\|px\|rem\|dpi\|dppx\|dpcm\|fr\|vw\|vh\|vmin\|vmax\|ch\)\>" contains=cssUnitDecorators
    9              0.000036 syn match cssValueLength contained "[-+]\=\d\+\(\.\d*\)\=%" contains=cssUnitDecorators
    9              0.000063 syn match cssValueAngle contained "[-+]\=\d\+\(\.\d*\)\=\(deg\|grad\|rad\)\>" contains=cssUnitDecorators
    9              0.000042 syn match cssValueTime contained "+\=\d\+\(\.\d*\)\=\(ms\|s\)\>" contains=cssUnitDecorators
    9              0.000036 syn match cssValueFrequency contained "+\=\d\+\(\.\d*\)\=\(Hz\|kHz\)\>" contains=cssUnitDecorators
                            
                            " The 16 basic color names
    9              0.000057 syn keyword cssColor contained aqua black blue fuchsia gray green lime maroon navy olive purple red silver teal yellow
                            
                            " 130 more color names
    9              0.000025 syn keyword cssColor contained aliceblue antiquewhite aquamarine azure
    9              0.000030 syn keyword cssColor contained beige bisque blanchedalmond blueviolet brown burlywood
    9              0.000042 syn keyword cssColor contained cadetblue chartreuse chocolate coral cornflowerblue cornsilk crimson cyan
    9              0.000101 syn match cssColor contained /\<dark\(blue\|cyan\|goldenrod\|gray\|green\|grey\|khaki\)\>/
    9              0.000058 syn match cssColor contained /\<dark\(magenta\|olivegreen\|orange\|orchid\|red\|salmon\|seagreen\)\>/
    9              0.000051 syn match cssColor contained /\<darkslate\(blue\|gray\|grey\)\>/
    9              0.000100 syn match cssColor contained /\<dark\(turquoise\|violet\)\>/
    9              0.000049 syn keyword cssColor contained deeppink deepskyblue dimgray dimgrey dodgerblue firebrick
    9              0.000030 syn keyword cssColor contained floralwhite forestgreen gainsboro ghostwhite gold
    9              0.000028 syn keyword cssColor contained goldenrod greenyellow grey honeydew hotpink
    9              0.000038 syn keyword cssColor contained indianred indigo ivory khaki lavender lavenderblush lawngreen
    9              0.000023 syn keyword cssColor contained lemonchiffon limegreen linen magenta
    9              0.000062 syn match cssColor contained /\<light\(blue\|coral\|cyan\|goldenrodyellow\|gray\|green\)\>/
    9              0.000060 syn match cssColor contained /\<light\(grey\|pink\|salmon\|seagreen\|skyblue\|yellow\)\>/
    9              0.000084 syn match cssColor contained /\<light\(slategray\|slategrey\|steelblue\)\>/
    9              0.000056 syn match cssColor contained /\<medium\(aquamarine\|blue\|orchid\|purple\|seagreen\)\>/
    9              0.000046 syn match cssColor contained /\<medium\(slateblue\|springgreen\|turquoise\|violetred\)\>/
    9              0.000032 syn keyword cssColor contained midnightblue mintcream mistyrose moccasin navajowhite
    9              0.000027 syn keyword cssColor contained oldlace olivedrab orange orangered orchid
    9              0.000135 syn match cssColor contained /\<pale\(goldenrod\|green\|turquoise\|violetred\)\>/
    9              0.000025 syn keyword cssColor contained papayawhip peachpuff peru pink plum powderblue
    9              0.000029 syn keyword cssColor contained rosybrown royalblue rebeccapurple saddlebrown salmon
    9              0.000031 syn keyword cssColor contained sandybrown seagreen seashell sienna skyblue slateblue
    9              0.000036 syn keyword cssColor contained slategray slategrey snow springgreen steelblue tan
    9              0.000039 syn keyword cssColor contained thistle tomato turquoise violet wheat
    9              0.000019 syn keyword cssColor contained whitesmoke yellowgreen
                            
                            " FIXME: These are actually case-insensitive too, but (a) specs recommend using
                            " mixed-case (b) it's hard to highlight the word `Background' correctly in
                            " all situations
    9              0.000030 syn case match
    9              0.000077 syn keyword cssColor contained ActiveBorder ActiveCaption AppWorkspace ButtonFace ButtonHighlight ButtonShadow ButtonText CaptionText GrayText Highlight HighlightText InactiveBorder InactiveCaption InactiveCaptionText InfoBackground InfoText Menu MenuText Scrollbar ThreeDDarkShadow ThreeDFace ThreeDHighlight ThreeDLightShadow ThreeDShadow Window WindowFrame WindowText Background
    9              0.000013 syn case ignore
                            
    9              0.000033 syn match cssImportant contained "!\s*important\>"
    9              0.000034 syn match cssCustomProp contained "\<--[a-zA-Z0-9-_]*\>"
                            
    9              0.000036 syn match cssColor contained "\<transparent\>"
    9              0.000029 syn match cssColor contained "\<currentColor\>"
    9              0.000023 syn match cssColor contained "\<white\>"
    9              0.000041 syn match cssColor contained "#\x\{3,4\}\>" contains=cssUnitDecorators
    9              0.000038 syn match cssColor contained "#\x\{6\}\>" contains=cssUnitDecorators
    9              0.000033 syn match cssColor contained "#\x\{8\}\>" contains=cssUnitDecorators
                            
    9              0.000098 syn region cssURL contained matchgroup=cssFunctionName start="\<\(uri\|url\|local\|format\)\s*(" end=")" contains=cssStringQ,cssStringQQ oneline
    9              0.010029 syn region cssMathGroup contained matchgroup=cssMathParens start="(" end=")" containedin=cssFunction,cssMathGroup contains=cssCustomProp,cssValue.*,cssFunction,cssColor,cssStringQ,cssStringQQ oneline
    9              0.009685 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(var\|calc\)\s*(" end=")" contains=cssCustomProp,cssValue.*,cssFunction,cssURL,cssColor,cssStringQ,cssStringQQ oneline
    9              0.000153 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(rgb\|clip\|attr\|counter\|rect\|cubic-bezier\|steps\)\s*(" end=")" oneline  contains=cssValueInteger,cssValueNumber,cssValueLength,cssFunctionComma
    9              0.000106 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(rgba\|hsl\|hsla\|color-stop\|from\|to\)\s*(" end=")" oneline  contains=cssColor,cssValueInteger,cssValueNumber,cssValueLength,cssFunctionComma,cssFunction
    9              0.000231 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(linear-\|radial-\|conic-\)\=\gradient\s*(" end=")" oneline  contains=cssColor,cssValueInteger,cssValueNumber,cssValueLength,cssFunction,cssGradientAttr,cssFunctionComma
    9              0.000154 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(matrix\(3d\)\=\|scale\(3d\|X\|Y\|Z\)\=\|translate\(3d\|X\|Y\|Z\)\=\|skew\(X\|Y\)\=\|rotate\(3d\|X\|Y\|Z\)\=\|perspective\)\s*(" end=")" oneline contains=cssValueInteger,cssValueNumber,cssValueLength,cssValueAngle,cssFunctionComma
    9              0.000130 syn region cssFunction contained matchgroup=cssFunctionName start="\<\(blur\|brightness\|contrast\|drop-shadow\|grayscale\|hue-rotate\|invert\|opacity\|saturate\|sepia\)\s*(" end=")" oneline contains=cssValueInteger,cssValueNumber,cssValueLength,cssValueAngle,cssFunctionComma
    9              0.000052 syn keyword cssGradientAttr contained top bottom left right cover center middle ellipse at
    9              0.000020 syn match cssFunctionComma contained ","
                            
                            " Common Prop and Attr
    9              0.000033 syn keyword cssCommonAttr contained auto none inherit all default normal
    9              0.000035 syn keyword cssCommonAttr contained top bottom center stretch hidden visible
    9              0.000038 syn match cssCommonAttr contained "\<\(max-\|min-\|fit-\)content\>"
                            "------------------------------------------------
                            " CSS Animations
                            " http://www.w3.org/TR/css3-animations/
    9              0.000118 syn match cssAnimationProp contained "\<animation\(-\(delay\|direction\|duration\|fill-mode\|name\|play-state\|timing-function\|iteration-count\)\)\=\>"
                            
                            " animation-direction attributes
    9              0.000024 syn keyword cssAnimationAttr contained alternate reverse
    9              0.000039 syn match cssAnimationAttr contained "\<alternate-reverse\>"
                            
                            " animation-fill-mode attributes
    9              0.000020 syn keyword cssAnimationAttr contained forwards backwards both
                            
                            " animation-play-state attributes
    9              0.000016 syn keyword cssAnimationAttr contained running paused
                            
                            " animation-iteration-count attributes
    9              0.000019 syn keyword cssAnimationAttr contained infinite
                            "------------------------------------------------
                            "  CSS Backgrounds and Borders Module Level 3
                            "  http://www.w3.org/TR/css3-background/
    9              0.000089 syn match cssBackgroundProp contained "\<background\(-\(attachment\|clip\|color\|image\|origin\|position\|repeat\|size\)\)\=\>"
                            " background-attachment attributes
    9              0.000023 syn keyword cssBackgroundAttr contained scroll fixed local
                            
                            " background-position attributes
    9              0.000020 syn keyword cssBackgroundAttr contained left center right top bottom
                            
                            " background-repeat attributes
    9              0.000026 syn match cssBackgroundAttr contained "\<no-repeat\>"
    9              0.000036 syn match cssBackgroundAttr contained "\<repeat\(-[xy]\)\=\>"
                            
                            " background-size attributes
    9              0.000017 syn keyword cssBackgroundAttr contained cover contain
                            
    9              0.000093 syn match cssBorderProp contained "\<border\(-\(top\|right\|bottom\|left\)\)\=\(-\(width\|color\|style\)\)\=\>"
    9              0.000069 syn match cssBorderProp contained "\<border\(-\(top\|bottom\)-\(left\|right\)\)\=-radius\>"
    9              0.000057 syn match cssBorderProp contained "\<border-\(inline\|block\)\(-\(start\|end\)\)\=\(-\(style\|width\|color\)\)\=\>"
    9              0.000057 syn match cssBorderProp contained "\<border-\(start\|end\)-\(start\|end\)-radius\>"
    9              0.000070 syn match cssBorderProp contained "\<border-image\(-\(outset\|repeat\|slice\|source\|width\)\)\=\>"
    9              0.000040 syn match cssBorderProp contained "\<box-decoration-break\>"
    9              0.000026 syn match cssBorderProp contained "\<box-shadow\>"
                            
                            " border-image attributes
    9              0.000032 syn keyword cssBorderAttr contained stretch round fill
                            
                            " border-style attributes
    9              0.000036 syn keyword cssBorderAttr contained dotted dashed solid double groove ridge inset outset
                            
                            " border-width attributes
    9              0.000020 syn keyword cssBorderAttr contained thin thick medium
                            
                            " box-decoration-break attributes
    9              0.000019 syn keyword cssBorderAttr contained clone slice
                            "------------------------------------------------
                            
    9              0.000059 syn match cssBoxProp contained "\<padding\(-\(top\|right\|bottom\|left\)\)\=\>"
    9              0.000042 syn match cssBoxProp contained "\<margin\(-\(top\|right\|bottom\|left\)\)\=\>"
    9              0.000072 syn match cssBoxProp contained "\<\(margin\|padding\)\(-\(inline\|block\)\(-\(start\|end\)\)\)\=\>"
    9              0.000039 syn match cssBoxProp contained "\<overflow\(-\(x\|y\|style\)\)\=\>"
    9              0.000111 syn match cssBoxProp contained "\<rotation\(-point\)\=\>"
    9              0.000022 syn keyword cssBoxAttr contained visible hidden scroll auto
    9              0.000033 syn match cssBoxAttr contained "\<no-\(display\|content\)\>"
                            
    9              0.000019 syn keyword cssCascadeProp contained all
    9              0.000032 syn keyword cssCascadeAttr contained initial unset revert
                            
    9              0.000018 syn keyword cssColorProp contained opacity
    9              0.000070 syn match cssColorProp contained "\<color-profile\>"
    9              0.000030 syn match cssColorProp contained "\<rendering-intent\>"
                            
                            
    9              0.000053 syn match cssDimensionProp contained "\<\(min\|max\)-\(width\|height\)\>"
    9              0.000068 syn keyword cssDimensionProp contained height
    9              0.000013 syn keyword cssDimensionProp contained width
                            
                            " CSS Flexible Box Layout Module Level 1
                            " http://www.w3.org/TR/css3-flexbox/
                            " CSS Box Alignment Module Level 3
                            " http://www.w3.org/TR/css-align-3/
    9              0.000058 syn match cssFlexibleBoxProp contained "\<flex\(-\(direction\|wrap\|flow\|grow\|shrink\|basis\)\)\=\>"
    9              0.000058 syn match cssFlexibleBoxProp contained "\<\(align\|justify\)\(-\(items\|self\|content\)\)\=\>"
    9              0.000013 syn keyword cssFlexibleBoxProp contained order
                            
    9              0.000049 syn match cssFlexibleBoxAttr contained "\<\(row\|column\|wrap\)\(-reverse\)\=\>"
    9              0.000026 syn keyword cssFlexibleBoxAttr contained nowrap stretch baseline center
    9              0.000036 syn match cssFlexibleBoxAttr contained "\<flex\(-\(start\|end\)\)\=\>"
    9              0.000037 syn match cssFlexibleBoxAttr contained "\<space\(-\(between\|around\|evenly\)\)\=\>"
                            
                            " CSS Fonts Module Level 3
                            " http://www.w3.org/TR/css-fonts-3/
    9              0.000158 syn match cssFontProp contained "\<font\(-\(display\|family\|feature-settings\|kerning\|language-override\|size\(-adjust\)\=\|stretch\|style\|synthesis\|variant\(-\(alternates\|caps\|east-asian\|ligatures\|numeric\|position\)\)\=\|weight\)\)\=\>"
                            
                            " font attributes
    9              0.000023 syn keyword cssFontAttr contained icon menu caption
    9              0.000035 syn match cssFontAttr contained "\<message-box\>"
    9              0.000028 syn match cssFontAttr contained "\<status-bar\>"
    9              0.000023 syn keyword cssFontAttr contained larger smaller
    9              0.000057 syn match cssFontAttr contained "\<\(x\{1,2\}-\)\=\(large\|small\)\>"
    9              0.000076 syn match cssFontAttr contained "\<small-\(caps\|caption\)\>"
                            " font-family attributes
    9              0.000029 syn keyword cssFontAttr contained sans-serif serif cursive fantasy monospace
                            " font-feature-settings attributes
    9              0.000018 syn keyword cssFontAttr contained on off
                            " font-stretch attributes
    9              0.000092 syn match cssFontAttr contained "\<\(\(ultra\|extra\|semi\)-\)\=\(condensed\|expanded\)\>"
                            " font-style attributes
    9              0.000018 syn keyword cssFontAttr contained italic oblique
                            " font-synthesis attributes
    9              0.000017 syn keyword cssFontAttr contained weight style
                            " font-weight attributes
    9              0.000017 syn keyword cssFontAttr contained bold bolder lighter
                            " font-display attributes
    9              0.000029 syn keyword cssFontAttr contained auto block swap fallback optional
                            " TODO: font-variant-* attributes
                            "------------------------------------------------
                            
                            " Webkit specific property/attributes
    9              0.000027 syn match cssFontProp contained "\<font-smooth\>"
    9              0.000040 syn match cssFontAttr contained "\<\(subpixel-\)\=\antialiased\>"
                            
                            
                            " CSS Multi-column Layout Module
                            " http://www.w3.org/TR/css3-multicol/
    9              0.000045 syn match cssMultiColumnProp contained "\<break-\(after\|before\|inside\)\>"
    9              0.000072 syn match cssMultiColumnProp contained "\<column-\(count\|fill\|gap\|rule\(-\(color\|style\|width\)\)\=\|span\|width\)\>"
    9              0.000019 syn keyword cssMultiColumnProp contained columns
    9              0.000023 syn keyword cssMultiColumnAttr contained balance medium
    9              0.000028 syn keyword cssMultiColumnAttr contained always left right page column
    9              0.000032 syn match cssMultiColumnAttr contained "\<avoid\(-\(page\|column\)\)\=\>"
                            
                            " http://www.w3.org/TR/css3-break/#page-break
    9              0.000080 syn match cssMultiColumnProp contained "\<page\(-break-\(before\|after\|inside\)\)\=\>"
                            
                            " http://www.w3.org/TR/SVG11/interact.html
    9              0.000074 syn match cssInteractProp contained "\<pointer-events\>"
    9              0.000067 syn match cssInteractAttr contained "\<\(visible\)\=\(Painted\|Fill\|Stroke\)\=\>"
                            
                            " TODO find following items in w3c docs.
    9              0.000042 syn keyword cssGeneratedContentProp contained quotes crop
    9              0.000039 syn match cssGeneratedContentProp contained "\<counter-\(reset\|increment\)\>"
    9              0.000034 syn match cssGeneratedContentProp contained "\<move-to\>"
    9              0.000026 syn match cssGeneratedContentProp contained "\<page-policy\>"
    9              0.000035 syn match cssGeneratedContentAttr contained "\<\(no-\)\=\(open\|close\)-quote\>"
                            
                            " https://www.w3.org/TR/css-grid-1/
    9              0.000026 syn match cssGridProp contained "\<grid\>"
    9              0.000062 syn match cssGridProp contained "\<grid-template\(-\(columns\|rows\|areas\)\)\=\>"
    9              0.000049 syn match cssGridProp contained "\<\(grid-\)\=\(column\|row\)\(-\(start\|end\|gap\)\)\=\>"
    9              0.000056 syn match cssGridProp contained "\<grid-\(area\|gap\)\>"
    9              0.000026 syn match cssGridProp contained "\<gap\>"
    9              0.000044 syn match cssGridProp contained "\<grid-auto-\(flow\|rows\|columns\)\>"
                            
    9              0.000053 syn match cssHyerlinkProp contained "\<target\(-\(name\|new\|position\)\)\=\>"
                            
    9              0.000058 syn match cssListProp contained "\<list-style\(-\(type\|position\|image\)\)\=\>"
    9              0.000061 syn match cssListAttr contained "\<\(lower\|upper\)-\(roman\|alpha\|greek\|latin\)\>"
    9              0.000050 syn match cssListAttr contained "\<\(hiragana\|katakana\)\(-iroha\)\=\>"
    9              0.000044 syn match cssListAttr contained "\<\(decimal\(-leading-zero\)\=\|cjk-ideographic\)\>"
    9              0.000037 syn keyword cssListAttr contained disc circle square hebrew armenian georgian
    9              0.000017 syn keyword cssListAttr contained inside outside
                            
                            " object-fit https://www.w3.org/TR/css-images-3/#the-object-fit
    9              0.000047 syn match cssObjectProp contained "\<object-\(fit\|position\)\>"
    9              0.000028 syn keyword cssObjectAttr contained fill contain cover scale-down
                            
    9              0.000037 syn keyword cssPositioningProp contained bottom clear clip display float left
    9              0.000025 syn keyword cssPositioningProp contained position right top visibility
    9              0.000030 syn match cssPositioningProp contained "\<z-index\>"
    9              0.000044 syn keyword cssPositioningAttr contained block compact grid
    9              0.000135 syn match cssPositioningAttr contained "\<table\(-\(row-group\|\(header\|footer\)-group\|row\|column\(-group\)\=\|cell\|caption\)\)\=\>"
    9              0.000019 syn keyword cssPositioningAttr contained left right both
    9              0.000029 syn match cssPositioningAttr contained "\<list-item\>"
    9              0.000065 syn match cssPositioningAttr contained "\<inline\(-\(block\|box\|table\|grid\|flex\)\)\=\>"
    9              0.000033 syn match cssPositioningAttr contained "\<flow\(-root\)\=\>"
    9              0.000092 syn keyword cssPositioningAttr contained static relative absolute fixed subgrid sticky
                            
    9              0.000027 syn keyword cssPrintAttr contained landscape portrait crop cross always
                            
    9              0.000095 syn match cssTableProp contained "\<\(caption-side\|table-layout\|border-collapse\|border-spacing\|empty-cells\)\>"
    9              0.000030 syn keyword cssTableAttr contained fixed collapse separate show hide once always
                            
                            
    9              0.000036 syn keyword cssTextProp contained color direction hyphens
    9              0.000121 syn match cssTextProp "\<\(\(word\|letter\)-spacing\|text\(-\(decoration\|transform\|align\|index\|shadow\)\)\=\|vertical-align\|unicode-bidi\|line-height\)\>"
    9              0.000085 syn match cssTextProp contained "\<text-\(justify\|outline\|warp\|align-last\|size-adjust\|rendering\|stroke\|indent\)\>"
    9              0.000061 syn match cssTextProp contained "\<\(word\|line\)-break\|\(overflow\|word\)-wrap\>"
    9              0.000027 syn match cssTextProp contained "\<white-space\>"
    9              0.000040 syn match cssTextProp contained "\<hanging-punctuation\>"
    9              0.000035 syn match cssTextProp contained "\<tab-size\>"
    9              0.000031 syn match cssTextProp contained "\<punctuation-trim\>"
    9              0.000031 syn match cssTextAttr contained "\<line-through\>"
    9              0.000046 syn match cssTextAttr contained "\<\(text-\)\=\(top\|bottom\)\>"
    9              0.000026 syn keyword cssTextAttr contained ltr rtl embed nowrap
    9              0.000032 syn keyword cssTextAttr contained underline overline blink sub super middle
    9              0.000043 syn keyword cssTextAttr contained capitalize uppercase lowercase
    9              0.000027 syn keyword cssTextAttr contained justify baseline sub super
    9              0.000030 syn keyword cssTextAttr contained optimizeLegibility optimizeSpeed geometricPrecision
    9              0.000032 syn match cssTextAttr contained "\<pre\(-\(line\|wrap\)\)\=\>"
    9              0.000034 syn match cssTextAttr contained "\<\(allow\|force\)-end\>"
    9              0.000024 syn keyword cssTextAttr contained start end adjacent
    9              0.000043 syn match cssTextAttr contained "\<inter-\(word\|ideographic\|cluster\)\>"
    9              0.000030 syn keyword cssTextAttr contained distribute kashida first last
    9              0.000026 syn keyword cssTextAttr contained clip ellipsis unrestricted suppress
    9              0.000029 syn match cssTextAttr contained "\<break-all\>"
    9              0.000026 syn match cssTextAttr contained "\<break-word\>"
    9              0.000014 syn keyword cssTextAttr contained manual
    9              0.000042 syn match cssTextAttr contained "\<bidi-override\>"
                            
    9              0.000049 syn match cssTransformProp contained "\<transform\(-\(origin\|style\)\)\=\>"
    9              0.000035 syn match cssTransformProp contained "\<perspective\(-origin\)\=\>"
    9              0.000027 syn match cssTransformProp contained "\<backface-visibility\>"
                            
                            " CSS Transitions
                            " http://www.w3.org/TR/css3-transitions/
    9              0.000094 syn match cssTransitionProp contained "\<transition\(-\(delay\|duration\|property\|timing-function\)\)\=\>"
                            
                            " transition-time-function attributes
    9              0.000037 syn match cssTransitionAttr contained "\<linear\(-gradient\)\@!\>"
    9              0.000038 syn match cssTransitionAttr contained "\<ease\(-\(in-out\|out\|in\)\)\=\>"
    9              0.000041 syn match cssTransitionAttr contained "\<step\(-start\|-end\)\=\>"
                            "------------------------------------------------
                            " CSS Basic User Interface Module Level 3 (CSS3 UI)
                            " http://www.w3.org/TR/css3-ui/
    9              0.000029 syn match cssUIProp contained "\<box-sizing\>"
    9              0.000063 syn match cssUIAttr contained "\<\(content\|padding\|border\)\(-box\)\=\>"
                            
    9              0.000018 syn keyword cssUIProp contained cursor
    9              0.000058 syn match cssUIAttr contained "\<\(\([ns]\=[ew]\=\)\|col\|row\|nesw\|nwse\)-resize\>"
    9              0.000042 syn keyword cssUIAttr contained crosshair help move pointer alias copy
    9              0.000025 syn keyword cssUIAttr contained progress wait text cell move
    9              0.000026 syn match cssUIAttr contained "\<context-menu\>"
    9              0.000024 syn match cssUIAttr contained "\<no-drop\>"
    9              0.000026 syn match cssUIAttr contained "\<not-allowed\>"
    9              0.000028 syn match cssUIAttr contained "\<all-scroll\>"
    9              0.000036 syn match cssUIAttr contained "\<\(vertical-\)\=text\>"
    9              0.000034 syn match cssUIAttr contained "\<zoom\(-in\|-out\)\=\>"
                            
    9              0.000027 syn match cssUIProp contained "\<ime-mode\>"
    9              0.000024 syn keyword cssUIAttr contained active inactive disabled
                            
    9              0.000055 syn match cssUIProp contained "\<nav-\(down\|index\|left\|right\|up\)\=\>"
    9              0.000039 syn match cssUIProp contained "\<outline\(-\(width\|style\|color\|offset\)\)\=\>"
    9              0.000013 syn keyword cssUIAttr contained invert
                            
    9              0.000016 syn keyword cssUIProp contained icon resize
    9              0.000017 syn keyword cssUIAttr contained both horizontal vertical
                            
    9              0.000051 syn match cssUIProp contained "\<text-overflow\>"
    9              0.000015 syn keyword cssUIAttr contained clip ellipsis
                            
    9              0.000043 syn match cssUIProp contained "\<image-rendering\>"
    9              0.000015 syn keyword cssUIAttr contained pixellated
    9              0.000026 syn match cssUIAttr contained "\<crisp-edges\>"
                            
                            "------------------------------------------------
                            " Webkit/iOS specific attributes
    9              0.000036 syn match cssUIAttr contained '\<preserve-3d\>'
                            " IE specific attributes
    9              0.000026 syn match cssIEUIAttr contained '\<bicubic\>'
                            
                            " Webkit/iOS specific properties
    9              0.000067 syn match cssUIProp contained '\<\(tap-highlight-color\|user-select\|touch-callout\)\>'
                            " IE specific properties
    9              0.000039 syn match cssIEUIProp contained '\<\(interpolation-mode\|zoom\|filter\)\>'
                            
                            " Webkit/Firebox specific properties/attributes
    9              0.000016 syn keyword cssUIProp contained appearance
    9              0.000027 syn keyword cssUIAttr contained window button field icon document menu
                            
                            
    9              0.000053 syn match cssAuralProp contained "\<\(pause\|cue\)\(-\(before\|after\)\)\=\>"
    9              0.000104 syn match cssAuralProp contained "\<\(play-during\|speech-rate\|voice-family\|pitch\(-range\)\=\|speak\(-\(punctuation\|numeral\|header\)\)\=\)\>"
    9              0.000044 syn keyword cssAuralProp contained volume during azimuth elevation stress richness
    9              0.000030 syn match cssAuralAttr contained "\<\(x-\)\=\(soft\|loud\)\>"
    9              0.000015 syn keyword cssAuralAttr contained silent
    9              0.000026 syn match cssAuralAttr contained "\<spell-out\>"
    9              0.000018 syn keyword cssAuralAttr contained non mix
    9              0.000036 syn match cssAuralAttr contained "\<\(left\|right\)-side\>"
    9              0.000050 syn match cssAuralAttr contained "\<\(far\|center\)-\(left\|center\|right\)\>"
    9              0.000026 syn keyword cssAuralAttr contained leftwards rightwards behind
    9              0.000026 syn keyword cssAuralAttr contained below level above lower higher
    9              0.000061 syn match cssAuralAttr contained "\<\(x-\)\=\(slow\|fast\|low\|high\)\>"
    9              0.000024 syn keyword cssAuralAttr contained faster slower
    9              0.000036 syn keyword cssAuralAttr contained male female child code digits continuous
                            
                            " mobile text
    9              0.000040 syn match cssMobileTextProp contained "\<text-size-adjust\>"
                            
    9              0.000023 syn keyword cssMediaProp contained width height orientation scan
    9              0.000033 syn keyword cssMediaProp contained any-hover any-pointer color-gamut grid hover
    9              0.000036 syn keyword cssMediaProp contained overflow-block overflow-inline pointer update
    9              0.000044 syn match cssMediaProp contained /\<\(\(max\|min\)-\)\=\(\(device\)-\)\=aspect-ratio\>/
    9              0.000038 syn match cssMediaProp contained /\<\(\(max\|min\)-\)\=device-pixel-ratio\>/
    9              0.000041 syn match cssMediaProp contained /\<\(\(max\|min\)-\)\=device-\(height\|width\)\>/
    9              0.000112 syn match cssMediaProp contained /\<\(\(max\|min\)-\)\=\(height\|width\|resolution\|monochrome\|color\(-index\)\=\)\>/
    9              0.000028 syn keyword cssMediaAttr contained portrait landscape progressive interlace
    9              0.000030 syn keyword cssMediaAttr contained coarse fast fine hover infinite p3 paged
    9              0.000023 syn keyword cssMediaAttr contained rec2020 scroll slow srgb
    9              0.000101 syn match cssKeyFrameProp contained /\(\d\+\(\.\d\+\)\?%\|\(\<from\|to\>\)\)/ nextgroup=cssDefinition
    9              0.000074 syn match cssPageMarginProp /@\(\(top\|left\|right\|bottom\)-\(left\|center\|right\|middle\|bottom\)\)\(-corner\)\=/ contained nextgroup=cssDefinition
    9              0.000023 syn keyword cssPageProp contained content size
    9              0.000029 syn keyword cssPageProp contained orphans widows
    9              0.000016 syn keyword cssFontDescriptorProp contained src
    9              0.000027 syn match cssFontDescriptorProp contained "\<unicode-range\>"
                            " unicode-range attributes
    9              0.000038 syn match cssFontDescriptorAttr contained "U+[0-9A-Fa-f?]\+"
    9              0.000026 syn match cssFontDescriptorAttr contained "U+\x\+-\x\+"
                            
    9              0.000025 syn match cssBraces contained "[{}]"
    9              0.000047 syn match cssError contained "{@<>"
    9              0.020307 syn region cssDefinition transparent matchgroup=cssBraces start='{' end='}' contains=cssTagName,cssAttributeSelector,cssClassName,cssIdentifier,cssAtRule,cssAttrRegion,css.*Prop,cssComment,cssValue.*,cssColor,cssURL,cssImportant,cssCustomProp,cssError,cssStringQ,cssStringQQ,cssFunction,cssUnicodeEscape,cssVendor,cssDefinition,cssHacks,cssNoise fold
    9              0.000066 syn match cssBraceError "}"
    9              0.000033 syn match cssAttrComma ","
                            
                            " Pseudo class
                            " https://www.w3.org/TR/selectors-4/
    9              0.000071 syn match cssPseudoClass ":[A-Za-z0-9_-]*" contains=cssNoise,cssPseudoClassId,cssUnicodeEscape,cssVendor,cssPseudoClassFn
    9              0.000040 syn keyword cssPseudoClassId contained link visited active hover before after left right
    9              0.000034 syn keyword cssPseudoClassId contained root empty target enabled disabled checked invalid
    9              0.000049 syn match cssPseudoClassId contained "\<first-\(line\|letter\)\>"
    9              0.000058 syn match cssPseudoClassId contained "\<\(first\|last\|only\)-\(of-type\|child\)\>"
    9              0.000062 syn match cssPseudoClassId contained  "\<focus\(-within\|-visible\)\=\>"
    9              0.000107 syn region cssPseudoClassFn contained matchgroup=cssFunctionName start="\<\(not\|is\|lang\|\(nth\|nth-last\)-\(of-type\|child\)\)(" end=")" contains=cssStringQ,cssStringQQ,cssTagName,cssAttributeSelector,cssClassName,cssIdentifier
                            " ------------------------------------
                            " Vendor specific properties
    9              0.000053 syn match cssPseudoClassId contained  "\<selection\>"
    9              0.000053 syn match cssPseudoClassId contained  "\<\(input-\)\=placeholder\>"
                            
                            " Misc highlight groups
    9              0.000105 syntax match cssUnitDecorators /\(#\|-\|+\|%\|mm\|cm\|in\|pt\|pc\|em\|ex\|px\|ch\|rem\|vh\|vw\|vmin\|vmax\|dpi\|dppx\|dpcm\|Hz\|kHz\|s\|ms\|deg\|grad\|rad\)/ contained
    9              0.000029 syntax match cssNoise contained /\(:\|;\|\/\)/
                            
                            " Comment
    9              0.000053 syn region cssComment start="/\*" end="\*/" contains=@Spell fold
                            
    9              0.000042 syn match cssUnicodeEscape "\\\x\{1,6}\s\?"
    9              0.000051 syn match cssSpecialCharQQ +\\\\\|\\"+ contained
    9              0.000025 syn match cssSpecialCharQ +\\\\\|\\'+ contained
    9              0.000051 syn region cssStringQQ start=+"+ skip=+\\\\\|\\"+ end=+"+ contains=cssUnicodeEscape,cssSpecialCharQQ
    9              0.000049 syn region cssStringQ start=+'+ skip=+\\\\\|\\'+ end=+'+ contains=cssUnicodeEscape,cssSpecialCharQ
                            
                            " Vendor Prefix
    9              0.000040 syn match cssVendor contained "-\(webkit\|moz\|o\|ms\)-"
                            
                            " Various CSS Hack characters
                            " In earlier versions of IE (6 and 7), one can prefix property names
                            " with a _ or * to isolate those definitions to particular versions of IE
                            " This is purely decorative and therefore we assign to the same highlight
                            " group to cssVendor, for more information:
                            " http://www.paulirish.com/2009/browser-specific-css-hacks/
    9              0.000017 syn match cssHacks contained /\(_\|*\)/
                            
                            " Attr Enhance
                            " Some keywords are both Prop and Attr, so we have to handle them
                            " cssPseudoClassId is hidden by cssAttrRegion, so we add it here. see #69
    9              0.026052 syn region cssAttrRegion start=/:/ end=/\ze\(;\|)\|}\|{\)/ contained contains=cssPseudoClassId,css.*Attr,cssColor,cssImportant,cssValue.*,cssFunction,cssString.*,cssURL,cssComment,cssUnicodeEscape,cssVendor,cssError,cssAttrComma,cssNoise
                            
                            " Hack for transition
                            " 'transition' has Props after ':'.
    9              0.041612 syn region cssAttrRegion start=/transition\s*:/ end=/\ze\(;\|)\|}\)/ contained contains=css.*Prop,css.*Attr,cssColor,cssImportant,cssValue.*,cssFunction,cssString.*,cssURL,cssComment,cssUnicodeEscape,cssVendor,cssError,cssAttrComma,cssNoise
                            
    9              0.000119 syn match cssAtKeyword /@\(font-face\|media\|keyframes\|import\|charset\|namespace\|page\|supports\)/
                            
    9              0.000034 syn keyword cssAtRuleLogical only not and contained
                            
                            " @media
                            " Reference: http://www.w3.org/TR/css3-mediaqueries/
    9              0.000127 syn region cssAtRule start=/@media\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssMediaProp,cssValueLength,cssAtRuleLogical,cssValueInteger,cssMediaAttr,cssVendor,cssMediaType,cssComment,cssCustomProp,cssFunctionName nextgroup=cssDefinition
    9              0.000073 syn keyword cssMediaType contained screen print aural braille embossed handheld projection tty tv speech all contained
                            
                            " @page
                            " http://www.w3.org/TR/css3-page/
    9              0.000067 syn region cssAtRule start=/@page\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssPagePseudo,cssComment nextgroup=cssDefinition
    9              0.000045 syn match cssPagePseudo /:\(left\|right\|first\|blank\)/ contained skipwhite skipnl
                            " @keyframe
                            " http://www.w3.org/TR/css3-animations/#keyframes
    9              0.000078 syn region cssAtRule start=/@\(-[a-z]\+-\)\=keyframes\>/ end=/\ze{/ skipwhite skipnl matchgroup=cssAtKeyword contains=cssVendor,cssComment nextgroup=cssDefinition
                            
    9              0.000112 syn region cssAtRule start=/@import\>/    end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword,cssURL,cssMediaProp,cssValueLength,cssAtRuleLogical,cssValueInteger,cssMediaAttr,cssMediaType
    9              0.000062 syn region cssAtRule start=/@charset\>/   end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword
    9              0.000055 syn region cssAtRule start=/@namespace\>/ end=/\ze;/ contains=cssStringQ,cssStringQQ,cssUnicodeEscape,cssComment,cssAtKeyword
                            
                            " @supports
                            " https://www.w3.org/TR/css3-conditional/#at-supports
    9              0.019866 syn region cssAtRule start=/@supports\>/ end=/\ze{/ skipwhite skipnl contains=cssAtRuleLogical,cssAttrRegion,css.*Prop,cssValue.*,cssVendor,cssAtKeyword,cssComment nextgroup=cssDefinition
                            
                            
    9              0.000069 if main_syntax == "css"
                              syn sync minlines=10
    9              0.000010 endif
                            
                            " Define the default highlighting.
                            " Only when an item doesn't have highlighting yet
                            
    9              0.000022 hi def link cssComment Comment
    9              0.000011 hi def link cssVendor Comment
    9              0.000009 hi def link cssHacks Comment
    9              0.000010 hi def link cssTagName Statement
    9              0.000010 hi def link cssDeprecated Error
    9              0.000010 hi def link cssSelectorOp Special
    9              0.000008 hi def link cssSelectorOp2 Special
    9              0.000007 hi def link cssAttrComma Special
                            
    9              0.000012 hi def link cssAnimationProp cssProp
    9              0.000010 hi def link cssBackgroundProp cssProp
    9              0.000008 hi def link cssBorderProp cssProp
    9              0.000013 hi def link cssBoxProp cssProp
    9              0.000008 hi def link cssCascadeProp cssProp
    9              0.000008 hi def link cssColorProp cssProp
    9              0.000011 hi def link cssContentForPagedMediaProp cssProp
    9              0.000008 hi def link cssDimensionProp cssProp
    9              0.000008 hi def link cssFlexibleBoxProp cssProp
    9              0.000008 hi def link cssFontProp cssProp
    9              0.000008 hi def link cssGeneratedContentProp cssProp
    9              0.000013 hi def link cssGridProp cssProp
    9              0.000008 hi def link cssHyerlinkProp cssProp
    9              0.000009 hi def link cssInteractProp cssProp
    9              0.000008 hi def link cssLineboxProp cssProp
    9              0.000008 hi def link cssListProp cssProp
    9              0.000008 hi def link cssMarqueeProp cssProp
    9              0.000009 hi def link cssMultiColumnProp cssProp
    9              0.000009 hi def link cssPagedMediaProp cssProp
    9              0.000008 hi def link cssPositioningProp cssProp
    9              0.000008 hi def link cssObjectProp cssProp
    9              0.000007 hi def link cssPrintProp cssProp
    9              0.000007 hi def link cssRubyProp cssProp
    9              0.000008 hi def link cssSpeechProp cssProp
    9              0.000008 hi def link cssTableProp cssProp
    9              0.000008 hi def link cssTextProp cssProp
    9              0.000009 hi def link cssTransformProp cssProp
    9              0.000018 hi def link cssTransitionProp cssProp
    9              0.000009 hi def link cssUIProp cssProp
    9              0.000008 hi def link cssIEUIProp cssProp
    9              0.000009 hi def link cssAuralProp cssProp
    9              0.000009 hi def link cssRenderProp cssProp
    9              0.000007 hi def link cssMobileTextProp cssProp
                            
    9              0.000008 hi def link cssAnimationAttr cssAttr
    9              0.000008 hi def link cssBackgroundAttr cssAttr
    9              0.000008 hi def link cssBorderAttr cssAttr
    9              0.000008 hi def link cssBoxAttr cssAttr
    9              0.000009 hi def link cssContentForPagedMediaAttr cssAttr
    9              0.000008 hi def link cssDimensionAttr cssAttr
    9              0.000016 hi def link cssFlexibleBoxAttr cssAttr
    9              0.000007 hi def link cssFontAttr cssAttr
    9              0.000015 hi def link cssGeneratedContentAttr cssAttr
    9              0.000008 hi def link cssGridAttr cssAttr
    9              0.000009 hi def link cssHyerlinkAttr cssAttr
    9              0.000008 hi def link cssInteractAttr cssAttr
    9              0.000008 hi def link cssLineboxAttr cssAttr
    9              0.000008 hi def link cssListAttr cssAttr
    9              0.000008 hi def link cssMarginAttr cssAttr
    9              0.000008 hi def link cssMarqueeAttr cssAttr
    9              0.000008 hi def link cssMultiColumnAttr cssAttr
    9              0.000008 hi def link cssPaddingAttr cssAttr
    9              0.000008 hi def link cssPagedMediaAttr cssAttr
    9              0.000009 hi def link cssPositioningAttr cssAttr
    9              0.000007 hi def link cssObjectAttr cssAttr
    9              0.000008 hi def link cssGradientAttr cssAttr
    9              0.000007 hi def link cssPrintAttr cssAttr
    9              0.000019 hi def link cssRubyAttr cssAttr
    9              0.000007 hi def link cssSpeechAttr cssAttr
    9              0.000007 hi def link cssTableAttr cssAttr
    9              0.000136 hi def link cssTextAttr cssAttr
    9              0.000009 hi def link cssTransformAttr cssAttr
    9              0.000007 hi def link cssTransitionAttr cssAttr
    9              0.000007 hi def link cssUIAttr cssAttr
    9              0.000008 hi def link cssIEUIAttr cssAttr
    9              0.000008 hi def link cssAuralAttr cssAttr
    9              0.000007 hi def link cssRenderAttr cssAttr
    9              0.000009 hi def link cssCascadeAttr cssAttr
    9              0.000008 hi def link cssCommonAttr cssAttr
                            
    9              0.000010 hi def link cssPseudoClassId PreProc
    9              0.000016 hi def link cssPseudoClassLang Constant
    9              0.000009 hi def link cssValueLength Number
    9              0.000014 hi def link cssValueInteger Number
    9              0.000009 hi def link cssValueNumber Number
    9              0.000008 hi def link cssValueAngle Number
    9              0.000009 hi def link cssValueTime Number
    9              0.000014 hi def link cssValueFrequency Number
    9              0.000008 hi def link cssFunction Constant
    9              0.000009 hi def link cssURL String
    9              0.000019 hi def link cssFunctionName Function
    9              0.000014 hi def link cssFunctionComma Function
    9              0.000008 hi def link cssColor Constant
    9              0.000008 hi def link cssIdentifier Function
    9              0.000008 hi def link cssAtRule Include
    9              0.000008 hi def link cssAtKeyword PreProc
    9              0.000009 hi def link cssImportant Special
    9              0.000009 hi def link cssCustomProp Special
    9              0.000013 hi def link cssBraces Function
    9              0.000010 hi def link cssBraceError Error
    9              0.000008 hi def link cssError Error
    9              0.000009 hi def link cssUnicodeEscape Special
    9              0.000009 hi def link cssStringQQ String
    9              0.000008 hi def link cssStringQ String
    9              0.000009 hi def link cssAttributeSelector String
    9              0.000013 hi def link cssMediaType Special
    9              0.000010 hi def link cssMediaComma Normal
    9              0.000009 hi def link cssAtRuleLogical Statement
    9              0.000008 hi def link cssMediaProp cssProp
    9              0.000014 hi def link cssMediaAttr cssAttr
    9              0.000009 hi def link cssPagePseudo PreProc
    9              0.000010 hi def link cssPageMarginProp cssAtKeyword
    9              0.000009 hi def link cssPageProp cssProp
    9              0.000009 hi def link cssKeyFrameProp Constant
    9              0.000009 hi def link cssFontDescriptor Special
    9              0.000009 hi def link cssFontDescriptorProp cssProp
    9              0.000009 hi def link cssFontDescriptorAttr cssAttr
    9              0.000012 hi def link cssUnicodeRange Constant
    9              0.000009 hi def link cssClassName Function
    9              0.000008 hi def link cssClassNameDot Function
    9              0.000008 hi def link cssProp StorageClass
    9              0.000007 hi def link cssAttr Constant
    9              0.000009 hi def link cssUnitDecorators Number
    9              0.000007 hi def link cssNoise Noise
                            
    9              0.000034 let b:current_syntax = "css"
                            
    9              0.000018 if main_syntax == 'css'
                              unlet main_syntax
    9              0.000005 endif
                            
    9   0.000183   0.000113 let &cpo = s:cpo_save
    9              0.000015 unlet s:cpo_save
                            
                            " vim: ts=8

SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax\tex.vim
Sourced 3 times
Total time:   0.053898
 Self time:   0.022777

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:	TeX
                            " Maintainer:	This runtime file is looking for a new maintainer.
                            " Former Maintainer: Charles E. Campbell
                            " Last Change:	Apr 22, 2022
                            "   2024 Feb 19 by Vim Project (announce adoption)
                            " Version:	121
                            " Former URL:	http://www.drchip.org/astronaut/vim/index.html#SYNTAX_TEX
                            "
                            " Notes: {{{1
                            "
                            " 1. If you have a \begin{verbatim} that appears to overrun its boundaries,
                            "    use %stopzone.
                            "
                            " 2. Run-on equations ($..$ and $$..$$, particularly) can also be stopped
                            "    by suitable use of %stopzone.
                            "
                            " 3. If you have a slow computer, you may wish to modify
                            "
                            "	syn sync maxlines=200
                            "	syn sync minlines=50
                            "
                            "    to values that are more to your liking.
                            "
                            " 4. There is no match-syncing for $...$ and $$...$$; hence large
                            "    equation blocks constructed that way may exhibit syncing problems.
                            "    (there's no difference between begin/end patterns)
                            "
                            " 5. If you have the variable "g:tex_no_error" defined then none of the
                            "    lexical error-checking will be done.
                            "
                            "    ie. let g:tex_no_error=1
                            "
                            " 6. Please see  :help latex-syntax  for information on
                            "      syntax folding           :help tex-folding
                            "      spell checking           :help tex-nospell
                            "      commands and mathzones   :help tex-runon
                            "      new command highlighting :help tex-morecommands
                            "      error highlighting       :help tex-error
                            "      new math groups          :help tex-math
                            "      new styles               :help tex-style
                            "      using conceal mode       :help tex-conceal
                            
                            " Version Clears: {{{1
                            " quit when a syntax file was already loaded
    3              0.000015 if exists("b:current_syntax")
                              finish
    3              0.000002 endif
    3              0.000008 let s:keepcpo= &cpo
    3   0.000028   0.000017 set cpo&vim
    3              0.000006 scriptencoding utf-8
                            
                            " by default, enable all region-based highlighting
    3              0.000006 let s:tex_fast= "bcmMprsSvV"
    3              0.000006 if exists("g:tex_fast")
                             if type(g:tex_fast) != 1
                              " g:tex_fast exists and is not a string, so
                              " turn off all optional region-based highighting
                              let s:tex_fast= ""
                             else
                              let s:tex_fast= g:tex_fast
                             endif
    3              0.000002 endif
                            
                            " let user determine which classes of concealment will be supported
                            "   a=accents/ligatures d=delimiters m=math symbols  g=Greek  s=superscripts/subscripts
    3              0.000006 if !exists("g:tex_conceal")
    3              0.000005  let s:tex_conceal= 'abdmgsS'
                            else
                             let s:tex_conceal= g:tex_conceal
    3              0.000002 endif
    3              0.000005 if !exists("g:tex_superscripts")
    3              0.000004  let s:tex_superscripts= '[0-9a-zA-W.,:;+-<>/()=]'
                            else
                             let s:tex_superscripts= g:tex_superscripts
    3              0.000002 endif
    3              0.000005 if !exists("g:tex_subscripts")
    3              0.000005  let s:tex_subscripts= '[0-9aehijklmnoprstuvx,+-/().]'
                            else
                             let s:tex_subscripts= g:tex_subscripts
    3              0.000001 endif
                            
                            " Determine whether or not to use "*.sty" mode {{{1
                            " The user may override the normal determination by setting
                            "   g:tex_stylish to 1      (for    "*.sty" mode)
                            "    or to           0 else (normal "*.tex" mode)
                            " or on a buffer-by-buffer basis with b:tex_stylish
    3              0.000010 let s:extfname=expand("%:e")
    3              0.000005 if exists("g:tex_stylish")
                             let b:tex_stylish= g:tex_stylish
    3              0.000007 elseif !exists("b:tex_stylish")
    1              0.000003  if s:extfname == "sty" || s:extfname == "cls" || s:extfname == "clo" || s:extfname == "dtx" || s:extfname == "ltx"
                              let b:tex_stylish= 1
    1              0.000001  else
    1              0.000001   let b:tex_stylish= 0
    1              0.000001  endif
    3              0.000001 endif
                            
                            " handle folding {{{1
    3              0.000005 if !exists("g:tex_fold_enabled")
    3              0.000004  let s:tex_fold_enabled= 0
                            elseif g:tex_fold_enabled && !has("folding")
                             let s:tex_fold_enabled= 0
                             echomsg "Ignoring g:tex_fold_enabled=".g:tex_fold_enabled."; need to re-compile vim for +fold support"
                            else
                             let s:tex_fold_enabled= 1
    3              0.000002 endif
    3              0.000006 if s:tex_fold_enabled && &fdm == "manual"
                             setl fdm=syntax
    3              0.000002 endif
    3              0.000005 if s:tex_fold_enabled && has("folding")
                             com! -nargs=* TexFold <args> fold 
    3              0.000002 else
    3              0.000031  com! -nargs=* TexFold <args> 
    3              0.000002 endif
                            
                            " (La)TeX keywords: uses the characters 0-9,a-z,A-Z,192-255 only... {{{1
                            " but _ is the only one that causes problems.
                            " One may override this iskeyword setting by providing
                            " g:tex_isk
    3              0.000005 if exists("g:tex_isk")
                             if b:tex_stylish && g:tex_isk !~ '@'
                              let b:tex_isk= '@,'.g:tex_isk
                             else
                              let b:tex_isk= g:tex_isk
                             endif
    3              0.000003 elseif b:tex_stylish
                             let b:tex_isk="@,48-57,a-z,A-Z,192-255"
    3              0.000002 else
    3              0.000004  let b:tex_isk="48-57,a-z,A-Z,192-255"
    3              0.000018 endif
    3              0.000007 if (v:version == 704 && has("patch-7.4.1142")) || v:version > 704
    3              0.000015  exe "syn iskeyword ".b:tex_isk
                            else
                             exe "setl isk=".b:tex_isk
    3              0.000002 endif
    3              0.000006 if exists("g:tex_no_error") && g:tex_no_error
                             let s:tex_no_error= 1
    3              0.000002 else
    3              0.000003  let s:tex_no_error= 0
    3              0.000002 endif
    3              0.000006 if exists("g:tex_comment_nospell") && g:tex_comment_nospell
                             let s:tex_comment_nospell= 1
    3              0.000002 else
    3              0.000003  let s:tex_comment_nospell= 0
    3              0.000002 endif
    3              0.000005 if exists("g:tex_nospell") && g:tex_nospell
                             let s:tex_nospell = 1
    3              0.000001 else
    3              0.000003  let s:tex_nospell = 0
    3              0.000002 endif
    3              0.000005 if exists("g:tex_matchcheck")
                             let s:tex_matchcheck= g:tex_matchcheck
    3              0.000002 else
    3              0.000005  let s:tex_matchcheck= '[({[]'
    3              0.000002 endif
    3              0.000005 if exists("g:tex_excludematcher")
                             let s:tex_excludematcher= g:tex_excludematcher
    3              0.000002 else
    3              0.000003  let s:tex_excludematcher= 0
    3              0.000002 endif
                            
                            " Clusters: {{{1
                            " --------
    3              0.000041 syn cluster texCmdGroup			contains=texCmdBody,texComment,texDefParm,texDelimiter,texDocType,texInput,texLength,texLigature,texMathDelim,texMathOper,texNewCmd,texNewEnv,texRefZone,texSection,texBeginEnd,texBeginEndName,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,@texMathZones
    3              0.000003 if !s:tex_no_error
    3              0.000010  syn cluster texCmdGroup		add=texMathError
    3              0.000002 endif
    3              0.000015 syn cluster texEnvGroup			contains=texMatcher,texMathDelim,texSpecialChar,texStatement
    3              0.000047 syn cluster texFoldGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texInputFile,texLength,texLigature,texMatcher,texMathZoneV,texMathZoneW,texMathZoneX,texMathZoneY,texMathZoneZ,texNewCmd,texNewEnv,texOnlyMath,texOption,texParen,texRefZone,texSection,texBeginEnd,texSectionZone,texSpaceCode,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone,@texMathZones,texTitle,texAbstract,texBoldStyle,texItalStyle,texEmphStyle,texNoSpell
    3              0.000046 syn cluster texBoldGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texInputFile,texLength,texLigature,texMathZoneV,texMathZoneW,texMathZoneX,texMathZoneY,texMathZoneZ,texNewCmd,texNewEnv,texOnlyMath,texOption,texParen,texRefZone,texSection,texBeginEnd,texSectionZone,texSpaceCode,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone,@texMathZones,texTitle,texAbstract,texBoldStyle,texBoldItalStyle,texNoSpell
    3              0.000038 syn cluster texItalGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texInputFile,texLength,texLigature,texMathZoneV,texMathZoneW,texMathZoneX,texMathZoneY,texMathZoneZ,texNewCmd,texNewEnv,texOnlyMath,texOption,texParen,texRefZone,texSection,texBeginEnd,texSectionZone,texSpaceCode,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone,@texMathZones,texTitle,texAbstract,texItalStyle,texEmphStyle,texItalBoldStyle,texNoSpell
    3              0.000003 if !s:tex_excludematcher
    3              0.000013  syn cluster texBoldGroup add=texMatcher
    3              0.000010  syn cluster texItalGroup add=texMatcher
    3              0.000001 endif
    3              0.000002 if !s:tex_nospell
    3              0.000006  if !s:tex_no_error
    3              0.000035   syn cluster texMatchGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texError,texInput,texLength,texLigature,texMatcher,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texBoldStyle,texBoldItalStyle,texItalStyle,texItalBoldStyle,texZone,texInputFile,texOption,@Spell
    3              0.000034   syn cluster texMatchNMGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texError,texInput,texLength,texLigature,texMatcherNM,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texBoldStyle,texBoldItalStyle,texItalStyle,texItalBoldStyle,texZone,texInputFile,texOption,@Spell
    3              0.000049   syn cluster texStyleGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texError,texInput,texLength,texLigature,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texBoldStyle,texBoldItalStyle,texItalStyle,texItalBoldStyle,texZone,texInputFile,texOption,texStyleStatement,texStyleMatcher,@Spell
                             else
                              syn cluster texMatchGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texLength,texLigature,texMatcher,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texBoldStyle,texBoldItalStyle,texItalStyle,texItalBoldStyle,texZone,texInputFile,texOption,@Spell
                              syn cluster texMatchNMGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texLength,texLigature,texMatcherNM,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texBoldStyle,texBoldItalStyle,texItalStyle,texItalBoldStyle,texZone,texInputFile,texOption,@Spell
                              syn cluster texStyleGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texLength,texLigature,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texBoldStyle,texBoldItalStyle,texItalStyle,texItalBoldStyle,texZone,texInputFile,texOption,texStyleStatement,texStyleMatcher,@Spell
    3              0.000002  endif
                            else
                             if !s:tex_no_error
                              syn cluster texMatchGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texError,texInput,texLength,texLigature,texMatcher,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone,texInputFile,texOption
                              syn cluster texMatchNMGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texError,texInput,texLength,texLigature,texMatcherNM,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone,texInputFile,texOption
                              syn cluster texStyleGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texError,texInput,texLength,texLigature,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone,texInputFile,texOption,texStyleStatement,texStyleMatcher
                             else
                              syn cluster texMatchGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texLength,texLigature,texMatcher,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone,texInputFile,texOption
                              syn cluster texMatchNMGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texLength,texLigature,texMatcherNM,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone,texInputFile,texOption
                              syn cluster texStyleGroup		contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texLength,texLigature,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone,texInputFile,texOption,texStyleStatement,texStyleMatcher
                             endif
    3              0.000005 endif
    3              0.000027 syn cluster texPreambleMatchGroup	contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texLength,texLigature,texMatcherNM,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTitle,texTypeSize,texTypeStyle,texZone,texInputFile,texOption,texMathZoneZ
    3              0.000010 syn cluster texRefGroup			contains=texMatcher,texComment,texDelimiter
    3              0.000009 if !exists("g:tex_no_math")
    3              0.000024  syn cluster texPreambleMatchGroup	contains=texAccent,texBadMath,texComment,texDefCmd,texDelimiter,texDocType,texInput,texLength,texLigature,texMatcherNM,texNewCmd,texNewEnv,texOnlyMath,texParen,texRefZone,texSection,texSpecialChar,texStatement,texString,texTitle,texTypeSize,texTypeStyle,texZone,texInputFile,texOption,texMathZoneZ
    3              0.000011  syn cluster texMathZones		contains=texMathZoneV,texMathZoneW,texMathZoneX,texMathZoneY,texMathZoneZ
    3              0.000017  syn cluster texMatchGroup		add=@texMathZones
    3              0.000025  syn cluster texMathDelimGroup		contains=texMathDelimBad,texMathDelimKey,texMathDelimSet1,texMathDelimSet2
    3              0.000025  syn cluster texMathMatchGroup		contains=@texMathZones,texComment,texDefCmd,texDelimiter,texDocType,texInput,texLength,texLigature,texMathDelim,texMathMatcher,texMathOper,texNewCmd,texNewEnv,texRefZone,texSection,texSpecialChar,texStatement,texString,texTypeSize,texTypeStyle,texZone
    3              0.000018  syn cluster texMathZoneGroup		contains=texBadPar,texComment,texDelimiter,texLength,texMathDelim,texMathMatcher,texMathOper,texMathSymbol,texMathText,texRefZone,texSpecialChar,texStatement,texTypeSize,texTypeStyle
    3              0.000003  if !s:tex_no_error
    3              0.000009   syn cluster texMathMatchGroup		add=texMathError
    3              0.000007   syn cluster texMathZoneGroup		add=texMathError
    3              0.000002  endif
    3              0.000012  syn cluster texMathZoneGroup		add=@NoSpell
                             " following used in the \part \chapter \section \subsection \subsubsection
                             " \paragraph \subparagraph \author \title highlighting
    3              0.000011  syn cluster texDocGroup		contains=texPartZone,@texPartGroup
    3              0.000010  syn cluster texPartGroup		contains=texChapterZone,texSectionZone,texParaZone
    3              0.000009  syn cluster texChapterGroup		contains=texSectionZone,texParaZone
    3              0.000009  syn cluster texSectionGroup		contains=texSubSectionZone,texParaZone
    3              0.000010  syn cluster texSubSectionGroup		contains=texSubSubSectionZone,texParaZone
    3              0.000010  syn cluster texSubSubSectionGroup	contains=texParaZone
    3              0.000009  syn cluster texParaGroup		contains=texSubParaZone
    3              0.000027  if has("conceal") && &enc == 'utf-8'
    3              0.000014   syn cluster texMathZoneGroup		add=texGreek,texSuperscript,texSubscript,texMathSymbol
    3              0.000011   syn cluster texMathMatchGroup		add=texGreek,texSuperscript,texSubscript,texMathSymbol
    3              0.000002  endif
    3              0.000002 endif
                            
                            " Try to flag {}, [], and () mismatches: {{{1
    3              0.000012 if s:tex_fast =~# 'm'
    3              0.000003   if !s:tex_no_error
    3              0.000008    if s:tex_matchcheck =~ '{'
    3              0.000115     syn region texMatcher	matchgroup=texDelimiter start="{" skip="\\\\\|\\[{}]"	end="}"			transparent contains=@texMatchGroup,texError
    3              0.000020     syn region texMatcherNM	matchgroup=texDelimiter start="{" skip="\\\\\|\\[{}]"	end="}"			transparent contains=@texMatchNMGroup,texError
    3              0.000002    endif
    3              0.000010    if s:tex_matchcheck =~ '\['
    3              0.000018     syn region texMatcher	matchgroup=texDelimiter start="\["				end="]"			transparent contains=@texMatchGroup,texError,@NoSpell
    3              0.000015     syn region texMatcherNM	matchgroup=texDelimiter start="\["				end="]"			transparent contains=@texMatchNMGroup,texError,@NoSpell
    3              0.000002    endif
                              else
                               if s:tex_matchcheck =~ '{'
                                syn region texMatcher	matchgroup=texDelimiter start="{" skip="\\\\\|\\[{}]"	end="}"			transparent contains=@texMatchGroup
                                syn region texMatcherNM	matchgroup=texDelimiter start="{" skip="\\\\\|\\[{}]"	end="}"			transparent contains=@texMatchNMGroup
                               endif
                               if s:tex_matchcheck =~ '\['
                                syn region texMatcher	matchgroup=texDelimiter start="\["				end="]"			transparent contains=@texMatchGroup
                                syn region texMatcherNM	matchgroup=texDelimiter start="\["				end="]"			transparent contains=@texMatchNMGroup
                               endif
    3              0.000002   endif
    3              0.000007   if s:tex_matchcheck =~ '('
    3              0.000004    if !s:tex_nospell
    3              0.000015     syn region texParen		start="("	end=")"								transparent contains=@texMatchGroup,@Spell
                               else
                                syn region texParen		start="("	end=")"								transparent contains=@texMatchGroup
    3              0.000002    endif
    3              0.000002   endif
    3              0.000002 endif
    3              0.000003 if !s:tex_no_error
    3              0.000006  if s:tex_matchcheck =~ '('
    3              0.000010   syn match  texError		"[}\]]"
                             else
                              syn match  texError		"[}\])]"
    3              0.000002  endif
    3              0.000002 endif
    3              0.000006 if s:tex_fast =~# 'M'
    3              0.000007   if !exists("g:tex_no_math")
    3              0.000003    if !s:tex_no_error
    3              0.000007     syn match  texMathError	"}"	contained
    3              0.000003    endif
    3              0.000030    syn region texMathMatcher	matchgroup=texDelimiter	start="{"          skip="\%(\\\\\)*\\}"     end="}" end="%stopzone\>"	contained contains=@texMathMatchGroup
    3              0.000002   endif
    3              0.000002 endif
                            
                            " TeX/LaTeX keywords: {{{1
                            " Instead of trying to be All Knowing, I just match \..alphameric..
                            " Note that *.tex files may not have "@" in their \commands
    3              0.000007 if exists("g:tex_tex") || b:tex_stylish
                              syn match texStatement	"\\[a-zA-Z@]\+"
    3              0.000002 else
    3              0.000008   syn match texStatement	"\\\a\+"
    3              0.000003   if !s:tex_no_error
    3              0.000016    syn match texError		"\\\a*@[a-zA-Z@]*"
    3              0.000002   endif
    3              0.000002 endif
                            
                            " TeX/LaTeX delimiters: {{{1
    3              0.000006 syn match texDelimiter		"&"
    3              0.000008 syn match texDelimiter		"\\\\"
                            
                            " Tex/Latex Options: {{{1
    3              0.000012 syn match texOption		"[^\\]\zs#\d\+\|^#\d\+"
                            
                            " texAccent (tnx to Karim Belabas) avoids annoying highlighting for accents: {{{1
    3              0.000021 if b:tex_stylish
                              syn match texAccent		"\\[bcdvuH][^a-zA-Z@]"me=e-1
                              syn match texLigature		"\\\([ijolL]\|ae\|oe\|ss\|AA\|AE\|OE\)[^a-zA-Z@]"me=e-1
    3              0.000002 else
    3              0.000010   syn match texAccent		"\\[bcdvuH]\A"me=e-1
    3              0.000014   syn match texLigature		"\\\([ijolL]\|ae\|oe\|ss\|AA\|AE\|OE\)\A"me=e-1
    3              0.000002 endif
    3              0.000026 syn match texAccent		"\\[bcdvuH]$"
    3              0.000008 syn match texAccent		+\\[=^.\~"`']+
    3              0.000012 syn match texAccent		+\\['=t'.c^ud"vb~Hr]{\a}+
    3              0.000018 syn match texLigature		"\\\([ijolL]\|ae\|oe\|ss\|AA\|AE\|OE\)$"
                            
                            
                            " \begin{}/\end{} section markers: {{{1
    3              0.000018 syn match  texBeginEnd		"\\begin\>\|\\end\>" nextgroup=texBeginEndName
    3              0.000009 if s:tex_fast =~# 'm'
    3              0.000017   syn region texBeginEndName		matchgroup=texDelimiter	start="{"		end="}"	contained	nextgroup=texBeginEndModifier	contains=texComment
    3              0.000017   syn region texBeginEndModifier	matchgroup=texDelimiter	start="\["		end="]"	contained	contains=texComment,@texMathZones,@NoSpell
    3              0.000002 endif
                            
                            " \documentclass, \documentstyle, \usepackage: {{{1
    3              0.000019 syn match  texDocType		"\\documentclass\>\|\\documentstyle\>\|\\usepackage\>"	nextgroup=texBeginEndName,texDocTypeArgs
    3              0.000007 if s:tex_fast =~# 'm'
    3              0.000015   syn region texDocTypeArgs	matchgroup=texDelimiter start="\[" end="]"			contained	nextgroup=texBeginEndName	contains=texComment,@NoSpell
    3              0.000002 endif
                            
                            " Preamble syntax-based folding support: {{{1
    3              0.000007 if s:tex_fold_enabled && has("folding")
                             syn region texPreamble	transparent fold	start='\zs\\documentclass\>' end='\ze\\begin{document}'	contains=texStyle,@texPreambleMatchGroup
    3              0.000002 endif
                            
                            " TeX input: {{{1
    3              0.000022 syn match texInput		"\\input\s\+[a-zA-Z/.0-9_^]\+"hs=s+7				contains=texStatement
    3              0.000026 syn match texInputFile		"\\include\(graphics\|list\)\=\(\[.\{-}\]\)\=\s*{.\{-}}"	contains=texStatement,texInputCurlies,texInputFileOpt
    3              0.000021 syn match texInputFile		"\\\(epsfig\|input\|usepackage\)\s*\(\[.*\]\)\={.\{-}}"		contains=texStatement,texInputCurlies,texInputFileOpt
    3              0.000007 syn match texInputCurlies	"[{}]"								contained
    3              0.000007 if s:tex_fast =~# 'm'
    3              0.000012  syn region texInputFileOpt	matchgroup=texDelimiter start="\[" end="\]"			contained	contains=texComment
    3              0.000002 endif
                            
                            " Type Styles (LaTeX 2.09): {{{1
    3              0.000008 syn match texTypeStyle		"\\rm\>"
    3              0.000008 syn match texTypeStyle		"\\em\>"
    3              0.000006 syn match texTypeStyle		"\\bf\>"
    3              0.000007 syn match texTypeStyle		"\\it\>"
    3              0.000006 syn match texTypeStyle		"\\sl\>"
    3              0.000007 syn match texTypeStyle		"\\sf\>"
    3              0.000006 syn match texTypeStyle		"\\sc\>"
    3              0.000006 syn match texTypeStyle		"\\tt\>"
                            
                            " Type Styles: attributes, commands, families, etc (LaTeX2E): {{{1
    3              0.000007 if s:tex_conceal !~# 'b'
                             syn match texTypeStyle		"\\textbf\>"
                             syn match texTypeStyle		"\\textit\>"
                             syn match texTypeStyle		"\\emph\>"
    3              0.000003 endif
    3              0.000008 syn match texTypeStyle		"\\textmd\>"
    3              0.000007 syn match texTypeStyle		"\\textrm\>"
                            
    3              0.000007 syn match texTypeStyle		"\\mathbf\>"
    3              0.000008 syn match texTypeStyle		"\\mathcal\>"
    3              0.000007 syn match texTypeStyle		"\\mathit\>"
    3              0.000008 syn match texTypeStyle		"\\mathnormal\>"
    3              0.000007 syn match texTypeStyle		"\\mathrm\>"
    3              0.000007 syn match texTypeStyle		"\\mathsf\>"
    3              0.000007 syn match texTypeStyle		"\\mathtt\>"
                            
    3              0.000008 syn match texTypeStyle		"\\rmfamily\>"
    3              0.000008 syn match texTypeStyle		"\\sffamily\>"
    3              0.000010 syn match texTypeStyle		"\\ttfamily\>"
                            
    3              0.000009 syn match texTypeStyle		"\\itshape\>"
    3              0.000009 syn match texTypeStyle		"\\scshape\>"
    3              0.000007 syn match texTypeStyle		"\\slshape\>"
    3              0.000007 syn match texTypeStyle		"\\upshape\>"
                            
    3              0.000007 syn match texTypeStyle		"\\bfseries\>"
    3              0.000007 syn match texTypeStyle		"\\mdseries\>"
                            
                            " Some type sizes: {{{1
    3              0.000007 syn match texTypeSize		"\\tiny\>"
    3              0.000009 syn match texTypeSize		"\\scriptsize\>"
    3              0.000031 syn match texTypeSize		"\\footnotesize\>"
    3              0.000008 syn match texTypeSize		"\\small\>"
    3              0.000011 syn match texTypeSize		"\\normalsize\>"
    3              0.000007 syn match texTypeSize		"\\large\>"
    3              0.000007 syn match texTypeSize		"\\Large\>"
    3              0.000007 syn match texTypeSize		"\\LARGE\>"
    3              0.000008 syn match texTypeSize		"\\huge\>"
    3              0.000006 syn match texTypeSize		"\\Huge\>"
                            
                            " Spacecodes (TeX'isms): {{{1
                            " \mathcode`\^^@="2201  \delcode`\(="028300  \sfcode`\)=0 \uccode`X=`X  \lccode`x=`x
    3              0.000017 syn match texSpaceCode		"\\\(math\|cat\|del\|lc\|sf\|uc\)code`"me=e-1 nextgroup=texSpaceCodeChar
    3              0.000016 syn match texSpaceCodeChar    "`\\\=.\(\^.\)\==\(\d\|\"\x\{1,6}\|`.\)"	contained
                            
                            " Sections, subsections, etc: {{{1
    3              0.000007 if s:tex_fast =~# 'p'
    3              0.000021  if !s:tex_nospell
    3              0.000065   TexFold syn region texDocZone			matchgroup=texSection start='\\begin\s*{\s*document\s*}' end='\\end\s*{\s*document\s*}'											contains=@texFoldGroup,@texDocGroup,@Spell
    3              0.000045   TexFold syn region texPartZone		matchgroup=texSection start='\\part\>'			 end='\ze\s*\\\%(part\>\|end\s*{\s*document\s*}\)'								contains=@texFoldGroup,@texPartGroup,@Spell
    3              0.000040   TexFold syn region texChapterZone		matchgroup=texSection start='\\chapter\>'		 end='\ze\s*\\\%(chapter\>\|part\>\|end\s*{\s*document\s*}\)'							contains=@texFoldGroup,@texChapterGroup,@Spell
    3              0.000040   TexFold syn region texSectionZone		matchgroup=texSection start='\\section\>'		 end='\ze\s*\\\%(section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'					contains=@texFoldGroup,@texSectionGroup,@Spell
    3              0.000055   TexFold syn region texSubSectionZone		matchgroup=texSection start='\\subsection\>'		 end='\ze\s*\\\%(\%(sub\)\=section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'				contains=@texFoldGroup,@texSubSectionGroup,@Spell
    3              0.000049   TexFold syn region texSubSubSectionZone	matchgroup=texSection start='\\subsubsection\>'		 end='\ze\s*\\\%(\%(sub\)\{,2}section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'				contains=@texFoldGroup,@texSubSubSectionGroup,@Spell
    3              0.000042   TexFold syn region texParaZone		matchgroup=texSection start='\\paragraph\>'		 end='\ze\s*\\\%(paragraph\>\|\%(sub\)*section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'			contains=@texFoldGroup,@texParaGroup,@Spell
    3              0.000060   TexFold syn region texSubParaZone		matchgroup=texSection start='\\subparagraph\>'		 end='\ze\s*\\\%(\%(sub\)\=paragraph\>\|\%(sub\)*section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'	contains=@texFoldGroup,@Spell
    3              0.000031   TexFold syn region texTitle			matchgroup=texSection start='\\\%(author\|title\)\>\s*{' end='}'													contains=@texFoldGroup,@Spell
    3              0.000039   TexFold syn region texAbstract		matchgroup=texSection start='\\begin\s*{\s*abstract\s*}' end='\\end\s*{\s*abstract\s*}'											contains=@texFoldGroup,@Spell
                             else
                              TexFold syn region texDocZone			matchgroup=texSection start='\\begin\s*{\s*document\s*}' end='\\end\s*{\s*document\s*}'											contains=@texFoldGroup,@texDocGroup
                              TexFold syn region texPartZone		matchgroup=texSection start='\\part\>'			 end='\ze\s*\\\%(part\>\|end\s*{\s*document\s*}\)'								contains=@texFoldGroup,@texPartGroup
                              TexFold syn region texChapterZone		matchgroup=texSection start='\\chapter\>'		 end='\ze\s*\\\%(chapter\>\|part\>\|end\s*{\s*document\s*}\)'							contains=@texFoldGroup,@texChapterGroup
                              TexFold syn region texSectionZone		matchgroup=texSection start='\\section\>'		 end='\ze\s*\\\%(section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'					contains=@texFoldGroup,@texSectionGroup
                              TexFold syn region texSubSectionZone		matchgroup=texSection start='\\subsection\>'		 end='\ze\s*\\\%(\%(sub\)\=section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'				contains=@texFoldGroup,@texSubSectionGroup
                              TexFold syn region texSubSubSectionZone	matchgroup=texSection start='\\subsubsection\>'		 end='\ze\s*\\\%(\%(sub\)\{,2}section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'				contains=@texFoldGroup,@texSubSubSectionGroup
                              TexFold syn region texParaZone		matchgroup=texSection start='\\paragraph\>'		 end='\ze\s*\\\%(paragraph\>\|\%(sub\)*section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'			contains=@texFoldGroup,@texParaGroup
                              TexFold syn region texSubParaZone		matchgroup=texSection start='\\subparagraph\>'		 end='\ze\s*\\\%(\%(sub\)\=paragraph\>\|\%(sub\)*section\>\|chapter\>\|part\>\|end\s*{\s*document\s*}\)'	contains=@texFoldGroup
                              TexFold syn region texTitle			matchgroup=texSection start='\\\%(author\|title\)\>\s*{' end='}'													contains=@texFoldGroup
                              TexFold syn region texAbstract		matchgroup=texSection start='\\begin\s*{\s*abstract\s*}' end='\\end\s*{\s*abstract\s*}'											contains=@texFoldGroup
    3              0.000002   endif
    3              0.000002 endif
                            
                            " particular support for bold and italic {{{1
    3              0.000007 if s:tex_fast =~# 'b'
    3              0.000006   if s:tex_conceal =~# 'b'
    3              0.000017    if !exists("g:tex_nospell") || !g:tex_nospell
    3              0.000036     syn region texBoldStyle	matchgroup=texTypeStyle start="\\textbf\s*{" matchgroup=texTypeStyle  end="}" concealends contains=@texBoldGroup,@Spell
    3              0.000019     syn region texBoldItalStyle	matchgroup=texTypeStyle start="\\textit\s*{" matchgroup=texTypeStyle  end="}" concealends contains=@texItalGroup,@Spell
    3              0.000025     syn region texItalStyle	matchgroup=texTypeStyle start="\\textit\s*{" matchgroup=texTypeStyle  end="}" concealends contains=@texItalGroup,@Spell
    3              0.000020     syn region texItalBoldStyle	matchgroup=texTypeStyle start="\\textbf\s*{" matchgroup=texTypeStyle  end="}" concealends contains=@texBoldGroup,@Spell
    3              0.000020     syn region texEmphStyle	matchgroup=texTypeStyle start="\\emph\s*{"   matchgroup=texTypeStyle  end="}" concealends contains=@texItalGroup,@Spell
    3              0.000022     syn region texEmphStyle	matchgroup=texTypeStyle start="\\texts[cfl]\s*{" matchgroup=texTypeStyle  end="}" concealends contains=@texBoldGroup,@Spell
    3              0.000019     syn region texEmphStyle	matchgroup=texTypeStyle start="\\textup\s*{" matchgroup=texTypeStyle  end="}" concealends contains=@texBoldGroup,@Spell
    3              0.000018     syn region texEmphStyle	matchgroup=texTypeStyle start="\\texttt\s*{" matchgroup=texTypeStyle  end="}" concealends contains=@texBoldGroup,@Spell
                               else                                                                                              
                                syn region texBoldStyle	matchgroup=texTypeStyle start="\\textbf\s*{" matchgroup=texTypeStyle  end="}" concealends contains=@texBoldGroup
                                syn region texBoldItalStyle	matchgroup=texTypeStyle start="\\textit\s*{" matchgroup=texTypeStyle  end="}" concealends contains=@texItalGroup
                                syn region texItalStyle	matchgroup=texTypeStyle start="\\textit\s*{" matchgroup=texTypeStyle  end="}" concealends contains=@texItalGroup
                                syn region texItalBoldStyle	matchgroup=texTypeStyle start="\\textbf\s*{" matchgroup=texTypeStyle  end="}" concealends contains=@texBoldGroup
                                syn region texEmphStyle	matchgroup=texTypeStyle start="\\emph\s*{"   matchgroup=texTypeStyle  end="}" concealends contains=@texItalGroup
                                syn region texEmphStyle	matchgroup=texTypeStyle start="\\texts[cfl]\s*{" matchgroup=texTypeStyle  end="}" concealends contains=@texEmphGroup
                                syn region texEmphStyle	matchgroup=texTypeStyle start="\\textup\s*{" matchgroup=texTypeStyle  end="}" concealends contains=@texEmphGroup
                                syn region texEmphStyle	matchgroup=texTypeStyle start="\\texttt\s*{" matchgroup=texTypeStyle  end="}" concealends contains=@texEmphGroup
    3              0.000002    endif
    3              0.000002   endif
    3              0.000002 endif
                            
                            " Bad Math (mismatched): {{{1
    3              0.000010 if !exists("g:tex_no_math") && !s:tex_no_error
    3              0.000025  syn match texBadMath		"\\end\s*{\s*\(array\|[bBpvV]matrix\|split\|smallmatrix\)\s*}"
    3              0.000019  syn match texBadMath		"\\end\s*{\s*\(displaymath\|equation\|eqnarray\|math\)\*\=\s*}"
    3              0.000010  syn match texBadMath		"\\[\])]"
    3              0.000011  syn match texBadPar	contained  "\%(\\par\>\|^\s*\n.\)"
    3              0.000002 endif
                            
                            " Math Zones: {{{1
    3              0.000007 if !exists("g:tex_no_math")
                             " TexNewMathZone: function creates a mathzone with the given suffix and mathzone name. {{{2
                             "                 Starred forms are created if starform is true.  Starred
                             "                 forms have syntax group and synchronization groups with a
                             "                 "S" appended.  Handles: cluster, syntax, sync, and highlighting.
    3              0.000011  fun! TexNewMathZone(sfx,mathzone,starform)
                               let grpname  = "texMathZone".a:sfx
                               let syncname = "texSyncMathZone".a:sfx
                               if s:tex_fold_enabled
                                let foldcmd= " fold"
                               else
                                let foldcmd= ""
                               endif
                               exe "syn cluster texMathZones add=".grpname
                               if s:tex_fast =~# 'M'
                                exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
                                exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
                                exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
                               endif
                               exe 'hi def link '.grpname.' texMath'
                               if a:starform
                                let grpname  = "texMathZone".a:sfx.'S'
                                let syncname = "texSyncMathZone".a:sfx.'S'
                                exe "syn cluster texMathZones add=".grpname
                                if s:tex_fast =~# 'M'
                                 exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\*\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\*\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
                                 exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
                                 exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
                                endif
                                exe 'hi def link '.grpname.' texMath'
                               endif
                             endfun
                            
                             " Standard Math Zones: {{{2
    3   0.000353   0.000029  call TexNewMathZone("A","displaymath",1)
    3   0.000263   0.000019  call TexNewMathZone("B","eqnarray",1)
    3   0.000269   0.000021  call TexNewMathZone("C","equation",1)
    3   0.000285   0.000016  call TexNewMathZone("D","math",1)
                            
                             " Inline Math Zones: {{{2
    3              0.000005  if s:tex_fast =~# 'M'
    3              0.000021   if has("conceal") && &enc == 'utf-8' && s:tex_conceal =~# 'd'
    3              0.000025    syn region texMathZoneV	matchgroup=texDelimiter start="\\("			matchgroup=texDelimiter	end="\\)\|%stopzone\>"			keepend concealends contains=@texMathZoneGroup
    3              0.000034    syn region texMathZoneW	matchgroup=texDelimiter start="\\\["			matchgroup=texDelimiter	end="\\]\|%stopzone\>"			keepend concealends contains=@texMathZoneGroup
    3              0.000054    syn region texMathZoneX	matchgroup=texDelimiter start="\$" skip="\\\\\|\\\$"	matchgroup=texDelimiter	end="\$"	end="%stopzone\>"		concealends contains=@texMathZoneGroup
    3              0.000025    syn region texMathZoneY	matchgroup=texDelimiter start="\$\$" 			matchgroup=texDelimiter	end="\$\$"	end="%stopzone\>"	keepend concealends contains=@texMathZoneGroup
                              else
                               syn region texMathZoneV	matchgroup=texDelimiter start="\\("			matchgroup=texDelimiter	end="\\)\|%stopzone\>"			keepend contains=@texMathZoneGroup
                               syn region texMathZoneW	matchgroup=texDelimiter start="\\\["			matchgroup=texDelimiter	end="\\]\|%stopzone\>"			keepend contains=@texMathZoneGroup
                               syn region texMathZoneX	matchgroup=texDelimiter start="\$" skip="\%(\\\\\)*\\\$"	matchgroup=texDelimiter	end="\$"	end="%stopzone\>"		contains=@texMathZoneGroup
                               syn region texMathZoneY	matchgroup=texDelimiter start="\$\$" 			matchgroup=texDelimiter	end="\$\$"	end="%stopzone\>"	keepend	contains=@texMathZoneGroup
    3              0.000003   endif
    3              0.000023   syn region texMathZoneZ	matchgroup=texStatement start="\\ensuremath\s*{"	matchgroup=texStatement	end="}"		end="%stopzone\>"	contains=@texMathZoneGroup
    3              0.000002  endif
                            
    3              0.000015  syn match texMathOper		"[_^=]" contained
                            
                             " Text Inside Math Zones: {{{2
    3              0.000007  if s:tex_fast =~# 'M'
    3              0.000014   if !exists("g:tex_nospell") || !g:tex_nospell
    3              0.000024    syn region texMathText matchgroup=texStatement start='\\\(\(inter\)\=text\|mbox\)\s*{'	end='}'	contains=@texFoldGroup,@Spell
                              else
                               syn region texMathText matchgroup=texStatement start='\\\(\(inter\)\=text\|mbox\)\s*{'	end='}'	contains=@texFoldGroup
    3              0.000002   endif
    3              0.000001  endif
                            
                             " \left..something.. and \right..something.. support: {{{2
    3              0.000006  syn match   texMathDelimBad	contained		"\S"
    3              0.000023  if has("conceal") && &enc == 'utf-8' && s:tex_conceal =~# 'm'
    3              0.000008   syn match   texMathDelim	contained		"\\left\["
    3              0.000019   syn match   texMathDelim	contained		"\\left\\{"	skipwhite nextgroup=texMathDelimSet1,texMathDelimSet2,texMathDelimBad contains=texMathSymbol cchar={
    3              0.000017   syn match   texMathDelim	contained		"\\right\\}"	skipwhite nextgroup=texMathDelimSet1,texMathDelimSet2,texMathDelimBad contains=texMathSymbol cchar=}
    3              0.000164   let s:texMathDelimList=[
                                 \ ['<'            , '<'] ,
                                 \ ['>'            , '>'] ,
                                 \ ['('            , '('] ,
                                 \ [')'            , ')'] ,
                                 \ ['\['           , '['] ,
                                 \ [']'            , ']'] ,
                                 \ ['\\{'          , '{'] ,
                                 \ ['\\}'          , '}'] ,
                                 \ ['|'            , '|'] ,
                                 \ ['\\|'          , '‖'] ,
                                 \ ['\\backslash'  , '\'] ,
                                 \ ['\\downarrow'  , '↓'] ,
                                 \ ['\\Downarrow'  , '⇓'] ,
                                 \ ['\\lbrace'     , '['] ,
                                 \ ['\\lceil'      , '⌈'] ,
                                 \ ['\\lfloor'     , '⌊'] ,
                                 \ ['\\lgroup'     , '⌊'] ,
                                 \ ['\\lmoustache' , '⎛'] ,
                                 \ ['\\rbrace'     , ']'] ,
                                 \ ['\\rceil'      , '⌉'] ,
                                 \ ['\\rfloor'     , '⌋'] ,
                                 \ ['\\rgroup'     , '⌋'] ,
                                 \ ['\\rmoustache' , '⎞'] ,
                                 \ ['\\uparrow'    , '↑'] ,
                                 \ ['\\Uparrow'    , '↑'] ,
                                 \ ['\\updownarrow', '↕'] ,
                                 \ ['\\Updownarrow', '⇕']]
    3              0.000045   if &ambw == "double" || exists("g:tex_usedblwidth")
                                let s:texMathDelimList= s:texMathDelimList + [
                                 \ ['\\langle'     , '〈'] ,
                                 \ ['\\rangle'     , '〉']]
    3              0.000002   else
    3              0.000023     let s:texMathDelimList= s:texMathDelimList + [
                                 \ ['\\langle'     , '<'] ,
                                 \ ['\\rangle'     , '>']]
    3              0.000002   endif
    3              0.000012   syn match texMathDelim	'\\[bB]igg\=[lr]' contained nextgroup=texMathDelimBad
   90              0.000052   for texmath in s:texMathDelimList
   87              0.000472    exe "syn match texMathDelim	'\\\\[bB]igg\\=[lr]\\=".texmath[0]."'	contained conceal cchar=".texmath[1]
   90              0.000046   endfor
                            
                             else
                              syn match   texMathDelim	contained		"\\\(left\|right\)\>"	skipwhite nextgroup=texMathDelimSet1,texMathDelimSet2,texMathDelimBad
                              syn match   texMathDelim	contained		"\\[bB]igg\=[lr]\=\>"	skipwhite nextgroup=texMathDelimSet1,texMathDelimSet2,texMathDelimBad
                              syn match   texMathDelimSet2	contained	"\\"		nextgroup=texMathDelimKey,texMathDelimBad
                              syn match   texMathDelimSet1	contained	"[<>()[\]|/.]\|\\[{}|]"
                              syn keyword texMathDelimKey	contained	backslash       lceil           lVert           rgroup          uparrow
                              syn keyword texMathDelimKey	contained	downarrow       lfloor          rangle          rmoustache      Uparrow
                              syn keyword texMathDelimKey	contained	Downarrow       lgroup          rbrace          rvert           updownarrow
                              syn keyword texMathDelimKey	contained	langle          lmoustache      rceil           rVert           Updownarrow
                              syn keyword texMathDelimKey	contained	lbrace          lvert           rfloor
    3              0.000003  endif
    3              0.000016  syn match   texMathDelim	contained		"\\\(left\|right\)arrow\>\|\<\([aA]rrow\|brace\)\=vert\>"
    3              0.000007  syn match   texMathDelim	contained		"\\lefteqn\>"
    3              0.000002 endif
                            
                            " Special TeX characters  ( \$ \& \% \# \{ \} \_ \S \P ) : {{{1
    3              0.000012 syn match texSpecialChar	"\\[$&%#{}_]"
    3              0.000004 if b:tex_stylish
                              syn match texSpecialChar	"\\[SP@][^a-zA-Z@]"me=e-1
    3              0.000002 else
    3              0.000010   syn match texSpecialChar	"\\[SP@]\A"me=e-1
    3              0.000002 endif
    3              0.000009 syn match texSpecialChar	"\\\\"
    3              0.000007 if !exists("g:tex_no_math")
    3              0.000010  syn match texOnlyMath		"[_^]"
    3              0.000002 endif
    3              0.000017 syn match texSpecialChar	"\^\^[0-9a-f]\{2}\|\^\^\S"
    3              0.000012 if s:tex_conceal !~# 'S'
                             syn match texSpecialChar	'\\glq\>'	contained conceal cchar=‚
                             syn match texSpecialChar	'\\grq\>'	contained conceal cchar=‘
                             syn match texSpecialChar	'\\glqq\>'	contained conceal cchar=„
                             syn match texSpecialChar	'\\grqq\>'	contained conceal cchar=“
                             syn match texSpecialChar	'\\hyp\>'	contained conceal cchar=-
    3              0.000002 endif
                            
                            " Comments: {{{1
                            "    Normal TeX LaTeX     :   %....
                            "    Documented TeX Format:  ^^A...	-and-	leading %s (only)
    3              0.000004 if !s:tex_comment_nospell
    3              0.000013  syn cluster texCommentGroup	contains=texTodo,@Spell
                            else
                             syn cluster texCommentGroup	contains=texTodo,@NoSpell
    3              0.000002 endif
    3              0.000005 syn case ignore
    3              0.000010 syn keyword texTodo		contained		combak	fixme	todo	xxx
    3              0.000003 syn case match
    3              0.000004 if s:extfname == "dtx"
                             syn match texComment		"\^\^A.*$"	contains=@texCommentGroup
                             syn match texComment		"^%\+"		contains=@texCommentGroup
    3              0.000006 else
    3              0.000004  if s:tex_fold_enabled
                              " allows syntax-folding of 2 or more contiguous comment lines
                              " single-line comments are not folded
                              syn match  texComment	"%.*$"				contains=@texCommentGroup
                              if s:tex_fast =~# 'c'
                               TexFold syn region texComment						start="^\zs\s*%.*\_s*%"	skip="^\s*%"	end='^\ze\s*[^%]'	contains=@texCommentGroup
                               TexFold syn region texNoSpell	contained	matchgroup=texComment	start="%\s*nospell\s*{"	end="%\s*nospell\s*}"			contains=@texFoldGroup,@NoSpell
                              endif
    3              0.000002  else
    3              0.000013   syn match texComment		"%.*$"			contains=@texCommentGroup
    3              0.000008   if s:tex_fast =~# 'c'
    3              0.000041    syn region texNoSpell		contained	matchgroup=texComment start="%\s*nospell\s*{"	end="%\s*nospell\s*}"	contains=@texFoldGroup,@NoSpell
    3              0.000002   endif
    3              0.000002  endif
    3              0.000002 endif
                            
                            " %begin-include ... %end-include acts like a texDocZone for \include'd files.  Permits spell checking, for example, in such files.
    3              0.000005 if !s:tex_nospell
    3              0.000046  TexFold syn region texDocZone			matchgroup=texSection start='^\s*%begin-include\>'	 end='^\s*%end-include\>'											contains=@texFoldGroup,@texDocGroup,@Spell
                            else
                             TexFold syn region texDocZone			matchgroup=texSection start='^\s*%begin-include\>'	 end='^\s*%end-include\>'											contains=@texFoldGroup,@texDocGroup
    3              0.000002 endif
                            
                            " Separate lines used for verb` and verb# so that the end conditions {{{1
                            " will appropriately terminate.
                            " If g:tex_verbspell exists, then verbatim texZones will permit spellchecking there.
    3              0.000008 if s:tex_fast =~# 'v'
    3              0.000010   if exists("g:tex_verbspell") && g:tex_verbspell
                               syn region texZone		start="\\begin{[vV]erbatim}"		end="\\end{[vV]erbatim}\|%stopzone\>"	contains=@Spell
                               " listings package:
                               if b:tex_stylish
                                syn region texZone		start="\\verb\*\=\z([^\ta-zA-Z@]\)"	end="\z1\|%stopzone\>"			contains=@Spell
                               else
                                syn region texZone		start="\\verb\*\=\z([^\ta-zA-Z]\)"	end="\z1\|%stopzone\>"			contains=@Spell
                               endif
    3              0.000003   else
    3              0.000025    syn region texZone		start="\\begin{[vV]erbatim}"		end="\\end{[vV]erbatim}\|%stopzone\>"
    3              0.000005    if b:tex_stylish
                                 syn region texZone		start="\\verb\*\=\z([^\ta-zA-Z@]\)"	end="\z1\|%stopzone\>"
    3              0.000003    else
    3              0.000025      syn region texZone		start="\\verb\*\=\z([^\ta-zA-Z]\)"	end="\z1\|%stopzone\>"
    3              0.000002    endif
    3              0.000002   endif
    3              0.000002 endif
                            
                            " Tex Reference Zones: {{{1
    3              0.000008 if s:tex_fast =~# 'r'
    3              0.000024   syn region texZone		matchgroup=texStatement start="@samp{"			end="}\|%stopzone\>"	contains=@texRefGroup
    3              0.000022   syn region texRefZone		matchgroup=texStatement start="\\nocite{"		end="}\|%stopzone\>"	contains=@texRefGroup
    3              0.000027   syn region texRefZone		matchgroup=texStatement start="\\bibliography{"		end="}\|%stopzone\>"	contains=@texRefGroup
    3              0.000033   syn region texRefZone		matchgroup=texStatement start="\\label{"		end="}\|%stopzone\>"	contains=@texRefGroup
    3              0.000024   syn region texRefZone		matchgroup=texStatement start="\\\(page\|eq\)ref{"	end="}\|%stopzone\>"	contains=@texRefGroup
    3              0.000020   syn region texRefZone		matchgroup=texStatement start="\\v\=ref{"		end="}\|%stopzone\>"	contains=@texRefGroup
    3              0.000019   syn region texRefOption	contained	matchgroup=texDelimiter start='\[' end=']'		contains=@texRefGroup,texRefZone	nextgroup=texRefOption,texCite
    3              0.000019   syn region texCite		contained	matchgroup=texDelimiter start='{' end='}'		contains=@texRefGroup,texRefZone,texCite
    3              0.000003 endif
    3              0.000026 syn match  texRefZone		'\\cite\%([tp]\*\=\)\=\>' nextgroup=texRefOption,texCite
                            
                            " Handle (re)newcommand, (re)newenvironment : {{{1
    3              0.000016 syn match  texNewCmd				"\\\%(re\)\=newcommand\>"		nextgroup=texCmdName skipwhite skipnl
    3              0.000009 if s:tex_fast =~# 'V'
    3              0.000017   syn region texCmdName contained matchgroup=texDelimiter start="{"rs=s+1  end="}"		nextgroup=texCmdArgs,texCmdBody skipwhite skipnl
    3              0.000013   syn region texCmdArgs contained matchgroup=texDelimiter start="\["rs=s+1 end="]"		nextgroup=texCmdBody skipwhite skipnl
    3              0.000019   syn region texCmdBody contained matchgroup=texDelimiter start="{"rs=s+1 skip="\\\\\|\\[{}]"	matchgroup=texDelimiter end="}" contains=@texCmdGroup
    3              0.000003 endif
    3              0.000024 syn match  texNewEnv				"\\\%(re\)\=newenvironment\>"		nextgroup=texEnvName skipwhite skipnl
    3              0.000007 if s:tex_fast =~# 'V'
    3              0.000015   syn region texEnvName contained matchgroup=texDelimiter start="{"rs=s+1  end="}"		nextgroup=texEnvBgn skipwhite skipnl
    3              0.000119   syn region texEnvBgn  contained matchgroup=texDelimiter start="{"rs=s+1  end="}"		nextgroup=texEnvEnd skipwhite skipnl contains=@texEnvGroup
    3              0.000014   syn region texEnvEnd  contained matchgroup=texDelimiter start="{"rs=s+1  end="}"		skipwhite skipnl contains=@texEnvGroup
    3              0.000002 endif
                            
                            " Definitions/Commands: {{{1
    3              0.000013 syn match texDefCmd				"\\def\>"				nextgroup=texDefName skipwhite skipnl
    3              0.000005 if b:tex_stylish
                              syn match texDefName contained		"\\[a-zA-Z@]\+"				nextgroup=texDefParms,texCmdBody skipwhite skipnl
                              syn match texDefName contained		"\\[^a-zA-Z@]"				nextgroup=texDefParms,texCmdBody skipwhite skipnl
    3              0.000003 else
    3              0.000011   syn match texDefName contained		"\\\a\+"				nextgroup=texDefParms,texCmdBody skipwhite skipnl
    3              0.000016   syn match texDefName contained		"\\\A"					nextgroup=texDefParms,texCmdBody skipwhite skipnl
    3              0.000003 endif
    3              0.000011 syn match texDefParms  contained		"#[^{]*"	contains=texDefParm	nextgroup=texCmdBody skipwhite skipnl
    3              0.000006 syn match  texDefParm  contained		"#\d\+"
                            
                            " TeX Lengths: {{{1
    3              0.000025 syn match  texLength		"\<\d\+\([.,]\d\+\)\=\s*\(true\)\=\s*\(bp\|cc\|cm\|dd\|em\|ex\|in\|mm\|pc\|pt\|sp\)\>"
                            
                            " TeX String Delimiters: {{{1
    3              0.000013 syn match texString		"\(``\|''\|,,\)"
                            
                            " makeatletter -- makeatother sections
    3              0.000005 if !s:tex_no_error
    3              0.000030  if s:tex_fast =~# 'S'
    3              0.000021   syn region texStyle			matchgroup=texStatement start='\\makeatletter' end='\\makeatother'	contains=@texStyleGroup contained
    3              0.000003  endif
    3              0.000009  syn match  texStyleStatement		"\\[a-zA-Z@]\+"	contained
    3              0.000008  if s:tex_fast =~# 'S'
    3              0.000025   syn region texStyleMatcher		matchgroup=texDelimiter start="{" skip="\\\\\|\\[{}]"	end="}"		contains=@texStyleGroup,texError	contained
    3              0.000015   syn region texStyleMatcher		matchgroup=texDelimiter start="\["				end="]"		contains=@texStyleGroup,texError	contained
    3              0.000002  endif
    3              0.000002 endif
                            
                            " Conceal mode support (supports set cole=2) {{{1
    3              0.000020 if has("conceal") && &enc == 'utf-8'
                            
                             " Math Symbols {{{2
                             " (many of these symbols were contributed by Björn Winckler)
    3              0.000007  if s:tex_conceal =~# 'm'
    3              0.000648   let s:texMathList=[
                                \ ['|'		, '‖'],
                                \ ['aleph'		, 'ℵ'],
                                \ ['amalg'		, '∐'],
                                \ ['angle'		, '∠'],
                                \ ['approx'		, '≈'],
                                \ ['ast'		, '∗'],
                                \ ['asymp'		, '≍'],
                                \ ['backslash'	, '∖'],
                                \ ['bigcap'		, '∩'],
                                \ ['bigcirc'	, '○'],
                                \ ['bigcup'		, '∪'],
                                \ ['bigodot'	, '⊙'],
                                \ ['bigoplus'	, '⊕'],
                                \ ['bigotimes'	, '⊗'],
                                \ ['bigsqcup'	, '⊔'],
                                \ ['bigtriangledown', '∇'],
                                \ ['bigtriangleup'	, '∆'],
                                \ ['bigvee'		, '⋁'],
                                \ ['bigwedge'	, '⋀'],
                                \ ['bot'		, '⊥'],
                                \ ['bowtie'	        , '⋈'],
                                \ ['bullet'	        , '•'],
                                \ ['cap'		, '∩'],
                                \ ['cdot'		, '·'],
                                \ ['cdots'		, '⋯'],
                                \ ['circ'		, '∘'],
                                \ ['clubsuit'	, '♣'],
                                \ ['cong'		, '≅'],
                                \ ['coprod'		, '∐'],
                                \ ['copyright'	, '©'],
                                \ ['cup'		, '∪'],
                                \ ['dagger'	        , '†'],
                                \ ['dashv'		, '⊣'],
                                \ ['ddagger'	, '‡'],
                                \ ['ddots'	        , '⋱'],
                                \ ['diamond'	, '⋄'],
                                \ ['diamondsuit'	, '♢'],
                                \ ['div'		, '÷'],
                                \ ['doteq'		, '≐'],
                                \ ['dots'		, '…'],
                                \ ['downarrow'	, '↓'],
                                \ ['Downarrow'	, '⇓'],
                                \ ['ell'		, 'ℓ'],
                                \ ['emptyset'	, '∅'],
                                \ ['equiv'		, '≡'],
                                \ ['exists'		, '∃'],
                                \ ['flat'		, '♭'],
                                \ ['forall'		, '∀'],
                                \ ['frown'		, '⁔'],
                                \ ['ge'		, '≥'],
                                \ ['geq'		, '≥'],
                                \ ['gets'		, '←'],
                                \ ['gg'		, '⟫'],
                                \ ['hbar'		, 'ℏ'],
                                \ ['heartsuit'	, '♡'],
                                \ ['hookleftarrow'	, '↩'],
                                \ ['hookrightarrow'	, '↪'],
                                \ ['iff'            , '⇔'],
                                \ ['Im'		, 'ℑ'],
                                \ ['imath'		, 'ɩ'],
                                \ ['in'		, '∈'],
                                \ ['infty'		, '∞'],
                                \ ['int'		, '∫'],
                                \ ['jmath'		, '𝚥'],
                                \ ['land'		, '∧'],
                                \ ['lceil'		, '⌈'],
                                \ ['ldots'		, '…'],
                                \ ['le'		, '≤'],
                                \ ['left|'		, '|'],
                                \ ['left\\|'	, '‖'],
                                \ ['left('		, '('],
                                \ ['left\['		, '['],
                                \ ['left\\{'	, '{'],
                                \ ['leftarrow'	, '←'],
                                \ ['Leftarrow'	, '⇐'],
                                \ ['leftharpoondown', '↽'],
                                \ ['leftharpoonup'	, '↼'],
                                \ ['leftrightarrow'	, '↔'],
                                \ ['Leftrightarrow'	, '⇔'],
                                \ ['leq'		, '≤'],
                                \ ['leq'		, '≤'],
                                \ ['lfloor'		, '⌊'],
                                \ ['ll'		, '≪'],
                                \ ['lmoustache'     , '╭'],
                                \ ['lor'		, '∨'],
                                \ ['mapsto'		, '↦'],
                                \ ['mid'		, '∣'],
                                \ ['models'		, '╞'],
                                \ ['mp'		, '∓'],
                                \ ['nabla'		, '∇'],
                                \ ['natural'	, '♮'],
                                \ ['ne'		, '≠'],
                                \ ['nearrow'	, '↗'],
                                \ ['neg'		, '¬'],
                                \ ['neq'		, '≠'],
                                \ ['ni'		, '∋'],
                                \ ['notin'		, '∉'],
                                \ ['nwarrow'	, '↖'],
                                \ ['odot'		, '⊙'],
                                \ ['oint'		, '∮'],
                                \ ['ominus'		, '⊖'],
                                \ ['oplus'		, '⊕'],
                                \ ['oslash'		, '⊘'],
                                \ ['otimes'		, '⊗'],
                                \ ['owns'		, '∋'],
                                \ ['P'	        , '¶'],
                                \ ['parallel'	, '║'],
                                \ ['partial'	, '∂'],
                                \ ['perp'		, '⊥'],
                                \ ['pm'		, '±'],
                                \ ['prec'		, '≺'],
                                \ ['preceq'		, '⪯'],
                                \ ['prime'		, '′'],
                                \ ['prod'		, '∏'],
                                \ ['propto'		, '∝'],
                                \ ['rceil'		, '⌉'],
                                \ ['Re'		, 'ℜ'],
                                \ ['quad'		, ' '],
                                \ ['qquad'		, ' '],
                                \ ['rfloor'		, '⌋'],
                                \ ['right|'		, '|'],
                                \ ['right\\|'	, '‖'],
                                \ ['right)'		, ')'],
                                \ ['right]'		, ']'],
                                \ ['right\\}'	, '}'],
                                \ ['rightarrow'	, '→'],
                                \ ['Rightarrow'	, '⇒'],
                                \ ['rightleftharpoons', '⇌'],
                                \ ['rmoustache'     , '╮'],
                                \ ['S'	        , '§'],
                                \ ['searrow'	, '↘'],
                                \ ['setminus'	, '∖'],
                                \ ['sharp'		, '♯'],
                                \ ['sim'		, '∼'],
                                \ ['simeq'		, '⋍'],
                                \ ['smile'		, '‿'],
                                \ ['spadesuit'	, '♠'],
                                \ ['sqcap'		, '⊓'],
                                \ ['sqcup'		, '⊔'],
                                \ ['sqsubset'	, '⊏'],
                                \ ['sqsubseteq'	, '⊑'],
                                \ ['sqsupset'	, '⊐'],
                                \ ['sqsupseteq'	, '⊒'],
                                \ ['star'		, '✫'],
                                \ ['subset'		, '⊂'],
                                \ ['subseteq'	, '⊆'],
                                \ ['succ'		, '≻'],
                                \ ['succeq'		, '⪰'],
                                \ ['sum'		, '∑'],
                                \ ['supset'		, '⊃'],
                                \ ['supseteq'	, '⊇'],
                                \ ['surd'		, '√'],
                                \ ['swarrow'	, '↙'],
                                \ ['times'		, '×'],
                                \ ['to'		, '→'],
                                \ ['top'		, '⊤'],
                                \ ['triangle'	, '∆'],
                                \ ['triangleleft'	, '⊲'],
                                \ ['triangleright'	, '⊳'],
                                \ ['uparrow'	, '↑'],
                                \ ['Uparrow'	, '⇑'],
                                \ ['updownarrow'	, '↕'],
                                \ ['Updownarrow'	, '⇕'],
                                \ ['vdash'		, '⊢'],
                                \ ['vdots'		, '⋮'],
                                \ ['vee'		, '∨'],
                                \ ['wedge'		, '∧'],
                                \ ['wp'		, '℘'],
                                \ ['wr'		, '≀']]
    3              0.000015   if &ambw == "double" || exists("g:tex_usedblwidth")
                                let s:texMathList= s:texMathList + [
                                \ ['right\\rangle'	, '〉'],
                                \ ['left\\langle'	, '〈']]
    3              0.000003   else
    3              0.000059     let s:texMathList= s:texMathList + [
                                \ ['right\\rangle'	, '>'],
                                \ ['left\\langle'	, '<']]
    3              0.000002   endif
  516              0.000376   for texmath in s:texMathList
  513              0.001448    if texmath[0] =~# '\w$'
  480              0.002969     exe "syn match texMathSymbol '\\\\".texmath[0]."\\>' contained conceal cchar=".texmath[1]
   33              0.000018    else
   33              0.000224     exe "syn match texMathSymbol '\\\\".texmath[0]."' contained conceal cchar=".texmath[1]
  513              0.000234    endif
  516              0.000271   endfor
                            
    3              0.000009   if &ambw == "double"
                               syn match texMathSymbol '\\gg\>'			contained conceal cchar=≫
                               syn match texMathSymbol '\\ll\>'			contained conceal cchar=≪
    3              0.000009   else
    3              0.000011    syn match texMathSymbol '\\gg\>'			contained conceal cchar=⟫
    3              0.000008    syn match texMathSymbol '\\ll\>'			contained conceal cchar=⟪
    3              0.000002   endif
                            
    3              0.000008   syn match texMathSymbol '\\hat{a}' contained conceal cchar=â
    3              0.000013   syn match texMathSymbol '\\hat{A}' contained conceal cchar=Â
    3              0.000008   syn match texMathSymbol '\\hat{c}' contained conceal cchar=ĉ
    3              0.000015   syn match texMathSymbol '\\hat{C}' contained conceal cchar=Ĉ
    3              0.000007   syn match texMathSymbol '\\hat{e}' contained conceal cchar=ê
    3              0.000012   syn match texMathSymbol '\\hat{E}' contained conceal cchar=Ê
    3              0.000012   syn match texMathSymbol '\\hat{g}' contained conceal cchar=ĝ
    3              0.000008   syn match texMathSymbol '\\hat{G}' contained conceal cchar=Ĝ
    3              0.000007   syn match texMathSymbol '\\hat{i}' contained conceal cchar=î
    3              0.000007   syn match texMathSymbol '\\hat{I}' contained conceal cchar=Î
    3              0.000008   syn match texMathSymbol '\\hat{o}' contained conceal cchar=ô
    3              0.000013   syn match texMathSymbol '\\hat{O}' contained conceal cchar=Ô
    3              0.000012   syn match texMathSymbol '\\hat{s}' contained conceal cchar=ŝ
    3              0.000008   syn match texMathSymbol '\\hat{S}' contained conceal cchar=Ŝ
    3              0.000008   syn match texMathSymbol '\\hat{u}' contained conceal cchar=û
    3              0.000017   syn match texMathSymbol '\\hat{U}' contained conceal cchar=Û
    3              0.000008   syn match texMathSymbol '\\hat{w}' contained conceal cchar=ŵ
    3              0.000011   syn match texMathSymbol '\\hat{W}' contained conceal cchar=Ŵ
    3              0.000007   syn match texMathSymbol '\\hat{y}' contained conceal cchar=ŷ
    3              0.000007   syn match texMathSymbol '\\hat{Y}' contained conceal cchar=Ŷ
                            "  syn match texMathSymbol '\\bar{a}' contained conceal cchar=a̅
                            
    3              0.000008   syn match texMathSymbol '\\dot{B}' contained conceal cchar=Ḃ
    3              0.000008   syn match texMathSymbol '\\dot{b}' contained conceal cchar=ḃ
    3              0.000013   syn match texMathSymbol '\\dot{D}' contained conceal cchar=Ḋ
    3              0.000007   syn match texMathSymbol '\\dot{d}' contained conceal cchar=ḋ
    3              0.000178   syn match texMathSymbol '\\dot{F}' contained conceal cchar=Ḟ
    3              0.000010   syn match texMathSymbol '\\dot{f}' contained conceal cchar=ḟ
    3              0.000008   syn match texMathSymbol '\\dot{H}' contained conceal cchar=Ḣ
    3              0.000062   syn match texMathSymbol '\\dot{h}' contained conceal cchar=ḣ
    3              0.000008   syn match texMathSymbol '\\dot{M}' contained conceal cchar=Ṁ
    3              0.000012   syn match texMathSymbol '\\dot{m}' contained conceal cchar=ṁ
    3              0.000008   syn match texMathSymbol '\\dot{N}' contained conceal cchar=Ṅ
    3              0.000007   syn match texMathSymbol '\\dot{n}' contained conceal cchar=ṅ
    3              0.000008   syn match texMathSymbol '\\dot{P}' contained conceal cchar=Ṗ
    3              0.000008   syn match texMathSymbol '\\dot{p}' contained conceal cchar=ṗ
    3              0.000008   syn match texMathSymbol '\\dot{R}' contained conceal cchar=Ṙ
    3              0.000008   syn match texMathSymbol '\\dot{r}' contained conceal cchar=ṙ
    3              0.000008   syn match texMathSymbol '\\dot{S}' contained conceal cchar=Ṡ
    3              0.000008   syn match texMathSymbol '\\dot{s}' contained conceal cchar=ṡ
    3              0.000008   syn match texMathSymbol '\\dot{T}' contained conceal cchar=Ṫ
    3              0.000008   syn match texMathSymbol '\\dot{t}' contained conceal cchar=ṫ
    3              0.000014   syn match texMathSymbol '\\dot{W}' contained conceal cchar=Ẇ
    3              0.000008   syn match texMathSymbol '\\dot{w}' contained conceal cchar=ẇ
    3              0.000008   syn match texMathSymbol '\\dot{X}' contained conceal cchar=Ẋ
    3              0.000016   syn match texMathSymbol '\\dot{x}' contained conceal cchar=ẋ
    3              0.000011   syn match texMathSymbol '\\dot{Y}' contained conceal cchar=Ẏ
    3              0.000008   syn match texMathSymbol '\\dot{y}' contained conceal cchar=ẏ
    3              0.000008   syn match texMathSymbol '\\dot{Z}' contained conceal cchar=Ż
    3              0.000010   syn match texMathSymbol '\\dot{z}' contained conceal cchar=ż
                            
    3              0.000008   syn match texMathSymbol '\\dot{C}' contained conceal cchar=Ċ
    3              0.000008   syn match texMathSymbol '\\dot{c}' contained conceal cchar=ċ
    3              0.000008   syn match texMathSymbol '\\dot{E}' contained conceal cchar=Ė
    3              0.000008   syn match texMathSymbol '\\dot{e}' contained conceal cchar=ė
    3              0.000008   syn match texMathSymbol '\\dot{G}' contained conceal cchar=Ġ
    3              0.000007   syn match texMathSymbol '\\dot{g}' contained conceal cchar=ġ
    3              0.000006   syn match texMathSymbol '\\dot{I}' contained conceal cchar=İ
                            
    3              0.000007   syn match texMathSymbol '\\dot{A}' contained conceal cchar=Ȧ
    3              0.000007   syn match texMathSymbol '\\dot{a}' contained conceal cchar=ȧ
    3              0.000011   syn match texMathSymbol '\\dot{O}' contained conceal cchar=Ȯ
    3              0.000007   syn match texMathSymbol '\\dot{o}' contained conceal cchar=ȯ
    3              0.000002  endif
                            
                             " Greek {{{2
    3              0.000013  if s:tex_conceal =~# 'g'
    3              0.000013   fun! s:Greek(group,pat,cchar)
                                exe 'syn match '.a:group." '".a:pat."' contained conceal cchar=".a:cchar
                              endfun
    3   0.000084   0.000036   call s:Greek('texGreek','\\alpha\>'		,'α')
    3   0.000047   0.000021   call s:Greek('texGreek','\\beta\>'		,'β')
    3   0.000038   0.000020   call s:Greek('texGreek','\\gamma\>'		,'γ')
    3   0.000036   0.000015   call s:Greek('texGreek','\\delta\>'		,'δ')
    3   0.000036   0.000014   call s:Greek('texGreek','\\epsilon\>'		,'ϵ')
    3   0.000035   0.000013   call s:Greek('texGreek','\\varepsilon\>'	,'ε')
    3   0.000031   0.000015   call s:Greek('texGreek','\\zeta\>'		,'ζ')
    3   0.000036   0.000013   call s:Greek('texGreek','\\eta\>'		,'η')
    3   0.000030   0.000015   call s:Greek('texGreek','\\theta\>'		,'θ')
    3   0.000031   0.000014   call s:Greek('texGreek','\\vartheta\>'	,'ϑ')
    3   0.000037   0.000014   call s:Greek('texGreek','\\iota\>'            ,'ι')
    3   0.000029   0.000014   call s:Greek('texGreek','\\kappa\>'		,'κ')
    3   0.000030   0.000013   call s:Greek('texGreek','\\lambda\>'		,'λ')
    3   0.000029   0.000013   call s:Greek('texGreek','\\mu\>'		,'μ')
    3   0.000028   0.000013   call s:Greek('texGreek','\\nu\>'		,'ν')
    3   0.000057   0.000018   call s:Greek('texGreek','\\xi\>'		,'ξ')
    3   0.000034   0.000013   call s:Greek('texGreek','\\pi\>'		,'π')
    3   0.000029   0.000013   call s:Greek('texGreek','\\varpi\>'		,'ϖ')
    3   0.000029   0.000013   call s:Greek('texGreek','\\rho\>'		,'ρ')
    3   0.000030   0.000015   call s:Greek('texGreek','\\varrho\>'		,'ϱ')
    3   0.000027   0.000013   call s:Greek('texGreek','\\sigma\>'		,'σ')
    3   0.000030   0.000013   call s:Greek('texGreek','\\varsigma\>'	,'ς')
    3   0.000028   0.000013   call s:Greek('texGreek','\\tau\>'		,'τ')
    3   0.000048   0.000023   call s:Greek('texGreek','\\upsilon\>'		,'υ')
    3   0.000029   0.000014   call s:Greek('texGreek','\\phi\>'		,'ϕ')
    3   0.000029   0.000013   call s:Greek('texGreek','\\varphi\>'		,'φ')
    3   0.000044   0.000029   call s:Greek('texGreek','\\chi\>'		,'χ')
    3   0.000028   0.000013   call s:Greek('texGreek','\\psi\>'		,'ψ')
    3   0.000028   0.000013   call s:Greek('texGreek','\\omega\>'		,'ω')
    3   0.000028   0.000014   call s:Greek('texGreek','\\Gamma\>'		,'Γ')
    3   0.000028   0.000013   call s:Greek('texGreek','\\Delta\>'		,'Δ')
    3   0.000028   0.000013   call s:Greek('texGreek','\\Theta\>'		,'Θ')
    3   0.000029   0.000013   call s:Greek('texGreek','\\Lambda\>'		,'Λ')
    3   0.000029   0.000014   call s:Greek('texGreek','\\Xi\>'              ,'Ξ')
    3   0.000024   0.000012   call s:Greek('texGreek','\\Pi\>'		,'Π')
    3   0.000023   0.000011   call s:Greek('texGreek','\\Sigma\>'		,'Σ')
    3   0.000025   0.000011   call s:Greek('texGreek','\\Upsilon\>'		,'Υ')
    3   0.000023   0.000011   call s:Greek('texGreek','\\Phi\>'		,'Φ')
    3   0.000022   0.000011   call s:Greek('texGreek','\\Chi\>'		,'Χ')
    3   0.000046   0.000030   call s:Greek('texGreek','\\Psi\>'		,'Ψ')
    3   0.000031   0.000011   call s:Greek('texGreek','\\Omega\>'		,'Ω')
    3              0.000008   delfun s:Greek
    3              0.000002  endif
                            
                             " Superscripts/Subscripts {{{2
    3              0.000009  if s:tex_conceal =~# 's'
    3              0.000008   if s:tex_fast =~# 's'
    3              0.000041    syn region texSuperscript	matchgroup=texDelimiter start='\^{'	skip="\\\\\|\\[{}]" end='}'	contained concealends contains=texSpecialChar,texSuperscripts,texStatement,texSubscript,texSuperscript,texMathMatcher
    3              0.000037    syn region texSubscript	matchgroup=texDelimiter start='_{'		skip="\\\\\|\\[{}]" end='}'	contained concealends contains=texSpecialChar,texSubscripts,texStatement,texSubscript,texSuperscript,texMathMatcher
    3              0.000002   endif
                              " s:SuperSub:
    3              0.000009   fun! s:SuperSub(group,leader,pat,cchar)
                                if a:pat =~# '^\\' || (a:leader == '\^' && a:pat =~# s:tex_superscripts) || (a:leader == '_' && a:pat =~# s:tex_subscripts)
                            "     call Decho("SuperSub: group<".a:group."> leader<".a:leader."> pat<".a:pat."> cchar<".a:cchar.">")
                                 exe 'syn match '.a:group." '".a:leader.a:pat."' contained conceal cchar=".a:cchar
                                 exe 'syn match '.a:group."s '".a:pat        ."' contained conceal cchar=".a:cchar.' nextgroup='.a:group.'s'
                                endif
                              endfun
    3   0.000106   0.000017   call s:SuperSub('texSuperscript','\^','0','⁰')
    3   0.000070   0.000016   call s:SuperSub('texSuperscript','\^','1','¹')
    3   0.000060   0.000013   call s:SuperSub('texSuperscript','\^','2','²')
    3   0.000061   0.000015   call s:SuperSub('texSuperscript','\^','3','³')
    3   0.000062   0.000015   call s:SuperSub('texSuperscript','\^','4','⁴')
    3   0.000060   0.000012   call s:SuperSub('texSuperscript','\^','5','⁵')
    3   0.000058   0.000012   call s:SuperSub('texSuperscript','\^','6','⁶')
    3   0.000058   0.000012   call s:SuperSub('texSuperscript','\^','7','⁷')
    3   0.000063   0.000012   call s:SuperSub('texSuperscript','\^','8','⁸')
    3   0.000068   0.000012   call s:SuperSub('texSuperscript','\^','9','⁹')
    3   0.000078   0.000015   call s:SuperSub('texSuperscript','\^','a','ᵃ')
    3   0.000071   0.000015   call s:SuperSub('texSuperscript','\^','b','ᵇ')
    3   0.000067   0.000014   call s:SuperSub('texSuperscript','\^','c','ᶜ')
    3   0.000084   0.000014   call s:SuperSub('texSuperscript','\^','d','ᵈ')
    3   0.000069   0.000015   call s:SuperSub('texSuperscript','\^','e','ᵉ')
    3   0.000071   0.000014   call s:SuperSub('texSuperscript','\^','f','ᶠ')
    3   0.000067   0.000014   call s:SuperSub('texSuperscript','\^','g','ᵍ')
    3   0.000069   0.000015   call s:SuperSub('texSuperscript','\^','h','ʰ')
    3   0.000068   0.000015   call s:SuperSub('texSuperscript','\^','i','ⁱ')
    3   0.000071   0.000015   call s:SuperSub('texSuperscript','\^','j','ʲ')
    3   0.000083   0.000018   call s:SuperSub('texSuperscript','\^','k','ᵏ')
    3   0.000086   0.000017   call s:SuperSub('texSuperscript','\^','l','ˡ')
    3   0.000081   0.000020   call s:SuperSub('texSuperscript','\^','m','ᵐ')
    3   0.000102   0.000028   call s:SuperSub('texSuperscript','\^','n','ⁿ')
    3   0.000111   0.000021   call s:SuperSub('texSuperscript','\^','o','ᵒ')
    3   0.000078   0.000017   call s:SuperSub('texSuperscript','\^','p','ᵖ')
    3   0.000092   0.000021   call s:SuperSub('texSuperscript','\^','r','ʳ')
    3   0.000093   0.000017   call s:SuperSub('texSuperscript','\^','s','ˢ')
    3   0.000080   0.000017   call s:SuperSub('texSuperscript','\^','t','ᵗ')
    3   0.000079   0.000017   call s:SuperSub('texSuperscript','\^','u','ᵘ')
    3   0.000087   0.000022   call s:SuperSub('texSuperscript','\^','v','ᵛ')
    3   0.000084   0.000017   call s:SuperSub('texSuperscript','\^','w','ʷ')
    3   0.000091   0.000017   call s:SuperSub('texSuperscript','\^','x','ˣ')
    3   0.000081   0.000018   call s:SuperSub('texSuperscript','\^','y','ʸ')
    3   0.000080   0.000018   call s:SuperSub('texSuperscript','\^','z','ᶻ')
    3   0.000077   0.000017   call s:SuperSub('texSuperscript','\^','A','ᴬ')
    3   0.000089   0.000017   call s:SuperSub('texSuperscript','\^','B','ᴮ')
    3   0.000173   0.000017   call s:SuperSub('texSuperscript','\^','D','ᴰ')
    3   0.000069   0.000015   call s:SuperSub('texSuperscript','\^','E','ᴱ')
    3   0.000077   0.000015   call s:SuperSub('texSuperscript','\^','G','ᴳ')
    3   0.000076   0.000022   call s:SuperSub('texSuperscript','\^','H','ᴴ')
    3   0.000067   0.000014   call s:SuperSub('texSuperscript','\^','I','ᴵ')
    3   0.000069   0.000015   call s:SuperSub('texSuperscript','\^','J','ᴶ')
    3   0.000069   0.000015   call s:SuperSub('texSuperscript','\^','K','ᴷ')
    3   0.000067   0.000015   call s:SuperSub('texSuperscript','\^','L','ᴸ')
    3   0.000075   0.000014   call s:SuperSub('texSuperscript','\^','M','ᴹ')
    3   0.000063   0.000013   call s:SuperSub('texSuperscript','\^','N','ᴺ')
    3   0.000057   0.000013   call s:SuperSub('texSuperscript','\^','O','ᴼ')
    3   0.000058   0.000012   call s:SuperSub('texSuperscript','\^','P','ᴾ')
    3   0.000061   0.000017   call s:SuperSub('texSuperscript','\^','R','ᴿ')
    3   0.000058   0.000013   call s:SuperSub('texSuperscript','\^','T','ᵀ')
    3   0.000058   0.000012   call s:SuperSub('texSuperscript','\^','U','ᵁ')
    3   0.000062   0.000012   call s:SuperSub('texSuperscript','\^','V','ⱽ')
    3   0.000059   0.000014   call s:SuperSub('texSuperscript','\^','W','ᵂ')
    3   0.000063   0.000013   call s:SuperSub('texSuperscript','\^',',','︐')
    3   0.000076   0.000014   call s:SuperSub('texSuperscript','\^',':','︓')
    3   0.000084   0.000036   call s:SuperSub('texSuperscript','\^',';','︔')
    3   0.000058   0.000012   call s:SuperSub('texSuperscript','\^','+','⁺')
    3   0.000063   0.000014   call s:SuperSub('texSuperscript','\^','-','⁻')
    3   0.000062   0.000013   call s:SuperSub('texSuperscript','\^','<','˂')
    3   0.000056   0.000012   call s:SuperSub('texSuperscript','\^','>','˃')
    3   0.000056   0.000012   call s:SuperSub('texSuperscript','\^','/','ˊ')
    3   0.000056   0.000012   call s:SuperSub('texSuperscript','\^','(','⁽')
    3   0.000066   0.000012   call s:SuperSub('texSuperscript','\^',')','⁾')
    3   0.000054   0.000013   call s:SuperSub('texSuperscript','\^','\.','˙')
    3   0.000064   0.000012   call s:SuperSub('texSuperscript','\^','=','˭')
    3   0.000069   0.000013   call s:SuperSub('texSubscript','_','0','₀')
    3   0.000064   0.000013   call s:SuperSub('texSubscript','_','1','₁')
    3   0.000059   0.000012   call s:SuperSub('texSubscript','_','2','₂')
    3   0.000065   0.000012   call s:SuperSub('texSubscript','_','3','₃')
    3   0.000058   0.000012   call s:SuperSub('texSubscript','_','4','₄')
    3   0.000063   0.000012   call s:SuperSub('texSubscript','_','5','₅')
    3   0.000066   0.000012   call s:SuperSub('texSubscript','_','6','₆')
    3   0.000060   0.000014   call s:SuperSub('texSubscript','_','7','₇')
    3   0.000057   0.000012   call s:SuperSub('texSubscript','_','8','₈')
    3   0.000058   0.000012   call s:SuperSub('texSubscript','_','9','₉')
    3   0.000058   0.000013   call s:SuperSub('texSubscript','_','a','ₐ')
    3   0.000057   0.000012   call s:SuperSub('texSubscript','_','e','ₑ')
    3   0.000057   0.000012   call s:SuperSub('texSubscript','_','h','ₕ')
    3   0.000061   0.000012   call s:SuperSub('texSubscript','_','i','ᵢ')
    3   0.000075   0.000012   call s:SuperSub('texSubscript','_','j','ⱼ')
    3   0.000059   0.000012   call s:SuperSub('texSubscript','_','k','ₖ')
    3   0.000059   0.000012   call s:SuperSub('texSubscript','_','l','ₗ')
    3   0.000057   0.000012   call s:SuperSub('texSubscript','_','m','ₘ')
    3   0.000057   0.000012   call s:SuperSub('texSubscript','_','n','ₙ')
    3   0.000058   0.000012   call s:SuperSub('texSubscript','_','o','ₒ')
    3   0.000056   0.000012   call s:SuperSub('texSubscript','_','p','ₚ')
    3   0.000058   0.000012   call s:SuperSub('texSubscript','_','r','ᵣ')
    3   0.000057   0.000011   call s:SuperSub('texSubscript','_','s','ₛ')
    3   0.000061   0.000016   call s:SuperSub('texSubscript','_','t','ₜ')
    3   0.000059   0.000012   call s:SuperSub('texSubscript','_','u','ᵤ')
    3   0.000058   0.000013   call s:SuperSub('texSubscript','_','v','ᵥ')
    3   0.000056   0.000012   call s:SuperSub('texSubscript','_','x','ₓ')
    3   0.000058   0.000012   call s:SuperSub('texSubscript','_',',','︐')
    3   0.000059   0.000013   call s:SuperSub('texSubscript','_','+','₊')
    3   0.000058   0.000012   call s:SuperSub('texSubscript','_','-','₋')
    3   0.000058   0.000012   call s:SuperSub('texSubscript','_','/','ˏ')
    3   0.000058   0.000012   call s:SuperSub('texSubscript','_','(','₍')
    3   0.000072   0.000012   call s:SuperSub('texSubscript','_',')','₎')
    3   0.000058   0.000017   call s:SuperSub('texSubscript','_','\.','‸')
    3   0.000062   0.000012   call s:SuperSub('texSubscript','_','r','ᵣ')
    3   0.000057   0.000012   call s:SuperSub('texSubscript','_','v','ᵥ')
    3   0.000058   0.000012   call s:SuperSub('texSubscript','_','x','ₓ')
    3   0.000066   0.000012   call s:SuperSub('texSubscript','_','\\beta\>' ,'ᵦ')
    3   0.000055   0.000013   call s:SuperSub('texSubscript','_','\\delta\>','ᵨ')
    3   0.000055   0.000013   call s:SuperSub('texSubscript','_','\\phi\>'  ,'ᵩ')
    3   0.000053   0.000012   call s:SuperSub('texSubscript','_','\\gamma\>','ᵧ')
    3   0.000053   0.000013   call s:SuperSub('texSubscript','_','\\chi\>'  ,'ᵪ')
                            
    3              0.000007   delfun s:SuperSub
    3              0.000002  endif
                            
                             " Accented characters and Ligatures: {{{2
    3              0.000006  if s:tex_conceal =~# 'a'
    3              0.000004   if b:tex_stylish
                               syn match texAccent		"\\[bcdvuH][^a-zA-Z@]"me=e-1
                               syn match texLigature	"\\\([ijolL]\|ae\|oe\|ss\|AA\|AE\|OE\)[^a-zA-Z@]"me=e-1
                               syn match texLigature	'--'
                               syn match texLigature	'---'
    3              0.000012   else
    3              0.000010    fun! s:Accents(chr,...)
                                 let i= 1
                                 for accent in ["`","\\'","^",'"','\~','\.','=',"c","H","k","r","u","v"]
                                  if i > a:0
                                   break
                                  endif
                                  if strlen(a:{i}) == 0 || a:{i} == ' ' || a:{i} == '?'
                                   let i= i + 1
                                   continue
                                  endif
                                  if accent =~# '\a'
                                   exe "syn match texAccent '".'\\'.accent.'\(\s*{'.a:chr.'}\|\s\+'.a:chr.'\)'."' conceal cchar=".a:{i}
                                  else
                                   exe "syn match texAccent '".'\\'.accent.'\s*\({'.a:chr.'}\|'.a:chr.'\)'."' conceal cchar=".a:{i}
                                  endif
                                  let i= i + 1
                                 endfor
                               endfun
                               "                  \`  \'  \^  \"  \~  \.  \=  \c  \H  \k  \r  \u  \v
    3   0.000804   0.000029    call s:Accents('a','à','á','â','ä','ã','ȧ','ā',' ',' ','ą','å','ă','ǎ')
    3   0.000919   0.000032    call s:Accents('A','À','Á','Â','Ä','Ã','Ȧ','Ā',' ',' ','Ą','Å','Ă','Ǎ')
    3   0.000621   0.000037    call s:Accents('c',' ','ć','ĉ',' ',' ','ċ',' ','ç',' ',' ',' ',' ','č')
    3   0.000631   0.000033    call s:Accents('C',' ','Ć','Ĉ',' ',' ','Ċ',' ','Ç',' ',' ',' ',' ','Č')
    3   0.000430   0.000034    call s:Accents('d',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','ď')
    3   0.000423   0.000047    call s:Accents('D',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','Ď')
    3   0.001054   0.000058    call s:Accents('e','è','é','ê','ë','ẽ','ė','ē','ȩ',' ','ę',' ','ĕ','ě')
    3   0.000959   0.000037    call s:Accents('E','È','É','Ê','Ë','Ẽ','Ė','Ē','Ȩ',' ','Ę',' ','Ĕ','Ě')
    3   0.000650   0.000034    call s:Accents('g',' ','ǵ','ĝ',' ',' ','ġ',' ','ģ',' ',' ',' ','ğ','ǧ')
    3   0.000663   0.000032    call s:Accents('G',' ','Ǵ','Ĝ',' ',' ','Ġ',' ','Ģ',' ',' ',' ','Ğ','Ǧ')
    3   0.000450   0.000040    call s:Accents('h',' ',' ','ĥ',' ',' ',' ',' ',' ',' ',' ',' ',' ','ȟ')
    3   0.000416   0.000030    call s:Accents('H',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','Ȟ')
    3   0.000869   0.000030    call s:Accents('i','ì','í','î','ï','ĩ','į','ī',' ',' ','į',' ','ĭ','ǐ')
    3   0.000808   0.000031    call s:Accents('I','Ì','Í','Î','Ï','Ĩ','İ','Ī',' ',' ','Į',' ','Ĭ','Ǐ')
    3   0.000430   0.000031    call s:Accents('J',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ','ǰ')
    3   0.000481   0.000030    call s:Accents('k',' ',' ',' ',' ',' ',' ',' ','ķ',' ',' ',' ',' ','ǩ')
    3   0.000481   0.000029    call s:Accents('K',' ',' ',' ',' ',' ',' ',' ','Ķ',' ',' ',' ',' ','Ǩ')
    3   0.000590   0.000042    call s:Accents('l',' ','ĺ','ľ',' ',' ',' ',' ','ļ',' ',' ',' ',' ','ľ')
    3   0.000566   0.000037    call s:Accents('L',' ','Ĺ','Ľ',' ',' ',' ',' ','Ļ',' ',' ',' ',' ','Ľ')
    3   0.000680   0.000031    call s:Accents('n',' ','ń',' ',' ','ñ',' ',' ','ņ',' ',' ',' ',' ','ň')
    3   0.000652   0.000040    call s:Accents('N',' ','Ń',' ',' ','Ñ',' ',' ','Ņ',' ',' ',' ',' ','Ň')
    3   0.001044   0.000039    call s:Accents('o','ò','ó','ô','ö','õ','ȯ','ō',' ','ő','ǫ',' ','ŏ','ǒ')
    3   0.001045   0.000045    call s:Accents('O','Ò','Ó','Ô','Ö','Õ','Ȯ','Ō',' ','Ő','Ǫ',' ','Ŏ','Ǒ')
    3   0.000608   0.000041    call s:Accents('r',' ','ŕ',' ',' ',' ',' ',' ','ŗ',' ',' ',' ',' ','ř')
    3   0.000599   0.000053    call s:Accents('R',' ','Ŕ',' ',' ',' ',' ',' ','Ŗ',' ',' ',' ',' ','Ř')
    3   0.000574   0.000032    call s:Accents('s',' ','ś','ŝ',' ',' ',' ',' ','ş',' ','ȿ',' ',' ','š')
    3   0.000562   0.000031    call s:Accents('S',' ','Ś','Ŝ',' ',' ',' ',' ','Ş',' ',' ',' ',' ','Š')
    3   0.000461   0.000031    call s:Accents('t',' ',' ',' ',' ',' ',' ',' ','ţ',' ',' ',' ',' ','ť')
    3   0.000474   0.000031    call s:Accents('T',' ',' ',' ',' ',' ',' ',' ','Ţ',' ',' ',' ',' ','Ť')
    3   0.001108   0.000041    call s:Accents('u','ù','ú','û','ü','ũ',' ','ū',' ','ű','ų','ů','ŭ','ǔ')
    3   0.001024   0.000053    call s:Accents('U','Ù','Ú','Û','Ü','Ũ',' ','Ū',' ','Ű','Ų','Ů','Ŭ','Ǔ')
    3   0.000427   0.000034    call s:Accents('w',' ',' ','ŵ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ')
    3   0.000406   0.000032    call s:Accents('W',' ',' ','Ŵ',' ',' ',' ',' ',' ',' ',' ',' ',' ',' ')
    3   0.000585   0.000035    call s:Accents('y','ỳ','ý','ŷ','ÿ','ỹ',' ',' ',' ',' ',' ',' ',' ',' ')
    3   0.000607   0.000032    call s:Accents('Y','Ỳ','Ý','Ŷ','Ÿ','Ỹ',' ',' ',' ',' ',' ',' ',' ',' ')
    3   0.000520   0.000039    call s:Accents('z',' ','ź',' ',' ',' ','ż',' ',' ',' ',' ',' ',' ','ž')
    3   0.000493   0.000030    call s:Accents('Z',' ','Ź',' ',' ',' ','Ż',' ',' ',' ',' ',' ',' ','Ž')
    3   0.000733   0.000031    call s:Accents('\\i','ì','í','î','ï','ĩ','į',' ',' ',' ',' ',' ','ĭ',' ')
                               "                    \`  \'  \^  \"  \~  \.  \=  \c  \H  \k  \r  \u  \v
    3              0.000010    delfun s:Accents
    3              0.000014    syn match texAccent		'\\aa\>'	conceal cchar=å
    3              0.000011    syn match texAccent		'\\AA\>'	conceal cchar=Å
    3              0.000014    syn match texAccent		'\\o\>'		conceal cchar=ø
    3              0.000010    syn match texAccent		'\\O\>'		conceal cchar=Ø
    3              0.000012    syn match texLigature	'\\AE\>'	conceal cchar=Æ
    3              0.000010    syn match texLigature	'\\ae\>'	conceal cchar=æ
    3              0.000010    syn match texLigature	'\\oe\>'	conceal cchar=œ
    3              0.000012    syn match texLigature	'\\OE\>'	conceal cchar=Œ
    3              0.000010    syn match texLigature	'\\ss\>'	conceal cchar=ß
    3              0.000011    syn match texLigature	'--'		conceal cchar=–
    3              0.000010    syn match texLigature	'---'		conceal cchar=—
    3              0.000002   endif
    3              0.000002  endif
    3              0.000002 endif
                            
                            " ---------------------------------------------------------------------
                            " LaTeX synchronization: {{{1
    3              0.000005 syn sync maxlines=200
    3              0.000004 syn sync minlines=50
                            
    3              0.000024 syn  sync match texSyncStop			groupthere NONE		"%stopzone\>"
                            
                            " Synchronization: {{{1
                            " The $..$ and $$..$$ make for impossible sync patterns
                            " (one can't tell if a "$$" starts or stops a math zone by itself)
                            " The following grouptheres coupled with minlines above
                            " help improve the odds of good syncing.
    3              0.000010 if !exists("g:tex_no_math")
    3              0.000019  syn sync match texSyncMathZoneA		groupthere NONE		"\\end{abstract}"
    3              0.000023  syn sync match texSyncMathZoneA		groupthere NONE		"\\end{center}"
    3              0.000024  syn sync match texSyncMathZoneA		groupthere NONE		"\\end{description}"
    3              0.000016  syn sync match texSyncMathZoneA		groupthere NONE		"\\end{enumerate}"
    3              0.000064  syn sync match texSyncMathZoneA		groupthere NONE		"\\end{itemize}"
    3              0.000016  syn sync match texSyncMathZoneA		groupthere NONE		"\\end{table}"
    3              0.000014  syn sync match texSyncMathZoneA		groupthere NONE		"\\end{tabular}"
    3              0.000015  syn sync match texSyncMathZoneA		groupthere NONE		"\\\(sub\)*section\>"
    3              0.000002 endif
                            
                            " ---------------------------------------------------------------------
                            " Highlighting: {{{1
                            
                            " Define the default highlighting. {{{1
    3              0.000015 if !exists("skip_tex_syntax_inits")
                            
                              " TeX highlighting groups which should share similar highlighting
    3              0.000007   if !exists("g:tex_no_error")
    3              0.000006    if !exists("g:tex_no_math")
    3              0.000007     hi def link texBadMath		texError
    3              0.000004     hi def link texBadPar		texBadMath
    3              0.000005     hi def link texMathDelimBad		texError
    3              0.000003     hi def link texMathError		texError
    3              0.000005     if !b:tex_stylish
    3              0.000004       hi def link texOnlyMath		texError
    3              0.000002     endif
    3              0.000002    endif
    3              0.000003    hi def link texError			Error
    3              0.000002   endif
                            
    3              0.000038   hi texBoldStyle		gui=bold	cterm=bold
    3              0.000013   hi texItalStyle		gui=italic	cterm=italic
    3              0.000023   hi texBoldItalStyle		gui=bold,italic cterm=bold,italic
    3              0.000022   hi texItalBoldStyle		gui=bold,italic cterm=bold,italic
    3              0.000003   hi def link texEmphStyle	texItalStyle
    3              0.000004   hi def link texCite		texRefZone
    3              0.000004   hi def link texDefCmd		texDef
    3              0.000003   hi def link texDefName	texDef
    3              0.000004   hi def link texDocType	texCmdName
    3              0.000004   hi def link texDocTypeArgs	texCmdArgs
    3              0.000006   hi def link texInputFileOpt	texCmdArgs
    3              0.000004   hi def link texInputCurlies	texDelimiter
    3              0.000004   hi def link texLigature	texSpecialChar
    3              0.000007   if !exists("g:tex_no_math")
    3              0.000005    hi def link texMathDelimSet1	texMathDelim
    3              0.000004    hi def link texMathDelimSet2	texMathDelim
    3              0.000004    hi def link texMathDelimKey	texMathDelim
    3              0.000005    hi def link texMathMatcher	texMath
    3              0.000004    hi def link texAccent	texStatement
    3              0.000003    hi def link texGreek		texStatement
    3              0.000003    hi def link texSuperscript	texStatement
    3              0.000004    hi def link texSubscript	texStatement
    3              0.000004    hi def link texSuperscripts 	texSuperscript
    3              0.000003    hi def link texSubscripts 	texSubscript
    3              0.000003    hi def link texMathSymbol	texStatement
    3              0.000003    hi def link texMathZoneV	texMath
    3              0.000003    hi def link texMathZoneW	texMath
    3              0.000003    hi def link texMathZoneX	texMath
    3              0.000003    hi def link texMathZoneY	texMath
    3              0.000003    hi def link texMathZoneV	texMath
    3              0.000003    hi def link texMathZoneZ	texMath
    3              0.000002   endif
    3              0.000005   hi def link texBeginEnd	texCmdName
    3              0.000004   hi def link texBeginEndName	texSection
    3              0.000004   hi def link texSpaceCode	texStatement
    3              0.000003   hi def link texStyleStatement	texStatement
    3              0.000003   hi def link texTypeSize	texType
    3              0.000003   hi def link texTypeStyle	texType
                            
                               " Basic TeX highlighting groups
    3              0.000003   hi def link texCmdArgs	Number
    3              0.000003   hi def link texCmdName	Statement
    3              0.000004   hi def link texComment	Comment
    3              0.000003   hi def link texDef		Statement
    3              0.000004   hi def link texDefParm	Special
    3              0.000009   hi def link texDelimiter	Delimiter
    3              0.000004   hi def link texInput		Special
    3              0.000003   hi def link texInputFile	Special
    3              0.000003   hi def link texLength		Number
    3              0.000003   hi def link texMath		Special
    3              0.000003   hi def link texMathDelim	Statement
    3              0.000003   hi def link texMathOper	Operator
    3              0.000003   hi def link texNewCmd		Statement
    3              0.000003   hi def link texNewEnv		Statement
    3              0.000003   hi def link texOption		Number
    3              0.000003   hi def link texRefZone	Special
    3              0.000004   hi def link texSection	PreCondit
    3              0.000004   hi def link texSpaceCodeChar	Special
    3              0.000004   hi def link texSpecialChar	SpecialChar
    3              0.000003   hi def link texStatement	Statement
    3              0.000003   hi def link texString		String
    3              0.000003   hi def link texTodo		Todo
    3              0.000003   hi def link texType		Type
    3              0.000003   hi def link texZone		PreCondit
                            
    3              0.000002 endif
                            
                            " Cleanup: {{{1
    3              0.000009 delc TexFold
    3              0.000007 unlet s:extfname
    3              0.000007 let   b:current_syntax = "tex"
    3   0.000050   0.000028 let &cpo               = s:keepcpo
    3              0.000004 unlet s:keepcpo
                            " vim: ts=8 fdm=marker

SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax\r.vim
Sourced 6 times
Total time:   0.007008
 Self time:   0.007008

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:	      R (GNU S)
                            " Maintainer:	      This runtime file is looking for a new maintainer.
                            " Former Maintainers: Jakson Aquino <jalvesaq@gmail.com>
                            "                     Vaidotas Zemlys <zemlys@gmail.com>
                            "                     Tom Payne <tom@tompayne.org>
                            " Contributor:        Johannes Ranke <jranke@uni-bremen.de>
                            " Former Repository:  https://github.com/jalvesaq/R-Vim-runtime
                            " Filenames:          *.R *.r *.Rhistory *.Rt
                            " Last Change:        2023 Dec 24  08:05AM
                            "   2024 Feb 19 by Vim Project (announce adoption)
                            "
                            " NOTE: The highlighting of R functions might be defined in
                            " runtime files created by a filetype plugin, if installed.
                            "
                            " CONFIGURATION:
                            "   Syntax folding can be turned on by
                            "
                            "      let r_syntax_folding = 1
                            "
                            "   ROxygen highlighting can be turned off by
                            "
                            "      let r_syntax_hl_roxygen = 0
                            "
                            " Some lines of code were borrowed from Zhuojun Chen.
                            
    6              0.000032 if exists("b:current_syntax")
                              finish
    6              0.000004 endif
                            
    6              0.000045 syn iskeyword @,48-57,_,.
                            
                            " The variables g:r_hl_roxygen and g:r_syn_minlines were renamed on April 8, 2017.
    6              0.000015 if exists("g:r_hl_roxygen")
                              let g:r_syntax_hl_roxygen = g:r_hl_roxygen
    6              0.000005 endif
    6              0.000013 if exists("g:r_syn_minlines")
                              let g:r_syntax_minlines = g:r_syn_minlines
    6              0.000003 endif
                            
    6              0.000015 if exists("g:r_syntax_folding") && g:r_syntax_folding
                              setlocal foldmethod=syntax
    6              0.000004 endif
                            
    6              0.000026 let g:r_syntax_hl_roxygen = get(g:, 'r_syntax_hl_roxygen', 1)
                            
    6              0.000010 syn case match
                            
                            " Comment
    6              0.000040 syn match rCommentTodo contained "\(BUG\|FIXME\|NOTE\|TODO\):"
    6              0.000044 syn match rTodoParen contained "\(BUG\|FIXME\|NOTE\|TODO\)\s*(.\{-})\s*:" contains=rTodoKeyw,rTodoInfo transparent
    6              0.000019 syn keyword rTodoKeyw BUG FIXME NOTE TODO contained
    6              0.000021 syn match rTodoInfo "(\zs.\{-}\ze)" contained
    6              0.000030 syn match rComment contains=@Spell,rCommentTodo,rTodoParen "#.*"
                            
                            " Roxygen
    6              0.000010 if g:r_syntax_hl_roxygen
                              " A roxygen block can start at the beginning of a file (first version) and
                              " after a blank line (second version). It ends when a line appears that does not
                              " contain a roxygen comment. In the following comments, any line containing
                              " a roxygen comment marker (one or two hash signs # followed by a single
                              " quote ' and preceded only by whitespace) is called a roxygen line. A
                              " roxygen line containing only a roxygen comment marker, optionally followed
                              " by whitespace is called an empty roxygen line.
                            
    6              0.000027   syn match rOCommentKey "^\s*#\{1,2}'" contained
    6              0.000077   syn region rOExamples start="^\s*#\{1,2}' @examples.*"rs=e+1,hs=e+1 end="^\(#\{1,2}' @.*\)\@=" end="^\(#\{1,2}'\)\@!" contained contains=rOTag fold
                              
                              " R6 classes may contain roxygen lines independent of roxygen blocks
    6              0.000078   syn region rOR6Class start=/R6Class(/ end=/)/ transparent contains=ALLBUT,rError,rBraceError,rCurlyError fold
    6              0.000036   syn match rOR6Block "#\{1,2}'.*" contains=rOTag,rOExamples,@Spell containedin=rOR6Class contained
    6              0.000029   syn match rOR6Block "^\s*#\{1,2}'.*" contains=rOTag,rOExamples,@Spell containedin=rOR6Class contained
                            
                              " First we match all roxygen blocks as containing only a title. In case an
                              " empty roxygen line ending the title or a tag is found, this will be
                              " overridden later by the definitions of rOBlock.
    6              0.000057   syn match rOTitleBlock "\(\%^\|^\s*\n\)\@<=\(\s*#\{1,2}' .*\n\)\{1,}" contains=rOCommentKey,rOTitleTag
                            
                              " A title as part of a block is always at the beginning of the block, i.e.
                              " either at the start of a file or after a completely empty line.
    6              0.000062   syn match rOTitle "\(\%^\|^\s*\n\)\@<=\(\s*#\{1,2}' .*\n\)\{-1,}\s*#\{1,2}'\s*$" contained contains=rOCommentKey,rOTitleTag
    6              0.000015   syn match rOTitleTag contained "@title"
                            
                              " When a roxygen block has a title and additional content, the title
                              " consists of one or more roxygen lines (as little as possible are matched),
                              " followed either by an empty roxygen line
    6              0.000085   syn region rOBlock start="\(\%^\|^\s*\n\)\@<=\(\s*#\{1,2}' .*\n\)\{-1,}\s*#\{1,2}'\s*$" end="^\s*\(#\{1,2}'\)\@!" contains=rOTitle,rOTag,rOExamples,@Spell keepend fold
                            
                              " or by a roxygen tag (we match everything starting with @ but not @@ which is used as escape sequence for a literal @).
    6              0.000105   syn region rOBlock start="\(\%^\|^\s*\n\)\@<=\(\s*#\{1,2}' .*\n\)\{-}\s*#\{1,2}' @\(@\)\@!" end="^\s*\(#\{1,2}'\)\@!" contains=rOTitle,rOTag,rOExamples,@Spell keepend fold
                            
                              " If a block contains an @rdname, @describeIn tag, it may have paragraph breaks, but does not have a title
    6              0.000096   syn region rOBlockNoTitle start="\(\%^\|^\s*\n\)\@<=\(\s*#\{1,2}' .*\n\)\{-1,}\s*#\{1,2}'\s*\n\(\s*#\{1,2}'.*\n\)\{-}\s*#\{1,2}' @rdname" end="^\s*\(#\{1,2}'\)\@!" contains=rOTag,rOExamples,@Spell keepend fold
    6              0.000110   syn region rOBlockNoTitle start="\(\%^\|^\s*\n\)\@<=\(\s*#\{1,2}' .*\n\)\{-1,}\s*#\{1,2}'\s*\n\(\s*#\{1,2}'.*\n\)\{-}\s*#\{1,2}' @describeIn" end="^\s*\(#\{1,2}'\)\@!" contains=rOTag,rOExamples,@Spell keepend fold
                            
                              " rOTag list originally generated from the lists that were available in
                              " https://github.com/klutometis/roxygen/R/rd.R and
                              " https://github.com/klutometis/roxygen/R/namespace.R
                              " using s/^    \([A-Za-z0-9]*\) = .*/  syn match rOTag contained "@\1"/
                              " Plus we need the @include tag
                            
                              " rd.R
    6              0.000022   syn match rOTag contained "@aliases"
    6              0.000042   syn match rOTag contained "@author"
    6              0.000027   syn match rOTag contained "@backref"
    6              0.000017   syn match rOTag contained "@concept"
    6              0.000019   syn match rOTag contained "@describeIn"
    6              0.000016   syn match rOTag contained "@description"
    6              0.000033   syn match rOTag contained "@details"
    6              0.000019   syn match rOTag contained "@docType"
    6              0.000022   syn match rOTag contained "@encoding"
    6              0.000014   syn match rOTag contained "@evalRd"
    6              0.000015   syn match rOTag contained "@example"
    6              0.000013   syn match rOTag contained "@examples"
    6              0.000013   syn match rOTag contained "@family"
    6              0.000014   syn match rOTag contained "@field"
    6              0.000012   syn match rOTag contained "@format"
    6              0.000028   syn match rOTag contained "@inherit"
    6              0.000025   syn match rOTag contained "@inheritParams"
    6              0.000033   syn match rOTag contained "@inheritDotParams"
    6              0.000020   syn match rOTag contained "@inheritSection"
    6              0.000015   syn match rOTag contained "@keywords"
    6              0.000013   syn match rOTag contained "@method"
    6              0.000014   syn match rOTag contained "@name"
    6              0.000021   syn match rOTag contained "@md"
    6              0.000012   syn match rOTag contained "@noMd"
    6              0.000013   syn match rOTag contained "@noRd"
    6              0.000010   syn match rOTag contained "@note"
    6              0.000014   syn match rOTag contained "@param"
    6              0.000012   syn match rOTag contained "@rdname"
    6              0.000011   syn match rOTag contained "@rawRd"
    6              0.000013   syn match rOTag contained "@references"
    6              0.000012   syn match rOTag contained "@return"
    6              0.000023   syn match rOTag contained "@section"
    6              0.000017   syn match rOTag contained "@seealso"
    6              0.000013   syn match rOTag contained "@slot"
    6              0.000011   syn match rOTag contained "@source"
    6              0.000013   syn match rOTag contained "@template"
    6              0.000015   syn match rOTag contained "@templateVar"
    6              0.000011   syn match rOTag contained "@title"
    6              0.000011   syn match rOTag contained "@usage"
                              " namespace.R
    6              0.000013   syn match rOTag contained "@export"
    6              0.000013   syn match rOTag contained "@exportClass"
    6              0.000022   syn match rOTag contained "@exportMethod"
    6              0.000021   syn match rOTag contained "@exportPattern"
    6              0.000013   syn match rOTag contained "@import"
    6              0.000018   syn match rOTag contained "@importClassesFrom"
    6              0.000013   syn match rOTag contained "@importFrom"
    6              0.000016   syn match rOTag contained "@importMethodsFrom"
    6              0.000014   syn match rOTag contained "@rawNamespace"
    6              0.000013   syn match rOTag contained "@S3method"
    6              0.000025   syn match rOTag contained "@useDynLib"
                              " other
    6              0.000012   syn match rOTag contained "@eval"
    6              0.000015   syn match rOTag contained "@include"
    6              0.000014   syn match rOTag contained "@includeRmd"
    6              0.000013   syn match rOTag contained "@order"
    6              0.000005 endif
                            
                            
    6              0.000025 if &filetype == "rhelp"
                              " string enclosed in double quotes
                              syn region rString contains=rSpecial,@Spell start=/"/ skip=/\\\\\|\\"/ end=/"/
                              " string enclosed in single quotes
                              syn region rString contains=rSpecial,@Spell start=/'/ skip=/\\\\\|\\'/ end=/'/
    6              0.000006 else
                              " string enclosed in double quotes
    6              0.000043   syn region rString contains=rSpecial,rStrError,@Spell start=/"/ skip=/\\\\\|\\"/ end=/"/
                              " string enclosed in single quotes
    6              0.000044   syn region rString contains=rSpecial,rStrError,@Spell start=/'/ skip=/\\\\\|\\'/ end=/'/
    6              0.000004 endif
                            
    6              0.000014 syn match rStrError display contained "\\."
                            
                            
                            " New line, carriage return, tab, backspace, bell, feed, vertical tab, backslash
    6              0.000033 syn match rSpecial display contained "\\\(n\|r\|t\|b\|a\|f\|v\|'\|\"\)\|\\\\"
                            
                            " Hexadecimal and Octal digits
    6              0.000032 syn match rSpecial display contained "\\\(x\x\{1,2}\|[0-8]\{1,3}\)"
                            
                            " Unicode characters
    6              0.000017 syn match rSpecial display contained "\\u\x\{1,4}"
    6              0.000018 syn match rSpecial display contained "\\U\x\{1,8}"
    6              0.000018 syn match rSpecial display contained "\\u{\x\{1,4}}"
    6              0.000025 syn match rSpecial display contained "\\U{\x\{1,8}}"
                            
                            " Raw string
    6              0.000044 syn region rRawString matchgroup=rRawStrDelim start=/[rR]\z(['"]\)\z(-*\)(/ end=/)\z2\z1/ keepend
    6              0.000034 syn region rRawString matchgroup=rRawStrDelim start=/[rR]\z(['"]\)\z(-*\){/ end=/}\z2\z1/ keepend
    6              0.000034 syn region rRawString matchgroup=rRawStrDelim start=/[rR]\z(['"]\)\z(-*\)\[/ end=/\]\z2\z1/ keepend
                            
                            " Statement
    6              0.000017 syn keyword rStatement   break next return
    6              0.000012 syn keyword rConditional if else
    6              0.000016 syn keyword rRepeat      for in repeat while
                            
                            " Constant (not really)
    6              0.000019 syn keyword rConstant T F LETTERS letters month.abb month.name pi
    6              0.000010 syn keyword rConstant R.version.string
                            
    6              0.000016 syn keyword rNumber   NA_integer_ NA_real_ NA_complex_ NA_character_
                            
                            " Constants
    6              0.000010 syn keyword rConstant NULL
    6              0.000013 syn keyword rBoolean  FALSE TRUE
    6              0.000012 syn keyword rNumber   NA Inf NaN
                            
                            " integer
    6              0.000017 syn match rInteger "\<\d\+L"
    6              0.000033 syn match rInteger "\<0x\([0-9]\|[a-f]\|[A-F]\)\+L"
    6              0.000019 syn match rInteger "\<\d\+[Ee]+\=\d\+L"
                            
                            " number with no fractional part or exponent
    6              0.000015 syn match rNumber "\<\d\+\>"
                            " hexadecimal number
    6              0.000023 syn match rNumber "\<0x\([0-9]\|[a-f]\|[A-F]\)\+"
                            
                            " floating point number with integer and fractional parts and optional exponent
    6              0.000027 syn match rFloat "\<\d\+\.\d*\([Ee][-+]\=\d\+\)\="
                            " floating point number with no integer part and optional exponent
    6              0.000031 syn match rFloat "\<\.\d\+\([Ee][-+]\=\d\+\)\="
                            " floating point number with no fractional part and optional exponent
    6              0.000018 syn match rFloat "\<\d\+[Ee][-+]\=\d\+"
                            
                            " complex number
    6              0.000016 syn match rComplex "\<\d\+i"
    6              0.000017 syn match rComplex "\<\d\++\d\+i"
    6              0.000036 syn match rComplex "\<0x\([0-9]\|[a-f]\|[A-F]\)\+i"
    6              0.000022 syn match rComplex "\<\d\+\.\d*\([Ee][-+]\=\d\+\)\=i"
    6              0.000020 syn match rComplex "\<\.\d\+\([Ee][-+]\=\d\+\)\=i"
    6              0.000017 syn match rComplex "\<\d\+[Ee][-+]\=\d\+i"
                            
    6              0.000015 syn match rAssign    '='
    6              0.000013 syn match rOperator    "&"
    6              0.000013 syn match rOperator    '-'
    6              0.000014 syn match rOperator    '\*'
    6              0.000013 syn match rOperator    '+'
    6              0.000022 if &filetype == "quarto" || &filetype == "rmd" || &filetype == "rrst"
                              syn match rOperator    "[|!<>^~`/:]"
    6              0.000005 else
    6              0.000022   syn match rOperator    "[|!<>^~/:]"
    6              0.000004 endif
    6              0.000021 syn match rOperator    "%\{2}\|%\S\{-}%"
    6              0.000024 syn match rOperator '\([!><]\)\@<=='
    6              0.000017 syn match rOperator '=='
    6              0.000021 syn match rOperator '|>'
    6              0.000016 syn match rOpError  '\*\{3}'
    6              0.000013 syn match rOpError  '//'
    6              0.000016 syn match rOpError  '&&&'
    6              0.000011 syn match rOpError  '|||'
    6              0.000011 syn match rOpError  '<<'
    6              0.000011 syn match rOpError  '>>'
                            
    6              0.000018 syn match rAssign "<\{1,2}-"
    6              0.000015 syn match rAssign "->\{1,2}"
                            
                            " Special
    6              0.000019 syn match rDelimiter "[,;:]"
                            
                            " Error
    6              0.000021 if exists("g:r_syntax_folding")
                              syn region rRegion matchgroup=Delimiter start=/(/ matchgroup=Delimiter end=/)/ transparent contains=ALLBUT,rError,rBraceError,rCurlyError fold
                              syn region rRegion matchgroup=Delimiter start=/{/ matchgroup=Delimiter end=/}/ transparent contains=ALLBUT,rError,rBraceError,rParenError fold
                              syn region rRegion matchgroup=Delimiter start=/\[/ matchgroup=Delimiter end=/]/ transparent contains=ALLBUT,rError,rCurlyError,rParenError fold
                              syn region rSection matchgroup=Title start=/^#.*[-=#]\{4,}/ end=/^#.*[-=#]\{4,}/ms=s-2,me=s-1 transparent contains=ALL fold
    6              0.000007 else
    6              0.000039   syn region rRegion matchgroup=Delimiter start=/(/ matchgroup=Delimiter end=/)/ transparent contains=ALLBUT,rError,rBraceError,rCurlyError
    6              0.000039   syn region rRegion matchgroup=Delimiter start=/{/ matchgroup=Delimiter end=/}/ transparent contains=ALLBUT,rError,rBraceError,rParenError
    6              0.000026   syn region rRegion matchgroup=Delimiter start=/\[/ matchgroup=Delimiter end=/]/ transparent contains=ALLBUT,rError,rCurlyError,rParenError
    6              0.000003 endif
                            
    6              0.000017 syn match rError      "[)\]}]"
    6              0.000014 syn match rBraceError "[)}]" contained
    6              0.000016 syn match rCurlyError "[)\]]" contained
    6              0.000012 syn match rParenError "[\]}]" contained
                            
                            " Use Nvim-R to highlight functions dynamically if it is installed
    6              0.000021 if !exists("g:r_syntax_fun_pattern")
                              let s:ff = split(substitute(globpath(&rtp, "R/functions.vim"), "functions.vim", "", "g"), "\n")
                              if len(s:ff) > 0
                                let g:r_syntax_fun_pattern = 0
                              else
                                let g:r_syntax_fun_pattern = 1
                              endif
    6              0.000003 endif
                            
                            " Only use Nvim-R to highlight functions if they should not be highlighted
                            " according to a generic pattern
    6              0.000011 if g:r_syntax_fun_pattern == 1
    6              0.000032   syn match rFunction '[0-9a-zA-Z_\.]\+\s*\ze('
                            else
                              " Nvim-R:
                              runtime R/functions.vim
    6              0.000003 endif
                            
    6              0.000012 syn match rDollar display contained "\$"
    6              0.000009 syn match rDollar display contained "@"
                            
                            " List elements will not be highlighted as functions:
    6              0.000027 syn match rLstElmt "\$[a-zA-Z0-9\\._]*" contains=rDollar
    6              0.000029 syn match rLstElmt "@[a-zA-Z0-9\\._]*" contains=rDollar
                            
                            " Functions that may add new objects
    6              0.000024 syn keyword rPreProc     library require attach detach source
                            
    6              0.000011 if &filetype == "rhelp"
                              syn match rHelpIdent '\\method'
                              syn match rHelpIdent '\\S4method'
    6              0.000004 endif
                            
                            " Type
    6              0.000017 syn match rType "\\"
    6              0.000029 syn keyword rType array category character complex double function integer list logical matrix numeric vector data.frame
                            
                            " Name of object with spaces
    6              0.000016 if &filetype == "rmd" || &filetype == "rrst" || &filetype == "quarto"
                              syn region rNameWSpace start="`" end="`" contains=rSpaceFun containedin=rmdrChunk
    6              0.000005 else
    6              0.000022   syn region rNameWSpace start="`" end="`" contains=rSpaceFun
    6              0.000004 endif
                            
    6              0.000007 if &filetype == "rhelp"
                              syn match rhPreProc "^#ifdef.*"
                              syn match rhPreProc "^#endif.*"
                              syn match rhSection "\\dontrun\>"
    6              0.000004 endif
                            
    6              0.000026 if exists("r_syntax_minlines")
                              exe "syn sync minlines=" . r_syntax_minlines
    6              0.000003 else
    6              0.000012   syn sync minlines=40
    6              0.000003 endif
                            
                            " Define the default highlighting.
    6              0.000010 hi def link rAssign      Statement
    6              0.000008 hi def link rBoolean     Boolean
    6              0.000007 hi def link rBraceError  Error
    6              0.000006 hi def link rComment     Comment
    6              0.000006 hi def link rTodoParen   Comment
    6              0.000006 hi def link rTodoInfo    SpecialComment
    6              0.000006 hi def link rCommentTodo Todo
    6              0.000005 hi def link rTodoKeyw    Todo
    6              0.000007 hi def link rComplex     Number
    6              0.000006 hi def link rConditional Conditional
    6              0.000009 hi def link rConstant    Constant
    6              0.000006 hi def link rCurlyError  Error
    6              0.000006 hi def link rDelimiter   Delimiter
    6              0.000006 hi def link rDollar      SpecialChar
    6              0.000006 hi def link rError       Error
    6              0.000006 hi def link rFloat       Float
    6              0.000006 hi def link rFunction    Function
    6              0.000005 hi def link rSpaceFun    Function
    6              0.000006 hi def link rHelpIdent   Identifier
    6              0.000006 hi def link rhPreProc    PreProc
    6              0.000006 hi def link rhSection    PreCondit
    6              0.000006 hi def link rInteger     Number
    6              0.000006 hi def link rLstElmt     Normal
    6              0.000006 hi def link rNameWSpace  Normal
    6              0.000005 hi def link rNumber      Number
    6              0.000006 hi def link rOperator    Operator
    6              0.000005 hi def link rOpError     Error
    6              0.000005 hi def link rParenError  Error
    6              0.000005 hi def link rPreProc     PreProc
    6              0.000006 hi def link rRawString   String
    6              0.000006 hi def link rRawStrDelim Delimiter
    6              0.000006 hi def link rRepeat      Repeat
    6              0.000006 hi def link rSpecial     SpecialChar
    6              0.000005 hi def link rStatement   Statement
    6              0.000006 hi def link rString      String
    6              0.000006 hi def link rStrError    Error
    6              0.000005 hi def link rType        Type
    6              0.000012 if g:r_syntax_hl_roxygen
    6              0.000006   hi def link rOTitleTag   Operator
    6              0.000010   hi def link rOTag        Operator
    6              0.000006   hi def link rOTitleBlock Title
    6              0.000006   hi def link rOBlock         Comment
    6              0.000007   hi def link rOBlockNoTitle  Comment
    6              0.000006   hi def link rOR6Block         Comment
    6              0.000006   hi def link rOTitle      Title
    6              0.000006   hi def link rOCommentKey Comment
    6              0.000006   hi def link rOExamples   SpecialComment
    6              0.000005 endif
                            
    6              0.000013 let b:current_syntax="r"
                            
                            " vim: ts=8 sw=2

SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax\lsp_markdown.vim
Sourced 3 times
Total time:   0.219697
 Self time:   0.001463

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     Markdown-like LSP docstrings
                            " Maintainer:   https://github.com/neovim/neovim
                            " URL:          http://neovim.io
                            " Remark:       Uses markdown syntax file
                            
                            " Source the default Nvim markdown syntax, not other random ones.
    3   0.219318   0.001084 execute 'source' expand('<sfile>:p:h') .. '/markdown.vim'
                            
    3              0.000015 syn cluster mkdNonListItem add=mkdEscape,mkdNbsp
                            
                            " Don't highlight invalid markdown syntax in LSP docstrings.
    3              0.000004 syn clear markdownError
                            
    3              0.000004 syn clear markdownEscape
    3              0.000037 syntax region markdownEscape matchgroup=markdownEscape start=/\\\ze[\\\x60*{}\[\]()#+\-,.!_>~|"$%&'\/:;<=?@^ ]/ end=/./ containedin=ALL keepend oneline concealends
                            
                            " Conceal backticks (which delimit code fragments).
                            " We ignore g:markdown_syntax_conceal here.
    3              0.000020 syn region markdownCode matchgroup=markdownCodeDelimiter start="`" end="`" keepend contains=markdownLineStart concealends
    3              0.000021 syn region markdownCode matchgroup=markdownCodeDelimiter start="`` \=" end=" \=``" keepend contains=markdownLineStart concealends
    3              0.000029 syn region markdownCode matchgroup=markdownCodeDelimiter start="^\s*````*.*$" end="^\s*````*\ze\s*$" keepend concealends
                            
                            " Highlight code fragments.
    3              0.000004 hi def link markdownCode Special
                            
                            " Conceal HTML entities.
    3              0.000018 syntax match mkdNbsp /&nbsp;/ conceal cchar= 
    3              0.000012 syntax match mkdLt /&lt;/  conceal cchar=<
    3              0.000017 syntax match mkdGt /&gt;/  conceal cchar=>
    3              0.000012 syntax match mkdAmp /&amp;/  conceal cchar=&
    3              0.000011 syntax match mkdQuot /&quot;/  conceal cchar="
                            
    3              0.000023 hi def link mkdEscape Special

SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax/markdown.vim
Sourced 3 times
Total time:   0.218230
 Self time:   0.023829

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:     Markdown
                            " Maintainer:   Tim Pope <https://github.com/tpope/vim-markdown>
                            " Filenames:    *.markdown
                            " Last Change:  2022 Oct 13
                            
    3              0.000017 if exists("b:current_syntax")
                              finish
    3              0.000002 endif
                            
    3              0.000006 if !exists('main_syntax')
    3              0.000005   let main_syntax = 'markdown'
    3              0.000001 endif
                            
    3              0.000013 if has('folding')
    3              0.000007   let s:foldmethod = &l:foldmethod
    3              0.000004   let s:foldtext = &l:foldtext
    3              0.000001 endif
    3              0.000004 let s:iskeyword = &l:iskeyword
                            
    3   0.085258   0.003101 runtime! syntax/html.vim
    3              0.000013 unlet! b:current_syntax
                            
    3              0.000021 if !exists('g:markdown_fenced_languages')
                              let g:markdown_fenced_languages = []
    3              0.000004 endif
    3              0.000015 let s:done_include = {}
   15              0.000166 for s:type in map(copy(g:markdown_fenced_languages),'matchstr(v:val,"[^=]*$")')
   12              0.000086   if has_key(s:done_include, matchstr(s:type,'[^.]*'))
                                continue
   12              0.000008   endif
   12              0.000054   if s:type =~ '\.'
                                let b:{matchstr(s:type,'[^.]*')}_subtype = matchstr(s:type,'\.\zs.*')
   12              0.000006   endif
   12              0.000025   syn case match
   12   0.122539   0.013982   exe 'syn include @markdownHighlight_'.tr(s:type,'.','_').' syntax/'.matchstr(s:type,'[^.]*').'.vim'
   12              0.000029   unlet! b:current_syntax
   12              0.000128   let s:done_include[matchstr(s:type,'[^.]*')] = 1
   15              0.000016 endfor
    3              0.000005 unlet! s:type
    3              0.000006 unlet! s:done_include
                            
    3              0.000007 syn spell toplevel
    3              0.000015 if exists('s:foldmethod') && s:foldmethod !=# &l:foldmethod
                              let &l:foldmethod = s:foldmethod
                              unlet s:foldmethod
    3              0.000003 endif
    3              0.000010 if exists('s:foldtext') && s:foldtext !=# &l:foldtext
                              let &l:foldtext = s:foldtext
                              unlet s:foldtext
    3              0.000002 endif
    3              0.000006 if s:iskeyword !=# &l:iskeyword
                              let &l:iskeyword = s:iskeyword
    3              0.000002 endif
    3              0.000004 unlet s:iskeyword
                            
    3              0.000007 if !exists('g:markdown_minlines')
    1              0.000002   let g:markdown_minlines = 50
    3              0.000002 endif
    3              0.000014 execute 'syn sync minlines=' . g:markdown_minlines
    3              0.000004 syn sync linebreaks=1
    3              0.000005 syn case ignore
                            
    3              0.000019 syn match markdownValid '[<>]\c[a-z/$!]\@!' transparent contains=NONE
    3              0.000013 syn match markdownValid '&\%(#\=\w*;\)\@!' transparent contains=NONE
                            
    3              0.000019 syn match markdownLineStart "^[<@]\@!" nextgroup=@markdownBlock,htmlSpecialChar
                            
    3              0.000025 syn cluster markdownBlock contains=markdownH1,markdownH2,markdownH3,markdownH4,markdownH5,markdownH6,markdownBlockquote,markdownListMarker,markdownOrderedListMarker,markdownCodeBlock,markdownRule
    3              0.000022 syn cluster markdownInline contains=markdownLineBreak,markdownLinkText,markdownItalic,markdownBold,markdownCode,markdownEscape,@htmlTop,markdownError,markdownValid
                            
    3              0.000015 syn match markdownH1 "^.\+\n=\+$" contained contains=@markdownInline,markdownHeadingRule,markdownAutomaticLink
    3              0.000019 syn match markdownH2 "^.\+\n-\+$" contained contains=@markdownInline,markdownHeadingRule,markdownAutomaticLink
                            
    3              0.000008 syn match markdownHeadingRule "^[=-]\+$" contained
                            
    3              0.000026 syn region markdownH1 matchgroup=markdownH1Delimiter start=" \{,3}#\s"      end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    3              0.000019 syn region markdownH2 matchgroup=markdownH2Delimiter start=" \{,3}##\s"     end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    3              0.000025 syn region markdownH3 matchgroup=markdownH3Delimiter start=" \{,3}###\s"    end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    3              0.000018 syn region markdownH4 matchgroup=markdownH4Delimiter start=" \{,3}####\s"   end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    3              0.000019 syn region markdownH5 matchgroup=markdownH5Delimiter start=" \{,3}#####\s"  end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
    3              0.000020 syn region markdownH6 matchgroup=markdownH6Delimiter start=" \{,3}######\s" end="#*\s*$" keepend oneline contains=@markdownInline,markdownAutomaticLink contained
                            
    3              0.000011 syn match markdownBlockquote ">\%(\s\|$\)" contained nextgroup=@markdownBlock
                            
    3              0.000021 syn region markdownCodeBlock start="^\n\( \{4,}\|\t\)" end="^\ze \{,3}\S.*$" keepend
                            
                            " TODO: real nesting
    3              0.000015 syn match markdownListMarker "\%(\t\| \{0,4\}\)[-*+]\%(\s\+\S\)\@=" contained
    3              0.000013 syn match markdownOrderedListMarker "\%(\t\| \{0,4}\)\<\d\+\.\%(\s\+\S\)\@=" contained
                            
    3              0.000008 syn match markdownRule "\* *\* *\*[ *]*$" contained
    3              0.000007 syn match markdownRule "- *- *-[ -]*$" contained
                            
    3              0.000009 syn match markdownLineBreak " \{2,\}$"
                            
    3              0.000027 syn region markdownIdDeclaration matchgroup=markdownLinkDelimiter start="^ \{0,3\}!\=\[" end="\]:" oneline keepend nextgroup=markdownUrl skipwhite
    3              0.000010 syn match markdownUrl "\S\+" nextgroup=markdownUrlTitle skipwhite contained
    3              0.000014 syn region markdownUrl matchgroup=markdownUrlDelimiter start="<" end=">" oneline keepend nextgroup=markdownUrlTitle skipwhite contained
    3              0.000012 syn region markdownUrlTitle matchgroup=markdownUrlTitleDelimiter start=+"+ end=+"+ keepend contained
    3              0.000010 syn region markdownUrlTitle matchgroup=markdownUrlTitleDelimiter start=+'+ end=+'+ keepend contained
    3              0.000010 syn region markdownUrlTitle matchgroup=markdownUrlTitleDelimiter start=+(+ end=+)+ keepend contained
                            
    3              0.000077 syn region markdownLinkText matchgroup=markdownLinkTextDelimiter start="!\=\[\%(\_[^][]*\%(\[\_[^][]*\]\_[^][]*\)*]\%( \=[[(]\)\)\@=" end="\]\%( \=[[(]\)\@=" nextgroup=markdownLink,markdownId skipwhite contains=@markdownInline,markdownLineStart
    3              0.000017 syn region markdownLink matchgroup=markdownLinkDelimiter start="(" end=")" contains=markdownUrl keepend contained
    3              0.000011 syn region markdownId matchgroup=markdownIdDelimiter start="\[" end="\]" keepend contained
    3              0.000021 syn region markdownAutomaticLink matchgroup=markdownUrlDelimiter start="<\%(\w\+:\|[[:alnum:]_+-]\+@\)\@=" end=">" keepend oneline
                            
    3              0.000008 let s:concealends = ''
    3              0.000024 if has('conceal') && get(g:, 'markdown_syntax_conceal', 1) == 1
    3              0.000004   let s:concealends = ' concealends'
    3              0.000004 endif
    3              0.000039 exe 'syn region markdownItalic matchgroup=markdownItalicDelimiter start="\*\S\@=" end="\S\@<=\*\|^$" skip="\\\*" contains=markdownLineStart,@Spell' . s:concealends
    3              0.000040 exe 'syn region markdownItalic matchgroup=markdownItalicDelimiter start="\w\@<!_\S\@=" end="\S\@<=_\w\@!\|^$" skip="\\_" contains=markdownLineStart,@Spell' . s:concealends
    3              0.000057 exe 'syn region markdownBold matchgroup=markdownBoldDelimiter start="\*\*\S\@=" end="\S\@<=\*\*\|^$" skip="\\\*" contains=markdownLineStart,markdownItalic,@Spell' . s:concealends
    3              0.000047 exe 'syn region markdownBold matchgroup=markdownBoldDelimiter start="\w\@<!__\S\@=" end="\S\@<=__\w\@!\|^$" skip="\\_" contains=markdownLineStart,markdownItalic,@Spell' . s:concealends
    3              0.000038 exe 'syn region markdownBoldItalic matchgroup=markdownBoldItalicDelimiter start="\*\*\*\S\@=" end="\S\@<=\*\*\*\|^$" skip="\\\*" contains=markdownLineStart,@Spell' . s:concealends
    3              0.000039 exe 'syn region markdownBoldItalic matchgroup=markdownBoldItalicDelimiter start="\w\@<!___\S\@=" end="\S\@<=___\w\@!\|^$" skip="\\_" contains=markdownLineStart,@Spell' . s:concealends
    3              0.000034 exe 'syn region markdownStrike matchgroup=markdownStrikeDelimiter start="\~\~\S\@=" end="\S\@<=\~\~\|^$" contains=markdownLineStart,@Spell' . s:concealends
                            
    3              0.000016 syn region markdownCode matchgroup=markdownCodeDelimiter start="`" end="`" keepend contains=markdownLineStart
    3              0.000025 syn region markdownCode matchgroup=markdownCodeDelimiter start="`` \=" end=" \=``" keepend contains=markdownLineStart
    3              0.000032 syn region markdownCodeBlock matchgroup=markdownCodeDelimiter start="^\s*\z(`\{3,\}\).*$" end="^\s*\z1\ze\s*$" keepend
    3              0.000029 syn region markdownCodeBlock matchgroup=markdownCodeDelimiter start="^\s*\z(\~\{3,\}\).*$" end="^\s*\z1\ze\s*$" keepend
                            
    3              0.000015 syn match markdownFootnote "\[^[^\]]\+\]"
    3              0.000010 syn match markdownFootnoteDefinition "^\[^[^\]]\+\]:"
                            
    3              0.000009 let s:done_include = {}
   15              0.000022 for s:type in g:markdown_fenced_languages
   12              0.000063   if has_key(s:done_include, matchstr(s:type,'[^.]*'))
                                continue
   12              0.000010   endif
   12              0.000423   exe 'syn region markdownHighlight_'.substitute(matchstr(s:type,'[^=]*$'),'\..*','','').' matchgroup=markdownCodeDelimiter start="^\s*\z(`\{3,\}\)\s*\%({.\{-}\.\)\='.matchstr(s:type,'[^=]*').'}\=\S\@!.*$" end="^\s*\z1\ze\s*$" keepend contains=@markdownHighlight_'.tr(matchstr(s:type,'[^=]*$'),'.','_') . s:concealends
   12              0.000331   exe 'syn region markdownHighlight_'.substitute(matchstr(s:type,'[^=]*$'),'\..*','','').' matchgroup=markdownCodeDelimiter start="^\s*\z(\~\{3,\}\)\s*\%({.\{-}\.\)\='.matchstr(s:type,'[^=]*').'}\=\S\@!.*$" end="^\s*\z1\ze\s*$" keepend contains=@markdownHighlight_'.tr(matchstr(s:type,'[^=]*$'),'.','_') . s:concealends
   12              0.000064   let s:done_include[matchstr(s:type,'[^.]*')] = 1
   15              0.000010 endfor
    3              0.000005 unlet! s:type
    3              0.000005 unlet! s:done_include
                            
    3              0.000038 if get(b:, 'markdown_yaml_head', get(g:, 'markdown_yaml_head', main_syntax ==# 'markdown'))
    3   0.007005   0.003318   syn include @markdownYamlTop syntax/yaml.vim
    3              0.000012   unlet! b:current_syntax
    3              0.000044   syn region markdownYamlHead start="\%^---$" end="^\%(---\|\.\.\.\)\s*$" keepend contains=@markdownYamlTop,@Spell
    3              0.000003 endif
                            
    3              0.000020 syn match markdownEscape "\\[][\\`*_{}()<>#+.!-]"
    3              0.000013 syn match markdownError "\w\@<=_\w\@="
                            
    3              0.000006 hi def link markdownH1                    htmlH1
    3              0.000005 hi def link markdownH2                    htmlH2
    3              0.000004 hi def link markdownH3                    htmlH3
    3              0.000011 hi def link markdownH4                    htmlH4
    3              0.000004 hi def link markdownH5                    htmlH5
    3              0.000004 hi def link markdownH6                    htmlH6
    3              0.000006 hi def link markdownHeadingRule           markdownRule
    3              0.000006 hi def link markdownH1Delimiter           markdownHeadingDelimiter
    3              0.000005 hi def link markdownH2Delimiter           markdownHeadingDelimiter
    3              0.000005 hi def link markdownH3Delimiter           markdownHeadingDelimiter
    3              0.000005 hi def link markdownH4Delimiter           markdownHeadingDelimiter
    3              0.000005 hi def link markdownH5Delimiter           markdownHeadingDelimiter
    3              0.000005 hi def link markdownH6Delimiter           markdownHeadingDelimiter
    3              0.000005 hi def link markdownHeadingDelimiter      Delimiter
    3              0.000007 hi def link markdownOrderedListMarker     markdownListMarker
    3              0.000005 hi def link markdownListMarker            htmlTagName
    3              0.000004 hi def link markdownBlockquote            Comment
    3              0.000004 hi def link markdownRule                  PreProc
                            
    3              0.000005 hi def link markdownFootnote              Typedef
    3              0.000004 hi def link markdownFootnoteDefinition    Typedef
                            
    3              0.000005 hi def link markdownLinkText              htmlLink
    3              0.000005 hi def link markdownIdDeclaration         Typedef
    3              0.000004 hi def link markdownId                    Type
    3              0.000005 hi def link markdownAutomaticLink         markdownUrl
    3              0.000004 hi def link markdownUrl                   Float
    3              0.000004 hi def link markdownUrlTitle              String
    3              0.000005 hi def link markdownIdDelimiter           markdownLinkDelimiter
    3              0.000004 hi def link markdownUrlDelimiter          htmlTag
    3              0.000004 hi def link markdownUrlTitleDelimiter     Delimiter
                            
    3              0.000005 hi def link markdownItalic                htmlItalic
    3              0.000005 hi def link markdownItalicDelimiter       markdownItalic
    3              0.000004 hi def link markdownBold                  htmlBold
    3              0.000005 hi def link markdownBoldDelimiter         markdownBold
    3              0.000005 hi def link markdownBoldItalic            htmlBoldItalic
    3              0.000005 hi def link markdownBoldItalicDelimiter   markdownBoldItalic
    3              0.000005 hi def link markdownStrike                htmlStrike
    3              0.000005 hi def link markdownStrikeDelimiter       markdownStrike
    3              0.000004 hi def link markdownCodeDelimiter         Delimiter
                            
    3              0.000004 hi def link markdownEscape                Special
    3              0.000003 hi def link markdownError                 Error
                            
    3              0.000010 let b:current_syntax = "markdown"
    3              0.000008 if main_syntax ==# 'markdown'
    3              0.000005   unlet main_syntax
    3              0.000002 endif
                            
                            " vim:set sw=2:

SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax\python.vim
Sourced 3 times
Total time:   0.002629
 Self time:   0.002598

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:	Python
                            " Maintainer:	Zvezdan Petkovic <zpetkovic@acm.org>
                            " Last Change:	2023 Feb 28
                            " Credits:	Neil Schemenauer <nas@python.ca>
                            "		Dmitry Vasiliev
                            "
                            "		This version is a major rewrite by Zvezdan Petkovic.
                            "
                            "		- introduced highlighting of doctests
                            "		- updated keywords, built-ins, and exceptions
                            "		- corrected regular expressions for
                            "
                            "		  * functions
                            "		  * decorators
                            "		  * strings
                            "		  * escapes
                            "		  * numbers
                            "		  * space error
                            "
                            "		- corrected synchronization
                            "		- more highlighting is ON by default, except
                            "		- space error highlighting is OFF by default
                            "
                            " Optional highlighting can be controlled using these variables.
                            "
                            "   let python_no_builtin_highlight = 1
                            "   let python_no_doctest_code_highlight = 1
                            "   let python_no_doctest_highlight = 1
                            "   let python_no_exception_highlight = 1
                            "   let python_no_number_highlight = 1
                            "   let python_space_error_highlight = 1
                            "
                            " All the options above can be switched on together.
                            "
                            "   let python_highlight_all = 1
                            "
                            " The use of Python 2 compatible syntax highlighting can be enforced.
                            " The straddling code (Python 2 and 3 compatible), up to Python 3.5,
                            " will be also supported.
                            "
                            "   let python_use_python2_syntax = 1
                            "
                            " This option will exclude all modern Python 3.6 or higher features.
                            "
                            
                            " quit when a syntax file was already loaded.
    3              0.000015 if exists("b:current_syntax")
                              finish
    3              0.000002 endif
                            
                            " Use of Python 2 and 3.5 or lower requested.
    3              0.000023 if exists("python_use_python2_syntax")
                              runtime! syntax/python2.vim
                              finish
    3              0.000002 endif
                            
                            " We need nocompatible mode in order to continue lines with backslashes.
                            " Original setting will be restored.
    3              0.000010 let s:cpo_save = &cpo
    3   0.000039   0.000022 set cpo&vim
                            
    3              0.000008 if exists("python_no_doctest_highlight")
                              let python_no_doctest_code_highlight = 1
    3              0.000002 endif
                            
    3              0.000007 if exists("python_highlight_all")
                              if exists("python_no_builtin_highlight")
                                unlet python_no_builtin_highlight
                              endif
                              if exists("python_no_doctest_code_highlight")
                                unlet python_no_doctest_code_highlight
                              endif
                              if exists("python_no_doctest_highlight")
                                unlet python_no_doctest_highlight
                              endif
                              if exists("python_no_exception_highlight")
                                unlet python_no_exception_highlight
                              endif
                              if exists("python_no_number_highlight")
                                unlet python_no_number_highlight
                              endif
                              let python_space_error_highlight = 1
    3              0.000002 endif
                            
                            " Keep Python keywords in alphabetical order inside groups for easy
                            " comparison with the table in the 'Python Language Reference'
                            " https://docs.python.org/reference/lexical_analysis.html#keywords.
                            " Groups are in the order presented in NAMING CONVENTIONS in syntax.txt.
                            " Exceptions come last at the end of each group (class and def below).
                            "
                            " The list can be checked using:
                            "
                            " python3 -c 'import keyword, pprint; pprint.pprint(keyword.kwlist + keyword.softkwlist, compact=True)'
                            "
    3              0.000015 syn keyword pythonStatement	False None True
    3              0.000012 syn keyword pythonStatement	as assert break continue del global
    3              0.000009 syn keyword pythonStatement	lambda nonlocal pass return with yield
    3              0.000011 syn keyword pythonStatement	class def nextgroup=pythonFunction skipwhite
    3              0.000007 syn keyword pythonConditional	elif else if
    3              0.000007 syn keyword pythonRepeat	for while
    3              0.000012 syn keyword pythonOperator	and in is not or
    3              0.000008 syn keyword pythonException	except finally raise try
    3              0.000006 syn keyword pythonInclude	from import
    3              0.000005 syn keyword pythonAsync		async await
                            
                            " Soft keywords
                            " These keywords do not mean anything unless used in the right context.
                            " See https://docs.python.org/3/reference/lexical_analysis.html#soft-keywords
                            " for more on this.
    3              0.000024 syn match   pythonConditional   "^\s*\zscase\%(\s\+.*:.*$\)\@="
    3              0.000018 syn match   pythonConditional   "^\s*\zsmatch\%(\s\+.*:\s*\%(#.*\)\=$\)\@="
                            
                            " Decorators
                            " A dot must be allowed because of @MyClass.myfunc decorators.
    3              0.000009 syn match   pythonDecorator	"@" display contained
    3              0.000018 syn match   pythonDecoratorName	"@\s*\h\%(\w\|\.\)*" display contains=pythonDecorator
                            
                            " Python 3.5 introduced the use of the same symbol for matrix multiplication:
                            " https://www.python.org/dev/peps/pep-0465/.  We now have to exclude the
                            " symbol from highlighting when used in that context.
                            " Single line multiplication.
    3              0.000028 syn match   pythonMatrixMultiply
                                  \ "\%(\w\|[])]\)\s*@"
                                  \ contains=ALLBUT,pythonDecoratorName,pythonDecorator,pythonFunction,pythonDoctestValue
                                  \ transparent
                            " Multiplication continued on the next line after backslash.
    3              0.000048 syn match   pythonMatrixMultiply
                                  \ "[^\\]\\\s*\n\%(\s*\.\.\.\s\)\=\s\+@"
                                  \ contains=ALLBUT,pythonDecoratorName,pythonDecorator,pythonFunction,pythonDoctestValue
                                  \ transparent
                            " Multiplication in a parenthesized expression over multiple lines with @ at
                            " the start of each continued line; very similar to decorators and complex.
    3              0.000067 syn match   pythonMatrixMultiply
                                  \ "^\s*\%(\%(>>>\|\.\.\.\)\s\+\)\=\zs\%(\h\|\%(\h\|[[(]\).\{-}\%(\w\|[])]\)\)\s*\n\%(\s*\.\.\.\s\)\=\s\+@\%(.\{-}\n\%(\s*\.\.\.\s\)\=\s\+@\)*"
                                  \ contains=ALLBUT,pythonDecoratorName,pythonDecorator,pythonFunction,pythonDoctestValue
                                  \ transparent
                            
    3              0.000008 syn match   pythonFunction	"\h\w*" display contained
                            
    3              0.000016 syn match   pythonComment	"#.*$" contains=pythonTodo,@Spell
    3              0.000009 syn keyword pythonTodo		FIXME NOTE NOTES TODO XXX contained
                            
                            " Triple-quoted strings can contain doctests.
    3              0.000061 syn region  pythonString matchgroup=pythonQuotes
                                  \ start=+[uU]\=\z(['"]\)+ end="\z1" skip="\\\\\|\\\z1"
                                  \ contains=pythonEscape,@Spell
    3              0.000036 syn region  pythonString matchgroup=pythonTripleQuotes
                                  \ start=+[uU]\=\z('''\|"""\)+ skip=+\\["']+ end="\z1" keepend
                                  \ contains=pythonEscape,pythonSpaceError,pythonDoctest,@Spell
    3              0.000032 syn region  pythonRawString matchgroup=pythonQuotes
                                  \ start=+[uU]\=[rR]\z(['"]\)+ end="\z1" skip="\\\\\|\\\z1"
                                  \ contains=@Spell
    3              0.000038 syn region  pythonRawString matchgroup=pythonTripleQuotes
                                  \ start=+[uU]\=[rR]\z('''\|"""\)+ end="\z1" keepend
                                  \ contains=pythonSpaceError,pythonDoctest,@Spell
                            
    3              0.000012 syn match   pythonEscape	+\\[abfnrtv'"\\]+ contained
    3              0.000017 syn match   pythonEscape	"\\\o\{1,3}" contained
    3              0.000009 syn match   pythonEscape	"\\x\x\{2}" contained
    3              0.000023 syn match   pythonEscape	"\%(\\u\x\{4}\|\\U\x\{8}\)" contained
                            " Python allows case-insensitive Unicode IDs: http://www.unicode.org/charts/
    3              0.000029 syn match   pythonEscape	"\\N{\a\+\%(\s\a\+\)*}" contained
    3              0.000007 syn match   pythonEscape	"\\$"
                            
                            " It is very important to understand all details before changing the
                            " regular expressions below or their order.
                            " The word boundaries are *not* the floating-point number boundaries
                            " because of a possible leading or trailing decimal point.
                            " The expressions below ensure that all valid number literals are
                            " highlighted, and invalid number literals are not.  For example,
                            "
                            " - a decimal point in '4.' at the end of a line is highlighted,
                            " - a second dot in 1.0.0 is not highlighted,
                            " - 08 is not highlighted,
                            " - 08e0 or 08j are highlighted,
                            "
                            " and so on, as specified in the 'Python Language Reference'.
                            " https://docs.python.org/reference/lexical_analysis.html#numeric-literals
    3              0.000012 if !exists("python_no_number_highlight")
                              " numbers (including complex)
    3              0.000021   syn match   pythonNumber	"\<0[oO]\%(_\=\o\)\+\>"
    3              0.000011   syn match   pythonNumber	"\<0[xX]\%(_\=\x\)\+\>"
    3              0.000014   syn match   pythonNumber	"\<0[bB]\%(_\=[01]\)\+\>"
    3              0.000014   syn match   pythonNumber	"\<\%([1-9]\%(_\=\d\)*\|0\+\%(_\=0\)*\)\>"
    3              0.000011   syn match   pythonNumber	"\<\d\%(_\=\d\)*[jJ]\>"
    3              0.000086   syn match   pythonNumber	"\<\d\%(_\=\d\)*[eE][+-]\=\d\%(_\=\d\)*[jJ]\=\>"
    3              0.000038   syn match   pythonNumber
                                    \ "\<\d\%(_\=\d\)*\.\%([eE][+-]\=\d\%(_\=\d\)*\)\=[jJ]\=\%(\W\|$\)\@="
    3              0.000025   syn match   pythonNumber
                                    \ "\%(^\|\W\)\zs\%(\d\%(_\=\d\)*\)\=\.\d\%(_\=\d\)*\%([eE][+-]\=\d\%(_\=\d\)*\)\=[jJ]\=\>"
    3              0.000003 endif
                            
                            " Group the built-ins in the order in the 'Python Library Reference' for
                            " easier comparison.
                            " https://docs.python.org/library/constants.html
                            " http://docs.python.org/library/functions.html
                            " Python built-in functions are in alphabetical order.
                            "
                            " The list can be checked using:
                            "
                            " python3 -c 'import builtins, pprint; pprint.pprint(dir(builtins), compact=True)'
                            "
                            " The constants added by the `site` module are not listed below because they
                            " should not be used in programs, only in interactive interpreter.
                            " Similarly for some other attributes and functions `__`-enclosed from the
                            " output of the above command.
                            "
    3              0.000010 if !exists("python_no_builtin_highlight")
                              " built-in constants
                              " 'False', 'True', and 'None' are also reserved words in Python 3
    3              0.000010   syn keyword pythonBuiltin	False True None
    3              0.000009   syn keyword pythonBuiltin	NotImplemented Ellipsis __debug__
                              " constants added by the `site` module
    3              0.000008   syn keyword pythonBuiltin	quit exit copyright credits license
                              " built-in functions
    3              0.000012   syn keyword pythonBuiltin	abs all any ascii bin bool breakpoint bytearray
    3              0.000010   syn keyword pythonBuiltin	bytes callable chr classmethod compile complex
    3              0.000025   syn keyword pythonBuiltin	delattr dict dir divmod enumerate eval exec
    3              0.000010   syn keyword pythonBuiltin	filter float format frozenset getattr globals
    3              0.000010   syn keyword pythonBuiltin	hasattr hash help hex id input int isinstance
    3              0.000008   syn keyword pythonBuiltin	issubclass iter len list locals map max
    3              0.000017   syn keyword pythonBuiltin	memoryview min next object oct open ord pow
    3              0.000010   syn keyword pythonBuiltin	print property range repr reversed round set
    3              0.000010   syn keyword pythonBuiltin	setattr slice sorted staticmethod str sum super
    3              0.000008   syn keyword pythonBuiltin	tuple type vars zip __import__
                              " avoid highlighting attributes as builtins
    3              0.000022   syn match   pythonAttribute	/\.\h\w*/hs=s+1
                            	\ contains=ALLBUT,pythonBuiltin,pythonFunction,pythonAsync
                            	\ transparent
    3              0.000002 endif
                            
                            " From the 'Python Library Reference' class hierarchy at the bottom.
                            " http://docs.python.org/library/exceptions.html
    3              0.000009 if !exists("python_no_exception_highlight")
                              " builtin base exceptions (used mostly as base classes for other exceptions)
    3              0.000008   syn keyword pythonExceptions	BaseException Exception
    3              0.000007   syn keyword pythonExceptions	ArithmeticError BufferError LookupError
                              " builtin exceptions (actually raised)
    3              0.000008   syn keyword pythonExceptions	AssertionError AttributeError EOFError
    3              0.000008   syn keyword pythonExceptions	FloatingPointError GeneratorExit ImportError
    3              0.000008   syn keyword pythonExceptions	IndentationError IndexError KeyError
    3              0.000009   syn keyword pythonExceptions	KeyboardInterrupt MemoryError
    3              0.000007   syn keyword pythonExceptions	ModuleNotFoundError NameError
    3              0.000008   syn keyword pythonExceptions	NotImplementedError OSError OverflowError
    3              0.000007   syn keyword pythonExceptions	RecursionError ReferenceError RuntimeError
    3              0.000016   syn keyword pythonExceptions	StopAsyncIteration StopIteration SyntaxError
    3              0.000009   syn keyword pythonExceptions	SystemError SystemExit TabError TypeError
    3              0.000007   syn keyword pythonExceptions	UnboundLocalError UnicodeDecodeError
    3              0.000010   syn keyword pythonExceptions	UnicodeEncodeError UnicodeError
    3              0.000022   syn keyword pythonExceptions	UnicodeTranslateError ValueError
    3              0.000008   syn keyword pythonExceptions	ZeroDivisionError
                              " builtin exception aliases for OSError
    3              0.000007   syn keyword pythonExceptions	EnvironmentError IOError WindowsError
                              " builtin OS exceptions in Python 3
    3              0.000006   syn keyword pythonExceptions	BlockingIOError BrokenPipeError
    3              0.000007   syn keyword pythonExceptions	ChildProcessError ConnectionAbortedError
    3              0.000007   syn keyword pythonExceptions	ConnectionError ConnectionRefusedError
    3              0.000007   syn keyword pythonExceptions	ConnectionResetError FileExistsError
    3              0.000011   syn keyword pythonExceptions	FileNotFoundError InterruptedError
    3              0.000007   syn keyword pythonExceptions	IsADirectoryError NotADirectoryError
    3              0.000006   syn keyword pythonExceptions	PermissionError ProcessLookupError TimeoutError
                              " builtin warnings
    3              0.000007   syn keyword pythonExceptions	BytesWarning DeprecationWarning FutureWarning
    3              0.000007   syn keyword pythonExceptions	ImportWarning PendingDeprecationWarning
    3              0.000006   syn keyword pythonExceptions	ResourceWarning RuntimeWarning
    3              0.000006   syn keyword pythonExceptions	SyntaxWarning UnicodeWarning
    3              0.000010   syn keyword pythonExceptions	UserWarning Warning
    3              0.000002 endif
                            
    3              0.000009 if exists("python_space_error_highlight")
                              " trailing whitespace
                              syn match   pythonSpaceError	display excludenl "\s\+$"
                              " mixed tabs and spaces
                              syn match   pythonSpaceError	display " \+\t"
                              syn match   pythonSpaceError	display "\t\+ "
    3              0.000003 endif
                            
                            " Do not spell doctests inside strings.
                            " Notice that the end of a string, either ''', or """, will end the contained
                            " doctest too.  Thus, we do *not* need to have it as an end pattern.
    3              0.000010 if !exists("python_no_doctest_highlight")
    3              0.000008   if !exists("python_no_doctest_code_highlight")
    3              0.000036     syn region pythonDoctest
                            	  \ start="^\s*>>>\s" end="^\s*$"
                            	  \ contained contains=ALLBUT,pythonDoctest,pythonFunction,@Spell
    3              0.000044     syn region pythonDoctestValue
                            	  \ start=+^\s*\%(>>>\s\|\.\.\.\s\|"""\|'''\)\@!\S\++ end="$"
                            	  \ contained
                              else
                                syn region pythonDoctest
                            	  \ start="^\s*>>>" end="^\s*$"
                            	  \ contained contains=@NoSpell
    3              0.000003   endif
    3              0.000002 endif
                            
                            " Sync at the beginning of class, function, or method definition.
    3              0.000020 syn sync match pythonSync grouphere NONE "^\%(def\|class\)\s\+\h\w*\s*[(:]"
                            
                            " The default highlight links.  Can be overridden later.
    3              0.000006 hi def link pythonStatement		Statement
    3              0.000004 hi def link pythonConditional		Conditional
    3              0.000005 hi def link pythonRepeat		Repeat
    3              0.000004 hi def link pythonOperator		Operator
    3              0.000004 hi def link pythonException		Exception
    3              0.000004 hi def link pythonInclude		Include
    3              0.000004 hi def link pythonAsync			Statement
    3              0.000004 hi def link pythonDecorator		Define
    3              0.000004 hi def link pythonDecoratorName		Function
    3              0.000003 hi def link pythonFunction		Function
    3              0.000004 hi def link pythonComment		Comment
    3              0.000004 hi def link pythonTodo			Todo
    3              0.000004 hi def link pythonString		String
    3              0.000004 hi def link pythonRawString		String
    3              0.000004 hi def link pythonQuotes		String
    3              0.000004 hi def link pythonTripleQuotes		pythonQuotes
    3              0.000004 hi def link pythonEscape		Special
    3              0.000015 if !exists("python_no_number_highlight")
    3              0.000004   hi def link pythonNumber		Number
    3              0.000002 endif
    3              0.000013 if !exists("python_no_builtin_highlight")
    3              0.000004   hi def link pythonBuiltin		Function
    3              0.000003 endif
    3              0.000008 if !exists("python_no_exception_highlight")
    3              0.000004   hi def link pythonExceptions		Structure
    3              0.000002 endif
    3              0.000008 if exists("python_space_error_highlight")
                              hi def link pythonSpaceError		Error
    3              0.000003 endif
    3              0.000007 if !exists("python_no_doctest_highlight")
    3              0.000004   hi def link pythonDoctest		Special
    3              0.000003   hi def link pythonDoctestValue	Define
    3              0.000002 endif
                            
    3              0.000008 let b:current_syntax = "python"
                            
    3   0.000035   0.000022 let &cpo = s:cpo_save
    3              0.000005 unlet s:cpo_save
                            
                            " vim:set sw=2 sts=2 ts=8 noet:

SCRIPT  C:\Program Files\Neovim\share\nvim\runtime\syntax\sh.vim
Sourced 3 times
Total time:   0.013162
 Self time:   0.013162

count  total (s)   self (s)
                            " Vim syntax file
                            " Language:		shell (sh) Korn shell (ksh) bash (sh)
                            " Maintainer:		This runtime file is looking for a new maintainer.
                            " Previous Maintainers:	Charles E. Campbell
                            " 		Lennart Schultz <Lennart.Schultz@ecmwf.int>
                            " Last Change:		2024 Mar 04 by Vim Project
                            " Version:		208
                            " Former URL:		http://www.drchip.org/astronaut/vim/index.html#SYNTAX_SH
                            " For options and settings, please use:      :help ft-sh-syntax
                            " This file includes many ideas from Eric Brunet (eric.brunet@ens.fr) and heredoc fixes from Felipe Contreras
                            
                            " quit when a syntax file was already loaded {{{1
    3              0.000014 if exists("b:current_syntax")
                              finish
    3              0.000002 endif
                            
                            " If the shell script itself specifies which shell to use, use it
    3              0.000021 if getline(1) =~ '\<ksh\>'
                             let b:is_kornshell = 1
    3              0.000015 elseif getline(1) =~ '\<bash\>'
                             let b:is_bash      = 1
    3              0.000008 elseif getline(1) =~ '\<dash\>'
                             let b:is_dash      = 1
    3              0.000019 elseif !exists("g:is_kornshell") && !exists("g:is_bash") && !exists("g:is_posix") && !exists("g:is_sh") && !exists("g:is_dash")
                             " user did not specify which shell to use, and 
                             " the script itself does not specify which shell to use. FYI: /bin/sh is ambiguous.
                             " Assuming /bin/sh is executable, and if its a link, find out what it links to.
    3              0.000006  let s:shell = ""
    3              0.000499  if executable("/bin/sh")
                              let s:shell = resolve("/bin/sh")
    3              0.000428  elseif executable("/usr/bin/sh")
                              let s:shell = resolve("/usr/bin/sh")
    3              0.000003  endif
    3              0.000013  if     s:shell =~ '\<ksh\>'
                              let b:is_kornshell= 1
    3              0.000008  elseif s:shell =~ '\<bash\>'
                              let b:is_bash = 1
    3              0.000006  elseif s:shell =~ '\<dash\>'
                              let b:is_dash = 1
    3              0.000002  endif
    3              0.000005  unlet s:shell
    3              0.000002 endif
                            
                            " handling /bin/sh with is_kornshell/is_sh {{{1
                            " b:is_sh will be set when "#! /bin/sh" is found;
                            " However, it often is just a masquerade by bash (typically Linux)
                            " or kornshell (typically workstations with Posix "sh").
                            " So, when the user sets "g:is_bash", "g:is_kornshell",
                            " or "g:is_posix", a b:is_sh is converted into b:is_bash/b:is_kornshell,
                            " respectively.
    3              0.000020 if !exists("b:is_kornshell") && !exists("b:is_bash") && !exists("b:is_dash")
    3              0.000008   if exists("g:is_posix") && !exists("g:is_kornshell")
                               let g:is_kornshell= g:is_posix
    3              0.000002   endif
    3              0.000006   if exists("g:is_kornshell")
                                let b:is_kornshell= 1
                                if exists("b:is_sh")
                                  unlet b:is_sh
                                endif
    3              0.000012   elseif exists("g:is_bash")
                                let b:is_bash= 1
                                if exists("b:is_sh")
                                  unlet b:is_sh
                                endif
    3              0.000005   elseif exists("g:is_dash")
                                let b:is_dash= 1
                                if exists("b:is_sh")
                                  unlet b:is_sh
                                endif
    3              0.000002   else
    3              0.000004     let b:is_sh= 1
    3              0.000002   endif
    3              0.000002 endif
                            
                            " if b:is_dash, set b:is_posix too
    3              0.000005 if exists("b:is_dash")
                             let b:is_posix= 1
    3              0.000002 endif
                            
                            " set up default g:sh_fold_enabled {{{1
                            " ================================
    3              0.000007 if !exists("g:sh_fold_enabled")
    1              0.000002  let g:sh_fold_enabled= 0
    2              0.000004 elseif g:sh_fold_enabled != 0 && !has("folding")
                             let g:sh_fold_enabled= 0
                             echomsg "Ignoring g:sh_fold_enabled=".g:sh_fold_enabled."; need to re-compile vim for +fold support"
    3              0.000002 endif
    3              0.000009 let s:sh_fold_functions= and(g:sh_fold_enabled,1)
    3              0.000007 let s:sh_fold_heredoc  = and(g:sh_fold_enabled,2)
    3              0.000006 let s:sh_fold_ifdofor  = and(g:sh_fold_enabled,4)
    3              0.000006 if g:sh_fold_enabled && &fdm == "manual"
                             " Given that	the	user provided g:sh_fold_enabled
                             " 	AND	g:sh_fold_enabled is manual (usual default)
                             " 	implies	a desire for syntax-based folding
                             setl fdm=syntax
    3              0.000002 endif
                            
                            " set up the syntax-highlighting for iskeyword
    3              0.000008 if (v:version == 704 && has("patch-7.4.1142")) || v:version > 704
    3              0.000010  if !exists("g:sh_syntax_isk") || (exists("g:sh_syntax_isk") && g:sh_syntax_isk)
    3              0.000005   if exists("b:is_bash")
                               exe "syn iskeyword ".&iskeyword.",-,:"
    3              0.000002   else
    3              0.000033    exe "syn iskeyword ".&iskeyword.",-"
    3              0.000002   endif
    3              0.000002  endif
    3              0.000002 endif
                            
                            " Set up folding commands for shell {{{1
                            " =================================
    3              0.000259 sil! delc ShFoldFunctions
    3              0.000223 sil! delc ShFoldHereDoc
    3              0.000222 sil! delc ShFoldIfDoFor
    3              0.000006 if s:sh_fold_functions
                             com! -nargs=* ShFoldFunctions <args> fold
    3              0.000002 else
    3              0.000021  com! -nargs=* ShFoldFunctions <args>
    3              0.000002 endif
    3              0.000003 if s:sh_fold_heredoc
                             com! -nargs=* ShFoldHereDoc <args> fold
    3              0.000002 else
    3              0.000012  com! -nargs=* ShFoldHereDoc <args>
    3              0.000002 endif
    3              0.000031 if s:sh_fold_ifdofor
                             com! -nargs=* ShFoldIfDoFor <args> fold
    3              0.000002 else
    3              0.000010  com! -nargs=* ShFoldIfDoFor <args>
    3              0.000001 endif
                            
                            " sh syntax is case sensitive {{{1
    3              0.000004 syn case match
                            
                            " Clusters: contains=@... clusters {{{1
                            "==================================
    3              0.000024 syn cluster shErrorList	contains=shDoError,shIfError,shInError,shCaseError,shEsacError,shCurlyError,shParenError,shTestError,shOK
    3              0.000009 if exists("b:is_kornshell") || exists("b:is_bash")
                             syn cluster ErrorList add=shDTestError
    3              0.000006 endif
    3              0.000050 syn cluster shArithParenList	contains=shArithmetic,shArithParen,shCaseEsac,shComment,shDeref,shDo,shDerefSimple,shEcho,shEscape,shNumber,shOperator,shPosnParm,shExSingleQuote,shExDoubleQuote,shHereString,shRedir,shSingleQuote,shDoubleQuote,shStatement,shVariable,shAlias,shTest,shCtrlSeq,shSpecial,shParen,bashSpecialVariables,bashStatement,shIf,shFor,shFunctionKey,shFunctionOne,shFunctionTwo
    3              0.000012 syn cluster shArithList	contains=@shArithParenList,shParenError
    3              0.000039 syn cluster shCaseEsacList	contains=shCaseStart,shCaseLabel,shCase,shCaseBar,shCaseIn,shComment,shDeref,shDerefSimple,shCaseCommandSub,shCaseExSingleQuote,shCaseSingleQuote,shCaseDoubleQuote,shCtrlSeq,@shErrorList,shStringSpecial,shCaseRange
    3              0.000029 syn cluster shCaseList	contains=@shCommandSubList,shCaseEsac,shColon,shCommandSub,shCommandSubBQ,shSubshare,shValsub,shComment,shDblBrace,shDo,shEcho,shExpr,shFor,shHereDoc,shIf,shHereString,shRedir,shSetList,shSource,shStatement,shVariable,shCtrlSeq
    3              0.000008 if exists("b:is_kornshell") || exists("b:is_bash")
                             syn cluster shCaseList	add=shForPP,shDblParen
    3              0.000006 endif
    3              0.000029 syn cluster shCommandSubList	contains=shAlias,shArithmetic,shCmdParenRegion,shCommandSub,shComment,shCtrlSeq,shDeref,shDerefSimple,shDoubleQuote,shEcho,shEscape,shExDoubleQuote,shExpr,shExSingleQuote,shHereDoc,shNumber,shOperator,shOption,shPosnParm,shHereString,shRedir,shSingleQuote,shSpecial,shStatement,shSubSh,shTest,shVariable
    3              0.000013 syn cluster shCurlyList	contains=shNumber,shComma,shDeref,shDerefSimple,shDerefSpecial
                            " COMBAK: removing shEscape from shDblQuoteList fails ksh04:43 -- Jun 09, 2022: I don't see the problem with ksh04, so am reinstating shEscape
    3              0.000017 syn cluster shDblQuoteList	contains=shArithmetic,shCommandSub,shCommandSubBQ,shSubshare,shValsub,shDeref,shDerefSimple,shEscape,shPosnParm,shCtrlSeq,shSpecial,shSpecialDQ
    3              0.000014 syn cluster shDerefList	contains=shDeref,shDerefSimple,shDerefVar,shDerefSpecial,shDerefWordError,shDerefPSR,shDerefPPS
    3              0.000012 syn cluster shDerefVarList	contains=shDerefOffset,shDerefOp,shDerefVarArray,shDerefOpError
    3              0.000019 syn cluster shEchoList	contains=shArithmetic,shCommandSub,shCommandSubBQ,shSubshare,shValsub,shDeref,shDerefSimple,shEscape,shExSingleQuote,shExDoubleQuote,shSingleQuote,shDoubleQuote,shCtrlSeq,shEchoQuote
    3              0.000017 syn cluster shExprList1	contains=shCharClass,shNumber,shOperator,shExSingleQuote,shExDoubleQuote,shSingleQuote,shDoubleQuote,shExpr,shDblBrace,shDeref,shDerefSimple,shCtrlSeq
    3              0.000014 syn cluster shExprList2	contains=@shExprList1,@shCaseList,shTest
    3              0.000027 syn cluster shFunctionList	contains=@shCommandSubList,shCaseEsac,shColon,shComment,shDo,shEcho,shExpr,shFor,shHereDoc,shIf,shOption,shHereString,shRedir,shSetList,shSource,shStatement,shVariable,shOperator,shCtrlSeq
    3              0.000007 if exists("b:is_kornshell") || exists("b:is_bash")
                             syn cluster shFunctionList	add=shRepeat,shDblBrace,shDblParen,shForPP
                             syn cluster shDerefList	add=shCommandSubList,shEchoDeref
    3              0.000002 endif
    3              0.000009 syn cluster shHereBeginList	contains=@shCommandSubList
    3              0.000010 syn cluster shHereList	contains=shBeginHere,shHerePayload
    3              0.000013 syn cluster shHereListDQ	contains=shBeginHere,@shDblQuoteList,shHerePayload
    3              0.000029 syn cluster shIdList	contains=shArithmetic,shCommandSub,shCommandSubBQ,shSubshare,shValsub,shWrapLineOperator,shSetOption,shComment,shDeref,shDerefSimple,shHereString,shNumber,shOperator,shRedir,shExSingleQuote,shExDoubleQuote,shSingleQuote,shDoubleQuote,shExpr,shCtrlSeq,shStringSpecial,shAtExpr
    3              0.000015 syn cluster shIfList	contains=@shLoopList,shDblBrace,shDblParen,shFunctionKey,shFunctionOne,shFunctionTwo
    3              0.000034 syn cluster shLoopList	contains=@shCaseList,@shErrorList,shCaseEsac,shConditional,shDblBrace,shExpr,shFor,shIf,shOption,shSet,shTest,shTestOpr,shTouch
    3              0.000017 if exists("b:is_kornshell") || exists("b:is_bash")
                             syn cluster shLoopList	add=shForPP,shDblParen
    3              0.000006 endif
    3              0.000031 syn cluster shPPSLeftList	contains=shAlias,shArithmetic,shCmdParenRegion,shCommandSub,shSubshare,shValsub,shCtrlSeq,shDeref,shDerefSimple,shDoubleQuote,shEcho,shEscape,shExDoubleQuote,shExpr,shExSingleQuote,shHereDoc,shNumber,shOperator,shOption,shPosnParm,shHereString,shRedir,shSingleQuote,shSpecial,shStatement,shSubSh,shTest,shVariable
    3              0.000013 syn cluster shPPSRightList	contains=shDeref,shDerefSimple,shEscape,shPosnParm
    3              0.000027 syn cluster shSubShList	contains=@shCommandSubList,shCommandSubBQ,shSubshare,shValsub,shCaseEsac,shColon,shCommandSub,shComment,shDo,shEcho,shExpr,shFor,shIf,shHereString,shRedir,shSetList,shSource,shStatement,shVariable,shCtrlSeq,shOperator
    3              0.000021 syn cluster shTestList	contains=shArithmetic,shCharClass,shCommandSub,shCommandSubBQ,shSubshare,shValsub,shCtrlSeq,shDeref,shDerefSimple,shDoubleQuote,shSpecialDQ,shExDoubleQuote,shExpr,shExSingleQuote,shNumber,shOperator,shSingleQuote,shTest,shTestOpr
    3              0.000009 syn cluster shNoZSList	contains=shSpecialNoZS
    3              0.000013 syn cluster shForList	contains=shTestOpr,shNumber,shDerefSimple,shDeref,shCommandSub,shCommandSubBQ,shSubshare,shValsub,shArithmetic
                            
                            " Echo: {{{1
                            " ====
                            " This one is needed INSIDE a CommandSub, so that `echo bla` be correct
    3              0.000020 if exists("b:is_kornshell")
                             syn region shEcho matchgroup=shStatement start="\<echo\>"  skip="\\$" matchgroup=shEchoDelim end="$" matchgroup=NONE end="[<>;&|()`}]"me=e-1 end="\d[<>]"me=e-2 end="#"me=e-1 end="\ze[ \t\n;]}" contains=@shEchoList skipwhite nextgroup=shQuickComment
                             syn region shEcho matchgroup=shStatement start="\<print\>" skip="\\$" matchgroup=shEchoDelim end="$" matchgroup=NONE end="[<>;&|()`}]"me=e-1 end="\d[<>]"me=e-2 end="#"me=e-1 end="\ze[ \t\n;]}" contains=@shEchoList skipwhite nextgroup=shQuickComment
    3              0.000008 else
    3              0.000039  syn region shEcho matchgroup=shStatement start="\<echo\>"  skip="\\$" matchgroup=shEchoDelim end="$" matchgroup=NONE end="[<>;&|()`]"me=e-1 end="\d[<>]"me=e-2 end="#"me=e-1 contains=@shEchoList skipwhite nextgroup=shQuickComment
    3              0.000028  syn region shEcho matchgroup=shStatement start="\<print\>" skip="\\$" matchgroup=shEchoDelim end="$" matchgroup=NONE end="[<>;&|()`]"me=e-1 end="\d[<>]"me=e-2 end="#"me=e-1 contains=@shEchoList skipwhite nextgroup=shQuickComment
    3              0.000003 endif
    3              0.000014 if exists("b:is_kornshell") || exists("b:is_bash") || exists("b:is_posix")
                             syn region shEchoDeref contained matchgroup=shStatement start="\<echo\>"  skip="\\$" matchgroup=shEchoDelim end="$" end="[<>;&|()`}]"me=e-1 end="\d[<>]"me=e-2 end="#"me=e-1 contains=@shEchoList skipwhite nextgroup=shQuickComment
                             syn region shEchoDeref contained matchgroup=shStatement start="\<print\>" skip="\\$" matchgroup=shEchoDelim end="$" end="[<>;&|()`}]"me=e-1 end="\d[<>]"me=e-2 end="#"me=e-1 contains=@shEchoList skipwhite nextgroup=shQuickComment
    3              0.000003 endif
    3              0.000012 syn match  shEchoQuote contained	'\%(\\\\\)*\\["`'()]'
                            
                            " This must be after the strings, so that ... \" will be correct
    3              0.000054 syn region shEmbeddedEcho contained matchgroup=shStatement start="\<print\>" skip="\\$" matchgroup=shEchoDelim end="$" matchgroup=NONE end="[<>;&|`)]"me=e-1 end="\d[<>]"me=e-2 end="\s#"me=e-2 contains=shNumber,shExSingleQuote,shSingleQuote,shDeref,shDerefSimple,shSpecialVar,shOperator,shExDoubleQuote,shDoubleQuote,shCharClass,shCtrlSeq
                            
                            " Alias: {{{1
                            " =====
    3              0.000013 if exists("b:is_kornshell") || exists("b:is_bash") || exists("b:is_posix")
                             syn match shStatement "\<alias\>"
                             syn region shAlias matchgroup=shStatement start="\<alias\>\s\+\(\h[-._[:alnum:]]*\)\@="  skip="\\$" end="\>\|`"
                             syn region shAlias matchgroup=shStatement start="\<alias\>\s\+\(\h[-._[:alnum:]]*=\)\@=" skip="\\$" end="="
                            " syn region shAlias matchgroup=shStatement start="\<alias\>\s\+\(\h[-._[:alnum:]]\+\)\@="  skip="\\$" end="\>\|`"
                            " syn region shAlias matchgroup=shStatement start="\<alias\>\s\+\(\h[-._[:alnum:]]\+=\)\@=" skip="\\$" end="="
                            
                             " Touch: {{{1
                             " =====
                             syn match shTouch	'\<touch\>[^;#]*'	skipwhite nextgroup=shComment contains=shTouchCmd,shDoubleQuote,shSingleQuote,shDeref,shDerefSimple
                             syn match shTouchCmd	'\<touch\>'		contained
    3              0.000002 endif
                            
                            " Error Codes: {{{1
                            " ============
    3              0.000007 if !exists("g:sh_no_error")
    3              0.000007  syn match   shDoError "\<done\>"
    3              0.000008  syn match   shIfError "\<fi\>"
    3              0.000005  syn match   shInError "\<in\>"
    3              0.000006  syn match   shCaseError ";;"
    3              0.000006  syn match   shEsacError "\<esac\>"
    3              0.000005  syn match   shCurlyError "}"
    3              0.000005  syn match   shParenError ")"
    3              0.000012  syn match   shOK	'\.\(done\|fi\|in\|esac\)'
    3              0.000007  if exists("b:is_kornshell") || exists("b:is_bash")
                              syn match     shDTestError "]]"
    3              0.000002  endif
    3              0.000005  syn match     shTestError "]"
    3              0.000001 endif
                            
                            " Options: {{{1
                            " ====================
    3              0.000014 syn match   shOption	"\s\zs[-+][-_a-zA-Z#@]\+"
    3              0.000015 syn match   shOption	"\s\zs--[^ \t$=`'"|);]\+"
                            
                            " File Redirection Highlighted As Operators: {{{1
                            "===========================================
    3              0.000011 syn match      shRedir	"\d\=>\(&[-0-9]\)\="
    3              0.000007 syn match      shRedir	"\d\=>>-\="
    3              0.000008 syn match      shRedir	"\d\=<\(&[-0-9]\)\="
    3              0.000007 syn match      shRedir	"\d<<-\="
                            
                            " Operators: {{{1
                            " ==========
    3              0.000013 syn match   shOperator	"<<\|>>"		contained
    3              0.000006 syn match   shOperator	"[!&;|]"		contained
    3              0.000007 syn match   shOperator	"\[[[^:]\|\]]"		contained
    3              0.000010 syn match   shOperator	"[-=/*+%]\=="		skipwhite nextgroup=shPattern
    3              0.000012 syn match   shPattern	"\<\S\+\())\)\@="	contained contains=shExSingleQuote,shSingleQuote,shExDoubleQuote,shDoubleQuote,shDeref
                            
                            " Subshells: {{{1
                            " ==========
    3              0.000018 syn region shExpr  transparent matchgroup=shExprRegion  start="{" end="}"		contains=@shExprList2 nextgroup=shSpecialNxt
    3              0.000024 syn region shSubSh transparent matchgroup=shSubShRegion start="[^(]\zs(" end=")"	contains=@shSubShList nextgroup=shSpecialNxt
                            
                            " Tests: {{{1
                            "=======
    3              0.000019 syn region shExpr	matchgroup=shRange start="\[" skip=+\\\\\|\\$\|\[+ end="\]" contains=@shTestList,shSpecial
    3              0.000024 syn region shTest	transparent matchgroup=shStatement start="\<test\s" skip=+\\\\\|\\$+ matchgroup=NONE end="[;&|]"me=e-1 end="$" contains=@shExprList1
    3              0.000025 syn region shNoQuote	start='\S'	skip='\%(\\\\\)*\\.'	end='\ze\s' end="\ze['"]"	contained contains=shDerefSimple,shDeref
    3              0.000011 syn match  shAstQuote	contained	'\*\ze"'	nextgroup=shString
    3              0.000031 syn match  shTestOpr	contained	'[^-+/%]\zs=' skipwhite nextgroup=shTestDoubleQuote,shTestSingleQuote,shTestPattern
    3              0.000022 syn match  shTestOpr	contained	"<=\|>=\|!=\|==\|=\~\|-.\>\|-\(nt\|ot\|ef\|eq\|ne\|lt\|le\|gt\|ge\)\>\|[!<>]"
    3              0.000008 syn match  shTestPattern	contained	'\w\+'
    3              0.000027 syn region shTestDoubleQuote	contained	start='\%(\%(\\\\\)*\\\)\@<!"' skip=+\\\\\|\\"+ end='"'	contains=shDeref,shDerefSimple,shDerefSpecial
    3              0.000007 syn match  shTestSingleQuote	contained	'\\.'	nextgroup=shTestSingleQuote
    3              0.000007 syn match  shTestSingleQuote	contained	"'[^']*'"
    3              0.000012 if exists("b:is_kornshell") || exists("b:is_bash")
                             syn region  shDblBrace matchgroup=Delimiter start="\[\["	skip=+\%(\\\\\)*\\$+ end="\]\]"	contains=@shTestList,shAstQuote,shNoQuote,shComment
                             syn region  shDblParen matchgroup=Delimiter start="(("	skip=+\%(\\\\\)*\\$+ end="))"	contains=@shTestList,shComment
    3              0.000002 endif
                            
                            " Character Class In Range: {{{1
                            " =========================
    3              0.000042 syn match   shCharClass	contained	"\[:\(backspace\|escape\|return\|xdigit\|alnum\|alpha\|blank\|cntrl\|digit\|graph\|lower\|print\|punct\|space\|upper\|tab\):\]"
                            
                            " Loops: do, if, while, until {{{1
                            " ======
    3              0.000033 ShFoldIfDoFor syn region shDo	transparent	matchgroup=shConditional start="\<do\>" matchgroup=shConditional end="\<done\>"			contains=@shLoopList
    3              0.000038 ShFoldIfDoFor syn region shIf	transparent	matchgroup=shConditional start="\<if\_s" matchgroup=shConditional skip=+-fi\>+ end="\<;\_s*then\>" end="\<fi\>"	contains=@shIfList
    3              0.000029 ShFoldIfDoFor syn region shFor		matchgroup=shLoop start="\<for\ze\_s\s*\%(((\)\@!" end="\<in\>" end="\<do\>"me=e-2			contains=@shLoopList,shDblParen skipwhite nextgroup=shCurlyIn
    3              0.000010 if exists("b:is_kornshell") || exists("b:is_bash")
                             ShFoldIfDoFor syn region shForPP	matchgroup=shLoop start='\<for\>\_s*((' end='))' contains=@shForList
    3              0.000002 endif
                            
    3              0.000009 if exists("b:is_kornshell") || exists("b:is_bash") || exists("b:is_posix")
                             syn cluster shCaseList	add=shRepeat
                             syn cluster shFunctionList	add=shRepeat
                             syn region shRepeat   matchgroup=shLoop   start="\<while\_s" end="\<do\>"me=e-2	contains=@shLoopList,shDblParen,shDblBrace
                             syn region shRepeat   matchgroup=shLoop   start="\<until\_s" end="\<do\>"me=e-2	contains=@shLoopList,shDblParen,shDblBrace
                             if !exists("b:is_posix")
                              syn region shCaseEsac matchgroup=shConditional start="\<select\s" matchgroup=shConditional end="\<in\>" end="\<do\>" contains=@shLoopList
                             endif
    3              0.000003 else
    3              0.000018  syn region shRepeat   matchgroup=shLoop   start="\<while\_s" end="\<do\>"me=e-2		contains=@shLoopList
    3              0.000015  syn region shRepeat   matchgroup=shLoop   start="\<until\_s" end="\<do\>"me=e-2		contains=@shLoopList
    3              0.000003 endif
    3              0.000018 syn region shCurlyIn   contained	matchgroup=Delimiter start="{" end="}" contains=@shCurlyList
    3              0.000005 syn match  shComma     contained	","
                            
                            " Case: case...esac {{{1
                            " ====
    3              0.000022 syn match shCaseBar	contained skipwhite "\(^\|[^\\]\)\(\\\\\)*\zs|"		nextgroup=shCase,shCaseStart,shCaseBar,shComment,shCaseExSingleQuote,shCaseSingleQuote,shCaseDoubleQuote
    3              0.000009 syn match shCaseStart	contained skipwhite skipnl "("			nextgroup=shCase,shCaseBar
    3              0.000021 syn match shCaseLabel	contained skipwhite	"\%(\\.\|[-a-zA-Z0-9_*.]\)\+"	contains=shCharClass
    3              0.000010 if exists("b:is_bash")
                             ShFoldIfDoFor syn region	shCase	contained skipwhite skipnl matchgroup=shSnglCase start="\%(\\.\|[^#$()'" \t]\)\{-}\zs)"  end=";;" end=";&" end=";;&" end="esac"me=s-1	contains=@shCaseList	nextgroup=shCaseStart,shCase,shComment
    3              0.000008 elseif exists("b:is_kornshell")
                             ShFoldIfDoFor syn region	shCase	contained skipwhite skipnl matchgroup=shSnglCase start="\%(\\.\|[^#$()'" \t]\)\{-}\zs)"  end=";;" end=";&" end="esac"me=s-1	contains=@shCaseList	nextgroup=shCaseStart,shCase,shComment
    3              0.000004 else                                                                                                                     
    3              0.000044  ShFoldIfDoFor syn region	shCase	contained skipwhite skipnl matchgroup=shSnglCase start="\%(\\.\|[^#$()'" \t]\)\{-}\zs)"  end=";;" end="esac"me=s-1		contains=@shCaseList	nextgroup=shCaseStart,shCase,shComment
    3              0.000003 endif
    3              0.000025 ShFoldIfDoFor syn region	shCaseEsac	matchgroup=shConditional start="\<case\>" end="\<esac\>"	contains=@shCaseEsacList
                            
    3              0.000014 syn keyword shCaseIn	contained skipwhite skipnl in			nextgroup=shCase,shCaseStart,shCaseBar,shComment,shCaseExSingleQuote,shCaseSingleQuote,shCaseDoubleQuote
    3              0.000018 if exists("b:is_bash") || exists("b:is_kornshell")
                             syn region  shCaseExSingleQuote	matchgroup=shQuote start=+\$'+ skip=+\\\\\|\\.+ end=+'+	contains=shStringSpecial,shSpecial	skipwhite skipnl nextgroup=shCaseBar	contained
    3              0.000010 elseif !exists("g:sh_no_error")
    3              0.000019  syn region  shCaseExSingleQuote	matchgroup=Error start=+\$'+ skip=+\\\\\|\\.+ end=+'+	contains=shStringSpecial	skipwhite skipnl nextgroup=shCaseBar	contained
    3              0.000004 endif
    3              0.000016 syn region  shCaseSingleQuote	matchgroup=shQuote start=+'+ end=+'+		contains=shStringSpecial		skipwhite skipnl nextgroup=shCaseBar	contained
    3              0.000022 syn region  shCaseDoubleQuote	matchgroup=shQuote start=+"+ skip=+\\\\\|\\.+ end=+"+	contains=@shDblQuoteList,shStringSpecial	skipwhite skipnl nextgroup=shCaseBar	contained
    3              0.000021 syn region  shCaseCommandSub	start=+`+ skip=+\\\\\|\\.+ end=+`+		contains=@shCommandSubList		skipwhite skipnl nextgroup=shCaseBar	contained
    3              0.000008 if exists("b:is_bash")
                             syn region  shCaseRange	matchgroup=Delimiter start=+\[+ skip=+\\\\+ end=+\]+	contained	contains=shCharClass
                             syn match   shCharClass	'\[:\%(alnum\|alpha\|ascii\|blank\|cntrl\|digit\|graph\|lower\|print\|punct\|space\|upper\|word\|or\|xdigit\):\]'			contained
    3              0.000004 else
    3              0.000100  syn region  shCaseRange	matchgroup=Delimiter start=+\[+ skip=+\\\\+ end=+\]+	contained
    3              0.000003 endif
                            " Misc: {{{1
                            "======
    3              0.000025 syn match   shWrapLineOperator "\\$"
    3              0.000024 syn region  shCommandSubBQ   	start="`" skip="\\\\\|\\." end="`"	contains=shBQComment,@shCommandSubList
                            "COMBAK: see ksh13:50
                            "syn match   shEscape	contained	'\%(^\)\@!\%(\\\\\)*\\.'	nextgroup=shSingleQuote,shDoubleQuote,shComment
                            "COMBAK: see sh11:27
    3              0.000016 syn match   shEscape	contained	'\%(^\)\@!\%(\\\\\)*\\.'	nextgroup=shComment
                            "COMBAK: see ksh13:53
                            "syn match   shEscape	contained	'\%(^\)\@!\%(\\\\\)*\\.'
                            
                            " $() and $(()): {{{1
                            " $(..) is not supported by sh (Bourne shell).  However, apparently
                            " some systems (HP?) have as their /bin/sh a (link to) Korn shell
                            " (ie. Posix compliant shell).  /bin/ksh should work for those
                            " systems too, however, so the following syntax will flag $(..) as
                            " an Error under /bin/sh.  By consensus of vimdev'ers!
    3              0.000018 if exists("b:is_kornshell") || exists("b:is_bash") || exists("b:is_posix")
                             syn region shCommandSub matchgroup=shCmdSubRegion start="\$(\ze[^(]"  skip='\\\\\|\\.' end=")"  contains=@shCommandSubList
                             if exists("b:is_kornshell")
                              syn region shSubshare matchgroup=shCmdSubRegion start="\${\ze[ \t\n<]"  skip='\\\\\|\\.' end="\zs[ \t\n;]}"  contains=@shCommandSubList
                              syn region shValsub matchgroup=shCmdSubRegion start="\${|"  skip='\\\\\|\\.' end="}"  contains=@shCommandSubList
                             endif
                             syn region shArithmetic matchgroup=shArithRegion  start="\$((" skip='\\\\\|\\.' end="))" contains=@shArithList
                             syn region shArithmetic matchgroup=shArithRegion  start="\$\[" skip='\\\\\|\\.' end="\]" contains=@shArithList
                             syn match  shSkipInitWS contained	"^\s\+"
                             syn region shArithParen matchgroup=shArithRegion  contained start="(" end=")" contains=@shArithParenList
    3              0.000010 elseif !exists("g:sh_no_error")
    3              0.000019  syn region shCommandSub matchgroup=Error start="\$(" end=")" contains=@shCommandSubList
    3              0.000004 endif
    3              0.000028 syn region shCmdParenRegion matchgroup=shCmdSubRegion start="((\@!" skip='\\\\\|\\.' end=")" contains=@shCommandSubList
                            
    3              0.000007 if exists("b:is_bash")
                             syn cluster shCommandSubList add=bashSpecialVariables,bashStatement
                             syn cluster shCaseList add=bashAdminStatement,bashStatement
                             syn keyword bashSpecialVariables contained auto_resume BASH BASH_ALIASES BASH_ALIASES BASH_ARGC BASH_ARGC BASH_ARGV BASH_ARGV BASH_CMDS BASH_CMDS BASH_COMMAND BASH_COMMAND BASH_ENV BASH_EXECUTION_STRING BASH_EXECUTION_STRING BASH_LINENO BASH_LINENO BASHOPTS BASHOPTS BASHPID BASHPID BASH_REMATCH BASH_REMATCH BASH_SOURCE BASH_SOURCE BASH_SUBSHELL BASH_SUBSHELL BASH_VERSINFO BASH_VERSION BASH_XTRACEFD BASH_XTRACEFD CDPATH COLUMNS COLUMNS COMP_CWORD COMP_CWORD COMP_KEY COMP_KEY COMP_LINE COMP_LINE COMP_POINT COMP_POINT COMPREPLY COMPREPLY COMP_TYPE COMP_TYPE COMP_WORDBREAKS COMP_WORDBREAKS COMP_WORDS COMP_WORDS COPROC COPROC DIRSTACK EMACS EMACS ENV ENV EUID FCEDIT FIGNORE FUNCNAME FUNCNAME FUNCNEST FUNCNEST GLOBIGNORE GROUPS histchars HISTCMD HISTCONTROL HISTFILE HISTFILESIZE HISTIGNORE HISTSIZE HISTTIMEFORMAT HISTTIMEFORMAT HOME HOSTFILE HOSTNAME HOSTTYPE IFS IGNOREEOF INPUTRC LANG LC_ALL LC_COLLATE LC_CTYPE LC_CTYPE LC_MESSAGES LC_NUMERIC LC_NUMERIC LINENO LINES LINES MACHTYPE MAIL MAILCHECK MAILPATH MAPFILE
                             syn keyword bashStatement chmod clear complete du egrep expr fgrep find gnufind gnugrep grep head less ls mkdir mv rm rmdir rpm sed sleep sort strip tail
                             syn keyword bashAdminStatement daemon killall killproc nice reload restart start status stop
                             syn keyword bashStatement	command compgen
    3              0.000003 endif
                            
    3              0.000011 if exists("b:is_kornshell") || exists("b:is_posix")
                             syn cluster shCommandSubList add=kshSpecialVariables,kshStatement
                             syn cluster shCaseList add=kshStatement
                             syn keyword kshSpecialVariables contained CDPATH COLUMNS EDITOR ENV ERRNO FCEDIT FPATH HISTFILE HISTSIZE HOME IFS LINENO LINES MAIL MAILCHECK MAILPATH OLDPWD OPTARG OPTIND PATH PPID PS1 PS2 PS3 PS4 PWD RANDOM REPLY SECONDS SHELL TMOUT VISUAL
                             syn keyword kshStatement cat chmod clear cp du egrep expr fgrep find grep head killall less ls mkdir mv nice printenv rm rmdir sed sort strip stty tail tput
                             syn keyword kshStatement command setgroups setsenv
    3              0.000002 endif
                            
    3              0.000011 syn match   shSource	"^\.\s"
    3              0.000010 syn match   shSource	"\s\.\s"
                            "syn region  shColon	start="^\s*:" end="$" end="\s#"me=e-2 contains=@shColonList
                            "syn region  shColon	start="^\s*\zs:" end="$" end="\s#"me=e-2
    3              0.000010 if exists("b:is_kornshell") || exists("b:is_posix")
                             syn match   shColon	'^\s*\zs:'
    3              0.000002 endif
                            
                            " String And Character Constants: {{{1
                            "================================
    3              0.000021 syn match   shNumber	"\<\d\+\>#\="
    3              0.000032 syn match   shNumber	"\<-\=\.\=\d\+\>#\="
    3              0.000020 syn match   shCtrlSeq	"\\\d\d\d\|\\[abcfnrtv0]"			contained
    3              0.000012 if exists("b:is_bash") || exists("b:is_kornshell")
                             syn match   shSpecial	"[^\\]\(\\\\\)*\zs\\\o\o\o\|\\x\x\x\|\\c[^"]\|\\[abefnrtv]"	contained
                             syn match   shSpecial	"^\(\\\\\)*\zs\\\o\o\o\|\\x\x\x\|\\c[^"]\|\\[abefnrtv]"	contained
                             syn region  shExSingleQuote	matchgroup=shQuote start=+\$'+ skip=+\\\\\|\\.+ end=+'+	contains=shStringSpecial,shSpecial		nextgroup=shSpecialNxt
                             syn region  shExDoubleQuote	matchgroup=shQuote start=+\$"+ skip=+\\\\\|\\.\|\\"+ end=+"+	contains=@shDblQuoteList,shStringSpecial,shSpecial	nextgroup=shSpecialNxt
    3              0.000010 elseif !exists("g:sh_no_error")
    3              0.000023  syn region  shExSingleQuote	matchGroup=Error start=+\$'+ skip=+\\\\\|\\.+ end=+'+	contains=shStringSpecial
    3              0.000022  syn region  shExDoubleQuote	matchGroup=Error start=+\$"+ skip=+\\\\\|\\.+ end=+"+	contains=shStringSpecial
    3              0.000004 endif
    3              0.000024 syn region  shSingleQuote	matchgroup=shQuote start=+'+ end=+'+		contains=@Spell	nextgroup=shSpecialStart,shSpecialSQ
    3              0.000033 syn region  shDoubleQuote	matchgroup=shQuote start=+\%(\%(\\\\\)*\\\)\@<!"+ skip=+\\.+ end=+"+			contains=@shDblQuoteList,shStringSpecial,@Spell	nextgroup=shSpecialStart
    3              0.000011 syn match   shStringSpecial	"[^[:print:] \t]"			contained
    3              0.000025 syn match   shStringSpecial	"[^\\]\zs\%(\\\\\)*\(\\[\\"'`$()#]\)\+"			nextgroup=shComment
    3              0.000024 syn match   shSpecialSQ	"[^\\]\zs\%(\\\\\)*\(\\[\\"'`$()#]\)\+"		contained	nextgroup=shBkslshSnglQuote,@shNoZSList
    3              0.000021 syn match   shSpecialDQ	"[^\\]\zs\%(\\\\\)*\(\\[\\"'`$()#]\)\+"		contained	nextgroup=shBkslshDblQuote,@shNoZSList
    3              0.000016 syn match   shSpecialStart	"\%(\\\\\)*\\[\\"'`$()#]"			contained	nextgroup=shBkslshSnglQuote,shBkslshDblQuote,@shNoZSList
    3              0.000014 syn match   shSpecial	"^\%(\\\\\)*\\[\\"'`$()#]"
    3              0.000015 syn match   shSpecialNoZS	contained	"\%(\\\\\)*\\[\\"'`$()#]"
    3              0.000018 syn match   shSpecialNxt	contained	"\\[\\"'`$()#]"
                            "syn region  shBkslshSnglQuote	contained	matchgroup=shQuote start=+'+ end=+'+	contains=@Spell	nextgroup=shSpecialStart
                            "syn region  shBkslshDblQuote	contained	matchgroup=shQuote start=+"+ skip=+\\"+ end=+"+	contains=@shDblQuoteList,shStringSpecial,@Spell	nextgroup=shSpecialStart
                            
                            " Comments: {{{1
                            "==========
    3              0.000016 syn cluster	shCommentGroup	contains=shTodo,@Spell
    3              0.000009 if exists("b:is_bash")
                             syn match	shTodo	contained		"\<\%(COMBAK\|FIXME\|TODO\|XXX\)\ze:\=\>"
    3              0.000003 else
    3              0.000009  syn keyword	shTodo	contained		COMBAK FIXME TODO XXX
    3              0.000003 endif
    3              0.000028 syn match	shComment		"^\s*\zs#.*$"	contains=@shCommentGroup
    3              0.000021 syn match	shComment		"\s\zs#.*$"	contains=@shCommentGroup
    3              0.000012 syn match	shComment	contained	"#.*$"	contains=@shCommentGroup
    3              0.000008 syn match	shQuickComment	contained	"#.*$"          contains=@shCommentGroup
    3              0.000010 syn match	shBQComment	contained	"#.\{-}\ze`"	contains=@shCommentGroup
                            
                            " Here Documents: {{{1
                            "  (modified by Felipe Contreras)
                            " =========================================
    3              0.000044 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc01 start="<<\s*\z([^ \t|>]\+\)"		matchgroup=shHereDoc01 end="^\z1$"	contains=@shDblQuoteList
    3              0.000030 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc02 start="<<-\s*\z([^ \t|>]\+\)"		matchgroup=shHereDoc02 end="^\t*\z1$"	contains=@shDblQuoteList
    3              0.000024 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc03 start="<<\s*\\\z([^ \t|>]\+\)"		matchgroup=shHereDoc03 end="^\z1$"
    3              0.000023 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc04 start="<<-\s*\\\z([^ \t|>]\+\)"		matchgroup=shHereDoc04 end="^\t*\z1$"
    3              0.000032 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc05 start="<<\s*'\z([^']\+\)'"		matchgroup=shHereDoc05 end="^\z1$"
    3              0.000022 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc06 start="<<-\s*'\z([^']\+\)'"		matchgroup=shHereDoc06 end="^\t*\z1$"
    3              0.000022 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc07 start="<<\s*\"\z([^"]\+\)\""		matchgroup=shHereDoc07 end="^\z1$"
    3              0.000023 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc08 start="<<-\s*\"\z([^"]\+\)\""		matchgroup=shHereDoc08 end="^\t*\z1$"
    3              0.000057 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc09 start="<<\s*\\\_$\_s*\z([^ \t|>]\+\)"		matchgroup=shHereDoc09 end="^\z1$"	contains=@shDblQuoteList
    3              0.000027 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc10 start="<<-\s*\\\_$\_s*\z([^ \t|>]\+\)"	matchgroup=shHereDoc10 end="^\t*\z1$"	contains=@shDblQuoteList
    3              0.000025 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc11 start="<<\s*\\\_$\_s*\\\z([^ \t|>]\+\)"	matchgroup=shHereDoc11 end="^\z1$"
    3              0.000025 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc12 start="<<-\s*\\\_$\_s*\\\z([^ \t|>]\+\)"	matchgroup=shHereDoc12 end="^\t*\z1$"
    3              0.000024 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc13 start="<<\s*\\\_$\_s*'\z([^']\+\)'"		matchgroup=shHereDoc13 end="^\z1$"
    3              0.000029 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc14 start="<<-\s*\\\_$\_s*'\z([^']\+\)'"		matchgroup=shHereDoc14 end="^\t*\z1$"
    3              0.000022 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc15 start="<<\s*\\\_$\_s*\"\z([^"]\+\)\""		matchgroup=shHereDoc15 end="^\z1$"
    3              0.000021 ShFoldHereDoc syn region shHereDoc matchgroup=shHereDoc16 start="<<-\s*\\\_$\_s*\"\z([^"]\+\)\""	matchgroup=shHereDoc16 end="^\t*\z1$"
                            
                            
                            " Here Strings: {{{1
                            " =============
                            " available for: bash; ksh (really should be ksh93 only) but not if its a posix
    3              0.000015 if exists("b:is_bash") || (exists("b:is_kornshell") && !exists("b:is_posix"))
                             syn match shHereString "<<<"	skipwhite	nextgroup=shCmdParenRegion
    3              0.000002 endif
                            
                            " Identifiers: {{{1
                            "=============
    3              0.000014 syn match  shSetOption	"\s\zs[-+][a-zA-Z0-9]\+\>"	contained
    3              0.000015 syn match  shVariable	"\<\h\w*\ze="			nextgroup=shVarAssign
    3              0.000017 syn match  shVarAssign	"="		contained	nextgroup=shCmdParenRegion,shPattern,shDeref,shDerefSimple,shDoubleQuote,shExDoubleQuote,shSingleQuote,shExSingleQuote,shVar
    3              0.000006 syn match  shVar	contained	"\h\w*"
    3              0.000013 syn region shAtExpr	contained	start="@(" end=")" contains=@shIdList
    3              0.000006 if exists("b:is_bash")
                             syn match  shSet "^\s*set\ze\s\+$"
                             syn region shSetList oneline matchgroup=shSet start="\<\%(declare\|local\|export\)\>\ze[/a-zA-Z_]\@!" end="$"		matchgroup=shSetListDelim end="\ze[}|);&]" matchgroup=NONE end="\ze\s\+#\|="	contains=@shIdList
                             syn region shSetList oneline matchgroup=shSet start="\<\%(set\|unset\)\>[/a-zA-Z_]\@!" end="\ze[;|#)]\|$"		matchgroup=shSetListDelim end="\ze[}|);&]" matchgroup=NONE end="\ze\s\+="	contains=@shIdList nextgroup=shComment
    3              0.000011 elseif exists("b:is_kornshell") || exists("b:is_posix")
                             syn match  shSet "^\s*set\ze\s\+$"
                             if exists("b:is_dash")
                              syn region shSetList oneline matchgroup=shSet start="\<\%(local\)\>\ze[/]\@!" end="$"			matchgroup=shSetListDelim end="\ze[}|);&]" matchgroup=NONE end="\ze\s\+[#=]"	contains=@shIdList
                             endif
                             syn region shSetList oneline matchgroup=shSet start="\<\(export\)\>\ze[/]\@!" end="$"			matchgroup=shSetListDelim end="\ze[}|);&]" matchgroup=NONE end="\ze\s\+[#=]"	contains=@shIdList
                             syn region shSetList oneline matchgroup=shSet start="\<\%(set\|unset\>\)\ze[/a-zA-Z_]\@!" end="\ze[;|#)]\|$"		matchgroup=shSetListDelim end="\ze[}|);&]" matchgroup=NONE end="\ze\s\+[#=]"	contains=@shIdList nextgroup=shComment
    3              0.000005 else
    3              0.000048  syn region shSetList oneline matchgroup=shSet start="\<\(set\|export\|unset\)\>\ze[/a-zA-Z_]\@!" end="\ze[;|#)]\|$"	matchgroup=shSetListDelim end="\ze[}|);&]" matchgroup=NONE end="\ze\s\+[#=]"	contains=@shIdList
    3              0.000002 endif
                            
                            " KornShell namespace: {{{1
    3              0.000008 if exists("b:is_kornshell")
                             syn keyword shFunctionKey namespace skipwhite skipnl nextgroup=shFunctionTwo
    3              0.000002 endif
                            
                            " Functions: {{{1
    3              0.000006 if !exists("b:is_posix")
    3              0.000011  syn keyword shFunctionKey function	skipwhite skipnl nextgroup=shFunctionTwo
    3              0.000002 endif
                            
    3              0.000007 if exists("b:is_bash")
                             ShFoldFunctions syn region shFunctionOne	matchgroup=shFunction start="^\s*[A-Za-z_0-9:][-a-zA-Z_0-9:]*\s*()\_s*{"		end="}"	contains=@shFunctionList		 skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
                             ShFoldFunctions syn region shFunctionTwo	matchgroup=shFunction start="\%(do\)\@!\&\<[A-Za-z_0-9:][-a-zA-Z_0-9:]*\>\s*\%(()\)\=\_s*{"	end="}"	contains=shFunctionKey,@shFunctionList contained skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
                             ShFoldFunctions syn region shFunctionThree	matchgroup=shFunction start="^\s*[A-Za-z_0-9:][-a-zA-Z_0-9:]*\s*()\_s*("		end=")"	contains=@shFunctionList		 skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
                             ShFoldFunctions syn region shFunctionFour	matchgroup=shFunction start="\%(do\)\@!\&\<[A-Za-z_0-9:][-a-zA-Z_0-9:]*\>\s*\%(()\)\=\_s*)"	end=")"	contains=shFunctionKey,@shFunctionList contained skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
    3              0.000004 else
    3              0.000038  ShFoldFunctions syn region shFunctionOne	matchgroup=shFunction start="^\s*\h\w*\s*()\_s*{"			end="}"	contains=@shFunctionList		 skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
    3              0.000035  ShFoldFunctions syn region shFunctionTwo	matchgroup=shFunction start="\%(do\)\@!\&\<\h\w*\>\s*\%(()\)\=\_s*{"		end="}"	contains=shFunctionKey,@shFunctionList contained skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
    3              0.000042  ShFoldFunctions syn region shFunctionThree	matchgroup=shFunction start="^\s*\h\w*\s*()\_s*("			end=")"	contains=@shFunctionList		 skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
    3              0.000029  ShFoldFunctions syn region shFunctionFour	matchgroup=shFunction start="\%(do\)\@!\&\<\h\w*\>\s*\%(()\)\=\_s*("		end=")"	contains=shFunctionKey,@shFunctionList contained skipwhite skipnl nextgroup=shFunctionStart,shQuickComment
    3              0.000002 endif
                            
                            " Parameter Dereferencing: {{{1
                            " ========================
                            " Note: sh04 failure with following line
                            "if !exists("g:sh_no_error") && !(exists("b:is_bash") || exists("b:is_kornshell") || exists("b:is_posix"))
    3              0.000007 if !exists("g:sh_no_error")
    3              0.000008  syn match  shDerefWordError	"[^}$[~]"	contained
    3              0.000002 endif
    3              0.000017 syn match  shDerefSimple	"\$\%(\h\w*\|\d\)"	nextgroup=@shNoZSList
    3              0.000007 if exists("b:is_kornshell")
                             syn region shDeref	matchgroup=PreProc start="\${\ze[^ \t\n<|]" end="}"	contains=@shDerefList,shDerefVarArray nextgroup=shSpecialStart
    3              0.000003 else
    3              0.000023  syn region shDeref	matchgroup=PreProc start="\${" end="}"			contains=@shDerefList,shDerefVarArray nextgroup=shSpecialStart
    3              0.000002 endif
    3              0.000015 syn match  shDerefSimple	"\$[-#*@!?]"	nextgroup=@shNoZSList
    3              0.000011 syn match  shDerefSimple	"\$\$"	nextgroup=@shNoZSList
    3              0.000013 syn match  shDerefSimple	"\${\d}"	nextgroup=@shNoZSList	nextgroup=shSpecialStart
    3              0.000014 if exists("b:is_bash") || exists("b:is_kornshell") || exists("b:is_posix")
                             syn region shDeref	matchgroup=PreProc start="\${##\=" end="}"	contains=@shDerefList	nextgroup=@shSpecialNoZS,shSpecialStart
                             syn region shDeref	matchgroup=PreProc start="\${\$\$" end="}"	contains=@shDerefList	nextgroup=@shSpecialNoZS,shSpecialStart
    3              0.000002 endif
                            
                            " ksh: ${.sh.*} variables: {{{1
                            " ========================================
    3              0.000007 if exists("b:is_kornshell")
                             syn match  shDerefVar	contained	"\.\+"	nextgroup=@shDerefVarList
    3              0.000002 endif
                            
                            " ksh: ${!var[*]} array index list syntax: {{{1
                            " ========================================
    3              0.000009 if exists("b:is_kornshell") || exists("b:is_posix")
                             syn region shDeref	matchgroup=PreProc start="\${!" end="}"	contains=@shDerefVarArray
    3              0.000002 endif
                            
                            " bash: ${!prefix*} and ${#parameter}: {{{1
                            " ====================================
    3              0.000006 if exists("b:is_bash")
                             syn region shDeref	matchgroup=PreProc start="\${!" end="\*\=}"	contains=@shDerefList,shDerefOffset
                             syn match  shDerefVar	contained	"{\@<=!\h\w*"		nextgroup=@shDerefVarList
    3              0.000002 endif
    3              0.000006 if exists("b:is_kornshell")
                             syn match  shDerefVar	contained	"{\@<=!\h\w*[[:alnum:]_.]*"	nextgroup=@shDerefVarList
    3              0.000005 endif
                            
    3              0.000014 syn match  shDerefSpecial	contained	"{\@<=[-*@?0]"		nextgroup=shDerefOp,shDerefOffset,shDerefOpError
    3              0.000017 syn match  shDerefSpecial	contained	"\({[#!]\)\@<=[[:alnum:]*@_]\+"	nextgroup=@shDerefVarList,shDerefOp
    3              0.000012 syn match  shDerefVar	contained	"{\@<=\h\w*"		nextgroup=@shDerefVarList
    3              0.000009 syn match  shDerefVar	contained	'\d'                            nextgroup=@shDerefVarList
    3              0.000009 if exists("b:is_kornshell") || exists("b:is_posix")
                              syn match  shDerefVar	contained	"{\@<=\h\w*[[:alnum:]_.]*"	nextgroup=@shDerefVarList
    3              0.000002 endif
                            
                            " sh ksh bash : ${var[... ]...}  array reference: {{{1
    3              0.000018 syn region  shDerefVarArray   contained	matchgroup=shDeref start="\[" end="]"	contains=@shCommandSubList nextgroup=shDerefOp,shDerefOpError,shDerefOffset
                            
                            " Special ${parameter OPERATOR word} handling: {{{1
                            " sh ksh bash : ${parameter:-word}    word is default value
                            " sh ksh bash : ${parameter:=word}    assign word as default value
                            " sh ksh bash : ${parameter:?word}    display word if parameter is null
                            " sh ksh bash : ${parameter:+word}    use word if parameter is not null, otherwise nothing
                            "    ksh bash : ${parameter#pattern}  remove small left  pattern
                            "    ksh bash : ${parameter##pattern} remove large left  pattern
                            "    ksh bash : ${parameter%pattern}  remove small right pattern
                            "    ksh bash : ${parameter%%pattern} remove large right pattern
                            "        bash : ${parameter^pattern}  Case modification
                            "        bash : ${parameter^^pattern} Case modification
                            "        bash : ${parameter,pattern}  Case modification
                            "        bash : ${parameter,,pattern} Case modification
                            "        bash : ${@:start:qty}        display command line arguments from start to start+qty-1 (inferred)
                            "        bash : ${parameter@operator} transforms parameter (operator∈[uULqEPARa])
    3              0.000014 syn cluster shDerefPatternList	contains=shDerefPattern,shDerefString
    3              0.000008 if !exists("g:sh_no_error")
    3              0.000009  syn match shDerefOpError	contained	":[[:punct:]]"
    3              0.000003 endif
    3              0.000011 syn match  shDerefOp	contained	":\=[-=?]"	nextgroup=@shDerefPatternList
    3              0.000008 syn match  shDerefOp	contained	":\=+"	nextgroup=@shDerefPatternList
    3              0.000012 if exists("b:is_bash") || exists("b:is_kornshell") || exists("b:is_posix")
                             syn match  shDerefOp	contained	"#\{1,2}"		nextgroup=@shDerefPatternList
                             syn match  shDerefOp	contained	"%\{1,2}"		nextgroup=@shDerefPatternList
                             syn match  shDerefPattern	contained	"[^{}]\+"		contains=shDeref,shDerefSimple,shDerefPattern,shDerefString,shCommandSub,shDerefEscape nextgroup=shDerefPattern
                             syn region shDerefPattern	contained	start="{" end="}"	contains=shDeref,shDerefSimple,shDerefString,shCommandSub nextgroup=shDerefPattern
                             syn match  shDerefEscape	contained	'\%(\\\\\)*\\.'
    3              0.000003 endif
    3              0.000008 if exists("b:is_bash")
                             syn match  shDerefOp	contained	"[,^]\{1,2}"	nextgroup=@shDerefPatternList
                             syn match  shDerefOp	contained	"@[uULQEPAKa]"
    3              0.000004 endif
    3              0.000018 syn region shDerefString	contained	matchgroup=shDerefDelim start=+\%(\\\)\@<!'+ end=+'+	contains=shStringSpecial
    3              0.000021 syn region shDerefString	contained	matchgroup=shDerefDelim start=+\%(\\\)\@<!"+ skip=+\\"+ end=+"+	contains=@shDblQuoteList,shStringSpecial
    3              0.000007 syn match  shDerefString	contained	"\\["']"	nextgroup=shDerefPattern
                            
    3              0.000013 if exists("b:is_bash") || exists("b:is_kornshell") || exists("b:is_posix")
                             " bash ksh posix : ${parameter:offset}
                             " bash ksh posix : ${parameter:offset:length}
                             syn region shDerefOffset	contained	start=':[^-=?+]' end='\ze:'	end='\ze}'	contains=shDeref,shDerefSimple,shDerefEscape	nextgroup=shDerefLen,shDeref,shDerefSimple
                             syn region shDerefOffset	contained	start=':\s-'	end='\ze:'	end='\ze}'	contains=shDeref,shDerefSimple,shDerefEscape	nextgroup=shDerefLen,shDeref,shDerefSimple
                             syn match  shDerefLen	contained	":[^}]\+"	contains=shDeref,shDerefSimple,shArithmetic
    3              0.000002 endif
                            
    3              0.000007 if exists("b:is_bash")
                             " bash : ${parameter//pattern/string}
                             " bash : ${parameter//pattern}
                             syn match  shDerefPPS	contained	'/\{1,2}'	nextgroup=shDerefPPSleft
                             syn region shDerefPPSleft	contained	start='.'	skip=@\%(\\\\\)*\\/@ matchgroup=shDerefOp	end='/' end='\ze}' end='"'	nextgroup=shDerefPPSright	contains=@shPPSLeftList
                             syn region shDerefPPSright	contained	start='.'	skip=@\%(\\\\\)\+@		end='\ze}'				contains=@shPPSRightList
                            
                             " bash : ${parameter/#substring/replacement}
                             syn match  shDerefPSR	contained	'/#'	nextgroup=shDerefPSRleft,shDoubleQuote,shSingleQuote
                             syn region shDerefPSRleft	contained	start='[^"']'	skip=@\%(\\\\\)*\\/@ matchgroup=shDerefOp	end='/' end='\ze}'	nextgroup=shDerefPSRright
                             syn region shDerefPSRright	contained	start='.'	skip=@\%(\\\\\)\+@		end='\ze}'
    3              0.000002 endif
                            
                            " Arithmetic Parenthesized Expressions: {{{1
                            "syn region shParen matchgroup=shArithRegion start='[^$]\zs(\%(\ze[^(]\|$\)' end=')' contains=@shArithParenList
    3              0.000023 syn region shParen matchgroup=shArithRegion start='\$\@!(\%(\ze[^(]\|$\)' end=')' contains=@shArithParenList
                            
                            " Additional sh Keywords: {{{1
                            " ===================
    3              0.000024 syn keyword shStatement break cd chdir continue eval exec exit kill newgrp pwd read readonly return shift test trap ulimit umask wait
    3              0.000006 syn keyword shConditional contained elif else then
    3              0.000009 if !exists("g:sh_no_error")
    3              0.000009  syn keyword shCondError elif else then
    3              0.000002 endif
                            
                            " Additional ksh Keywords and Aliases: {{{1
                            " ===================================
    3              0.000010 if exists("b:is_kornshell") || exists("b:is_posix")
                             syn keyword shStatement bg builtin disown enum export false fg getconf getopts hist jobs let printf sleep true unalias whence
                             syn keyword shStatement typeset skipwhite nextgroup=shSetOption
                             syn keyword shStatement autoload compound fc float functions hash history integer nameref nohup r redirect source stop suspend times type
                             if exists("b:is_posix")
                              syn keyword shStatement command
                             else
                              syn keyword shStatement time
                             endif
                            
                            " Additional bash Keywords: {{{1
                            " =====================
    3              0.000006 elseif exists("b:is_bash")
                             syn keyword shStatement bg builtin disown export false fg getopts jobs let printf sleep true unalias
                             syn keyword shStatement typeset nextgroup=shSetOption
                             syn keyword shStatement fc hash history source suspend times type
                             syn keyword shStatement bind builtin caller compopt declare dirs disown enable export help logout local mapfile popd pushd readarray shopt source typeset
    3              0.000002 else
    3              0.000008  syn keyword shStatement login newgrp
    3              0.000002 endif
                            
                            " Synchronization: {{{1
                            " ================
    3              0.000006 if !exists("g:sh_minlines")
    3              0.000008  let s:sh_minlines = 200
                            else
                             let s:sh_minlines= g:sh_minlines
    3              0.000002 endif
    3              0.000006 if !exists("g:sh_maxlines")
    3              0.000008  let s:sh_maxlines = 2*s:sh_minlines
    3              0.000005  if s:sh_maxlines < 25
                              let s:sh_maxlines= 25
    3              0.000002  endif
                            else
                             let s:sh_maxlines= g:sh_maxlines
    3              0.000002 endif
    3              0.000019 exec "syn sync minlines=" . s:sh_minlines . " maxlines=" . s:sh_maxlines
    3              0.000022 syn sync match shCaseEsacSync	grouphere	shCaseEsac	"\<case\>"
    3              0.000016 syn sync match shCaseEsacSync	groupthere	shCaseEsac	"\<esac\>"
    3              0.000011 syn sync match shDoSync	grouphere	shDo	"\<do\>"
    3              0.000011 syn sync match shDoSync	groupthere	shDo	"\<done\>"
    3              0.000012 syn sync match shForSync	grouphere	shFor	"\<for\>"
    3              0.000010 syn sync match shForSync	groupthere	shFor	"\<in\>"
    3              0.000010 syn sync match shIfSync	grouphere	shIf	"\<if\>"
    3              0.000010 syn sync match shIfSync	groupthere	shIf	"\<fi\>"
    3              0.000012 syn sync match shUntilSync	grouphere	shRepeat	"\<until\>"
    3              0.000010 syn sync match shWhileSync	grouphere	shRepeat	"\<while\>"
                            
                            " Default Highlighting: {{{1
                            " =====================
    3              0.000008 if !exists("skip_sh_syntax_inits")
    3              0.000006  hi def link shArithRegion	shShellVariables
    3              0.000004  hi def link shAstQuote	shDoubleQuote
    3              0.000003  hi def link shAtExpr	shSetList
    3              0.000004  hi def link shBkslshSnglQuote	shSingleQuote
    3              0.000004  hi def link shBkslshDblQuote	shDOubleQuote
    3              0.000003  hi def link shBeginHere	shRedir
    3              0.000003  hi def link shCaseBar	shConditional
    3              0.000004  hi def link shCaseCommandSub	shCommandSub
    3              0.000003  hi def link shCaseDoubleQuote	shDoubleQuote
    3              0.000003  hi def link shCaseIn	shConditional
    3              0.000004  hi def link shQuote	shOperator
    3              0.000003  hi def link shCaseSingleQuote	shSingleQuote
    3              0.000003  hi def link shCaseStart	shConditional
    3              0.000003  hi def link shCmdSubRegion	shShellVariables
    3              0.000007  hi def link shColon	shComment
    3              0.000003  hi def link shDerefOp	shOperator
    3              0.000003  hi def link shDerefPOL	shDerefOp
    3              0.000003  hi def link shDerefPPS	shDerefOp
    3              0.000003  hi def link shDerefPSR	shDerefOp
    3              0.000003  hi def link shDeref	shShellVariables
    3              0.000003  hi def link shDerefDelim	shOperator
    3              0.000003  hi def link shDerefSimple	shDeref
    3              0.000004  hi def link shDerefSpecial	shDeref
    3              0.000003  hi def link shDerefString	shDoubleQuote
    3              0.000003  hi def link shDerefVar	shDeref
    3              0.000003  hi def link shDoubleQuote	shString
    3              0.000003  hi def link shEcho	shString
    3              0.000003  hi def link shEchoDelim	shOperator
    3              0.000003  hi def link shEchoQuote	shString
    3              0.000003  hi def link shForPP	shLoop
    3              0.000003  hi def link shFunction	Function
    3              0.000003  hi def link shEmbeddedEcho	shString
    3              0.000003  hi def link shEscape	shCommandSub
    3              0.000004  hi def link shExDoubleQuote	shDoubleQuote
    3              0.000003  hi def link shExSingleQuote	shSingleQuote
    3              0.000003  hi def link shHereDoc	shString
    3              0.000003  hi def link shHereString	shRedir
    3              0.000003  hi def link shHerePayload	shHereDoc
    3              0.000003  hi def link shLoop	shStatement
    3              0.000003  hi def link shSpecialNxt	shSpecial
    3              0.000003  hi def link shNoQuote	shDoubleQuote
    3              0.000004  hi def link shOption	shCommandSub
    3              0.000003  hi def link shPattern	shString
    3              0.000003  hi def link shParen	shArithmetic
    3              0.000003  hi def link shPosnParm	shShellVariables
    3              0.000004  hi def link shQuickComment	shComment
    3              0.000003  hi def link shBQComment	shComment
    3              0.000003  hi def link shRange	shOperator
    3              0.000007  hi def link shRedir	shOperator
    3              0.000008  hi def link shSetListDelim	shOperator
    3              0.000003  hi def link shSetOption	shOption
    3              0.000003  hi def link shSingleQuote	shString
    3              0.000036  hi def link shSource	shOperator
    3              0.000003  hi def link shStringSpecial	shSpecial
    3              0.000003  hi def link shSpecialStart	shSpecial
    3              0.000004  hi def link shSubShRegion	shOperator
    3              0.000003  hi def link shTestOpr	shConditional
    3              0.000003  hi def link shTestPattern	shString
    3              0.000004  hi def link shTestDoubleQuote	shString
    3              0.000003  hi def link shTestSingleQuote	shString
    3              0.000003  hi def link shTouchCmd	shStatement
    3              0.000003  hi def link shVariable	shSetList
    3              0.000003  hi def link shWrapLineOperator	shOperator
                            
    3              0.000011  if exists("b:is_bash")
                               hi def link bashAdminStatement	shStatement
                               hi def link bashSpecialVariables	shShellVariables
                               hi def link bashStatement		shStatement
                               hi def link shCharClass		shSpecial
                               hi def link shDerefOffset		shDerefOp
                               hi def link shDerefLen		shDerefOffset
    3              0.000002  endif
    3              0.000009  if exists("b:is_kornshell") || exists("b:is_posix")
                               hi def link kshSpecialVariables	shShellVariables
                               hi def link kshStatement		shStatement
    3              0.000002  endif
                            
    3              0.000005  if !exists("g:sh_no_error")
    3              0.000004   hi def link shCaseError		Error
    3              0.000004   hi def link shCondError		Error
    3              0.000003   hi def link shCurlyError		Error
    3              0.000003   hi def link shDerefOpError		Error
    3              0.000003   hi def link shDerefWordError		Error
    3              0.000003   hi def link shDoError		Error
    3              0.000003   hi def link shEsacError		Error
    3              0.000003   hi def link shIfError		Error
    3              0.000003   hi def link shInError		Error
    3              0.000003   hi def link shParenError		Error
    3              0.000003   hi def link shTestError		Error
    3              0.000008   if exists("b:is_kornshell") || exists("b:is_posix")
                                hi def link shDTestError		Error
    3              0.000002   endif
    3              0.000002  endif
                            
    3              0.000003  hi def link shArithmetic		Special
    3              0.000003  hi def link shCharClass		Identifier
    3              0.000003  hi def link shSnglCase		Statement
    3              0.000003  hi def link shCommandSub		Special
    3              0.000003  hi def link shCommandSubBQ		shCommandSub
    3              0.000003  hi def link shSubshare		shCommandSub
    3              0.000003  hi def link shValsub		shCommandSub
    3              0.000003  hi def link shComment		Comment
    3              0.000003  hi def link shConditional		Conditional
    3              0.000003  hi def link shCtrlSeq		Special
    3              0.000003  hi def link shExprRegion		Delimiter
    3              0.000004  hi def link shFunctionKey		Function
    3              0.000003  hi def link shFunctionName		Function
    3              0.000003  hi def link shNumber		Number
    3              0.000003  hi def link shOperator		Operator
    3              0.000003  hi def link shRepeat		Repeat
    3              0.000003  hi def link shSet		Statement
    3              0.000003  hi def link shSetList		Identifier
    3              0.000003  hi def link shShellVariables		PreProc
    3              0.000010  hi def link shSpecial		Special
    3              0.000003  hi def link shSpecialDQ		Special
    3              0.000003  hi def link shSpecialSQ		Special
    3              0.000003  hi def link shSpecialNoZS		shSpecial
    3              0.000003  hi def link shStatement		Statement
    3              0.000008  hi def link shString		String
    3              0.000003  hi def link shTodo		Todo
    3              0.000003  hi def link shAlias		Identifier
    3              0.000003  hi def link shHereDoc01		shRedir
    3              0.000003  hi def link shHereDoc02		shRedir
    3              0.000003  hi def link shHereDoc03		shRedir
    3              0.000003  hi def link shHereDoc04		shRedir
    3              0.000003  hi def link shHereDoc05		shRedir
    3              0.000003  hi def link shHereDoc06		shRedir
    3              0.000003  hi def link shHereDoc07		shRedir
    3              0.000003  hi def link shHereDoc08		shRedir
    3              0.000003  hi def link shHereDoc09		shRedir
    3              0.000003  hi def link shHereDoc10		shRedir
    3              0.000003  hi def link shHereDoc11		shRedir
    3              0.000003  hi def link shHereDoc12		shRedir
    3              0.000003  hi def link shHereDoc13		shRedir
    3              0.000003  hi def link shHereDoc14		shRedir
    3              0.000003  hi def link shHereDoc15		shRedir
    3              0.000006  hi def link shHereDoc16		shRedir
    3              0.000002 endif
                            
                            " Delete shell folding commands {{{1
                            " =============================
    3              0.000006 delc ShFoldFunctions
    3              0.000003 delc ShFoldHereDoc
    3              0.000003 delc ShFoldIfDoFor
                            
                            " Set Current Syntax: {{{1
                            " ===================
    3              0.000024 if exists("b:is_bash")
                             let b:current_syntax = "bash"
    3              0.000006 elseif exists("b:is_kornshell")
                             let b:current_syntax = "ksh"
    3              0.000006 elseif exists("b:is_posix")
                             let b:current_syntax = "posix"
    3              0.000002 else
    3              0.000006  let b:current_syntax = "sh"
    3              0.000002 endif
                            
                            " vim: ts=16 fdm=marker

FUNCTION  <SNR>14_SynSet()
    Defined: C:\Program Files\Neovim\share\nvim\runtime\syntax\synload.vim:27
Called 1 time
Total time:   0.001477
 Self time:   0.001477

count  total (s)   self (s)
                              " clear syntax for :set syntax=OFF  and any syntax name that doesn't exist
    1              0.000002   syn clear
    1              0.000001   if exists("b:current_syntax")
                                unlet b:current_syntax
    1              0.000000   endif
                            
    1              0.000002   0verbose let s = expand("<amatch>")
    1              0.000001   if s == "ON"
                                " :set syntax=ON
                                if &filetype == ""
                                  echohl ErrorMsg
                                  echo "filetype unknown"
                                  echohl None
                                endif
                                let s = &filetype
    1              0.000001   elseif s == "OFF"
                                let s = ""
    1              0.000000   endif
                            
    1              0.000001   if s != ""
                                " Load the syntax file(s).  When there are several, separated by dots,
                                " load each in sequence.  Skip empty entries.
    2              0.000005     for name in split(s, '\.')
    1              0.000002       if !empty(name)
                                    " XXX: "[.]" in the first pattern makes it a wildcard on Windows
    1              0.001448         exe $'runtime! syntax/{name}[.]{{vim,lua}} syntax/{name}/*.{{vim,lua}}'
    1              0.000001       endif
    2              0.000002     endfor
    1              0.000000   endif

FUNCTION  <SNR>1_LoadFTPlugin()
    Defined: C:\Program Files\Neovim\share\nvim\runtime\ftplugin.vim:15
Called 1 time
Total time:   0.002546
 Self time:   0.002546

count  total (s)   self (s)
    1              0.000008     if exists("b:undo_ftplugin")
                                  exe b:undo_ftplugin
                                  unlet! b:undo_ftplugin b:did_ftplugin
    1              0.000000     endif
                            
    1              0.000003     let s = expand("<amatch>")
    1              0.000001     if s != ""
    1              0.000003       if &cpo =~# "S" && exists("b:did_ftplugin")
                            	" In compatible mode options are reset to the global values, need to
                            	" set the local values also when a plugin was already used.
                            	unlet b:did_ftplugin
    1              0.000000       endif
                            
                                  " When there is a dot it is used to separate filetype names.  Thus for
                                  " "aaa.bbb" load "aaa" and then "bbb".
    2              0.000005       for name in split(s, '\.')
                                    " Load Lua ftplugins after Vim ftplugins _per directory_
                                    " TODO(clason): use nvim__get_runtime when supports globs and modeline
                                    " XXX: "[.]" in the first pattern makes it a wildcard on Windows
    1              0.002510         exe $'runtime! ftplugin/{name}[.]{{vim,lua}} ftplugin/{name}_*.{{vim,lua}} ftplugin/{name}/*.{{vim,lua}}'
    2              0.000002       endfor
    1              0.000000     endif

FUNCTION  <SNR>43_CheckRmdFencedLanguages()
    Defined: C:\Program Files\Neovim\share\nvim\runtime\syntax\rmd.vim:199
Called 1 time
Total time:   0.000031
 Self time:   0.000031

count  total (s)   self (s)
    1              0.000004   let alines = getline(1, '$')
    1              0.000006   call filter(alines, "v:val =~ '^```{'")
    1              0.000002   call map(alines, "substitute(v:val, '^```{', '', '')")
    1              0.000001   call map(alines, "substitute(v:val, '\\W.*', '', '')")
    1              0.000001   for tpy in alines
                                if len(tpy) == 0
                                  continue
                                endif
                                let has_lng = 0
                                for lng in g:rmd_fenced_languages
                                  if tpy == lng
                                    let has_lng = 1
                                    continue
                                  endif
                                endfor
                                if has_lng == 0
                                  let g:rmd_fenced_languages += [tpy]
                                  call s:IncludeLanguage(tpy)
                                endif
    1              0.000001   endfor
                            
    1              0.000002   if hlexists('pandocLaTeXCommand')
    1              0.000001     return
                              endif
                              if g:rmd_include_latex
                                if !b:rmd_has_LaTeX && (search('\$\$', 'wn') > 0 || search('\\begin{', 'wn') > 0) || search('\\[[:alpha:]]\+', 'wn') || search('\$[^\$]\+\$', 'wn')
                                  let b:rmd_has_LaTeX = v:true
                                endif
                                if b:rmd_has_LaTeX && !s:LaTeX_included
                                  call s:IncludeLaTeX()
                                endif
                              endif

FUNCTION  <SNR>43_IncludeLanguage()
    Defined: C:\Program Files\Neovim\share\nvim\runtime\syntax\rmd.vim:148
Called 1 time
Total time:   0.002864
 Self time:   0.002017

count  total (s)   self (s)
    1              0.000003   if a:lng =~ '='
                                let ftpy = substitute(a:lng, '.*=', '', '')
                                let lnm = substitute(a:lng, '=.*', '', '')
    1              0.000001   else
    1              0.000002     let ftpy = a:lng
    1              0.000001     let lnm  = a:lng
    1              0.000001   endif
    1              0.000003   if index(s:no_syntax_vim, ftpy) >= 0
                                return
    1              0.000000   endif
    1              0.000959   if len(globpath(&rtp, "syntax/" . ftpy . ".vim"))
    1              0.000003     unlet! b:current_syntax
    1   0.001828   0.000981     exe 'syn include @Rmd'.lnm.' syntax/'.ftpy.'.vim'
    1              0.000002     let b:current_syntax = "rmd"
    1              0.000001     if g:rmd_syn_hl_chunk
                                  exe 'syn match knitrChunkDelim /```\s*{\s*'.lnm.'/ contained containedin=knitrChunkBrace contains=knitrChunkLabel'
                                  exe 'syn match knitrChunkLabelDelim /```\s*{\s*'.lnm.',\=\s*[-[:alnum:]]\{-1,}[,}]/ contained containedin=knitrChunkBrace'
                                  syn match knitrChunkDelim /}\s*$/ contained containedin=knitrChunkBrace
                                  exe 'syn match knitrChunkBrace /```\s*{\s*'.lnm.'.*$/ contained containedin=rmd'.lnm.'Chunk contains=knitrChunkDelim,knitrChunkLabelDelim,@Rmd'.lnm
                                  exe 'syn region rmd'.lnm.'Chunk start="^\s*```\s*{\s*=\?'.lnm.'\>.*$" matchgroup=rmdCodeDelim end="^\s*```\ze\s*$" keepend contains=knitrChunkBrace,@Rmd'.lnm
                            
                                  hi link knitrChunkLabel Identifier
                                  hi link knitrChunkDelim rmdCodeDelim
                                  hi link knitrChunkLabelDelim rmdCodeDelim
    1              0.000000     else
    1              0.000014       exe 'syn region rmd'.lnm.'Chunk matchgroup=rmdCodeDelim start="^\s*```\s*{\s*=\?'.lnm.'\>.*$" matchgroup=rmdCodeDelim end="^\s*```\ze\s*$" keepend contains=@Rmd'.lnm
    1              0.000000     endif
                              else
                                " Avoid the cost of running globpath() whenever the buffer is saved
                                let s:no_syntax_vim += [ftpy]
    1              0.000000   endif

FUNCTION  <SNR>8_Highlight_Matching_Pair()
    Defined: C:\Program Files\Neovim\share/nvim/runtime/plugin/matchparen.vim:44
Called 1055 times
Total time:   0.205958
 Self time:   0.181206

count  total (s)   self (s)
 1055              0.010669   if !exists("w:matchparen_ids")
                                let w:matchparen_ids = []
 1055              0.001317   endif
                              " Remove any previous match.
 1055   0.034551   0.009799   call s:Remove_Matches()
                            
                              " Avoid that we remove the popup menu.
                              " Return when there are no colors (looks like the cursor jumps).
 1055              0.007121   if pumvisible() || (&t_Co < 8 && !has("gui_running"))
                                return
 1055              0.000604   endif
                            
                              " Get the character under the cursor and check if it's in 'matchpairs'.
 1055              0.004646   let c_lnum = line('.')
 1055              0.003315   let c_col = col('.')
 1055              0.001546   let before = 0
                            
 1055              0.004216   let text = getline(c_lnum)
 1055              0.023806   let matches = matchlist(text, '\(.\)\=\%'.c_col.'c\(.\=\)')
 1055              0.003117   if empty(matches)
                                let [c_before, c] = ['', '']
 1055              0.001030   else
 1055              0.005988     let [c_before, c] = matches[1:2]
 1055              0.000776   endif
 1055              0.017794   let plist = split(&matchpairs, '.\zs[:,]')
 1055              0.004478   let i = index(plist, c)
 1055              0.001473   if i < 0
                                " not found, in Insert mode try character before the cursor
  871              0.004048     if c_col > 1 && (mode() == 'i' || mode() == 'R')
  257              0.000615       let before = strlen(c_before)
  257              0.000272       let c = c_before
  257              0.000461       let i = index(plist, c)
  871              0.000605     endif
  871              0.000985     if i < 0
                                  " not found, nothing to do
  870              0.001103       return
    1              0.000000     endif
  185              0.000087   endif
                            
                              " Figure out the arguments for searchpairpos().
  185              0.000240   if i % 2 == 0
   13              0.000023     let s_flags = 'nW'
   13              0.000040     let c2 = plist[i + 1]
  172              0.000080   else
  172              0.000256     let s_flags = 'nbW'
  172              0.000229     let c2 = c
  172              0.000372     let c = plist[i - 1]
  185              0.000087   endif
  185              0.000265   if c == '['
                                let c = '\['
                                let c2 = '\]'
  185              0.000076   endif
                            
                              " Find the match.  When it was just before the cursor move it there for a
                              " moment.
  185              0.000199   if before > 0
    1              0.000002     let has_getcurpos = exists("*getcurpos")
    1              0.000001     if has_getcurpos
                                  " getcurpos() is more efficient but doesn't exist before 7.4.313.
    1              0.000002       let save_cursor = getcurpos()
                                else
                                  let save_cursor = winsaveview()
    1              0.000000     endif
    1              0.000002     call cursor(c_lnum, c_col - before)
  185              0.000096   endif
                            
  185              0.003018   if !has("syntax") || !exists("g:syntax_on")
                                let s_skip = "0"
  185              0.000094   else
                                " Build an expression that detects whether the current cursor position is
                                " in certain syntax types (string, comment, etc.), for use as
                                " searchpairpos()'s skip argument.
                                " We match "escape" for special items, such as lispEscapeSpecial, and
                                " match "symbol" for lispBarSymbol.
  185              0.000822     let s_skip = 'synstack(".", col("."))' . '->indexof({_, id -> synIDattr(id, "name") =~? ' . '"string\\|character\\|singlequote\\|escape\\|symbol\\|comment"}) >= 0'
                                " If executing the expression determines that the cursor is currently in
                                " one of the syntax types, then we want searchpairpos() to find the pair
                                " within those syntax types (i.e., not skip).  Otherwise, the cursor is
                                " outside of the syntax types and s_skip should keep its value so we skip
                                " any matching pair inside the syntax types.
                                " Catch if this throws E363: pattern uses more memory than 'maxmempattern'.
  185              0.000229     try
  185              0.004265       execute 'if ' . s_skip . ' | let s_skip = "0" | endif'
                                catch /^Vim\%((\a\+)\)\=:E363/
                                  " We won't find anything, so skip searching, should keep Vim responsive.
                                  return
  185              0.000186     endtry
  185              0.000088   endif
                            
                              " Limit the search to lines visible in the window.
  185              0.001221   let stoplinebottom = line('w$')
  185              0.000431   let stoplinetop = line('w0')
  185              0.000209   if i % 2 == 0
   13              0.000046     let stopline = stoplinebottom
  172              0.000083   else
  172              0.000425     let stopline = stoplinetop
  185              0.000082   endif
                            
                              " Limit the search time to 300 msec to avoid a hang on very long lines.
                              " This fails when a timeout is not supported.
  185              0.000601   if mode() == 'i' || mode() == 'R'
  125              0.000527     let timeout = exists("b:matchparen_insert_timeout") ? b:matchparen_insert_timeout : g:matchparen_insert_timeout
   60              0.000037   else
   60              0.000382     let timeout = exists("b:matchparen_timeout") ? b:matchparen_timeout : g:matchparen_timeout
  185              0.000084   endif
  185              0.000118   try
  185              0.007212     let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline, timeout)
                              catch /E118/
                                " Can't use the timeout, restrict the stopline a bit more to avoid taking
                                " a long time on closed folds and long lines.
                                " The "viewable" variables give a range in which we can scroll while
                                " keeping the cursor at the same position.
                                " adjustedScrolloff accounts for very large numbers of scrolloff.
                                let adjustedScrolloff = min([&scrolloff, (line('w$') - line('w0')) / 2])
                                let bottom_viewable = min([line('$'), c_lnum + &lines - adjustedScrolloff - 2])
                                let top_viewable = max([1, c_lnum-&lines+adjustedScrolloff + 2])
                                " one of these stoplines will be adjusted below, but the current values are
                                " minimal boundaries within the current window
                                if i % 2 == 0
                                  if has("byte_offset") && has("syntax_items") && &smc > 0
                            	let stopbyte = min([line2byte("$"), line2byte(".") + col(".") + &smc * 2])
                            	let stopline = min([bottom_viewable, byte2line(stopbyte)])
                                  else
                            	let stopline = min([bottom_viewable, c_lnum + 100])
                                  endif
                                  let stoplinebottom = stopline
                                else
                                  if has("byte_offset") && has("syntax_items") && &smc > 0
                            	let stopbyte = max([1, line2byte(".") + col(".") - &smc * 2])
                            	let stopline = max([top_viewable, byte2line(stopbyte)])
                                  else
                            	let stopline = max([top_viewable, c_lnum - 100])
                                  endif
                                  let stoplinetop = stopline
                                endif
                                let [m_lnum, m_col] = searchpairpos(c, '', c2, s_flags, s_skip, stopline)
  185              0.000154   endtry
                            
  185              0.000214   if before > 0
    1              0.000000     if has_getcurpos
    1              0.000002       call setpos('.', save_cursor)
                                else
                                  call winrestview(save_cursor)
    1              0.000000     endif
  185              0.000082   endif
                            
                              " If a match is found setup match highlighting.
  185              0.000502   if m_lnum > 0 && m_lnum >= stoplinetop && m_lnum <= stoplinebottom 
  172              0.000238     if s:has_matchaddpos
  172              0.001847       call add(w:matchparen_ids, matchaddpos('MatchParen', [[c_lnum, c_col - before], [m_lnum, m_col]], 10))
                                else
                                  exe '3match MatchParen /\(\%' . c_lnum . 'l\%' . (c_col - before) . 'c\)\|\(\%' . m_lnum . 'l\%' . m_col . 'c\)/'
                                  call add(w:matchparen_ids, 3)
  172              0.000081     endif
  172              0.000281     let w:paren_hl_on = 1
  185              0.000101   endif

FUNCTION  <SNR>44_WithConceal()
    Defined: C:\Program Files\Neovim\share\nvim\runtime\syntax\pandoc.vim:204
Called 41 times
Total time:   0.000459
 Self time:   0.000459

count  total (s)   self (s)
   41              0.000030     let l:rule_tail = ''
   41              0.000029     if g:pandoc#syntax#conceal#use != 0
   41              0.000065         if index(g:pandoc#syntax#conceal#blacklist, a:rule_group) == -1
   41              0.000040             let l:rule_tail = ' ' . a:conceal_rule
   41              0.000010         endif
   41              0.000008     endif
   41              0.000246     execute a:rule . l:rule_tail

FUNCTION  nvim_treesitter#foldexpr()
    Defined: ~\AppData\Local\nvim-data\lazy\nvim-treesitter\autoload\nvim_treesitter.vim:5
Called 708 times
Total time:   0.083470
 Self time:   0.083470

count  total (s)   self (s)
  708              0.083079 	return luaeval(printf('require"nvim-treesitter.fold".get_fold_indic(%d)', v:lnum))

FUNCTION  <SNR>44_SetupPandocHighlights()
    Defined: C:\Program Files\Neovim\share\nvim\runtime\syntax\pandoc.vim:569
Called 1 time
Total time:   0.000230
 Self time:   0.000230

count  total (s)   self (s)
                            
    1              0.000002   hi def link pandocOperator Operator
                            
                              " override this for consistency
    1              0.000007   hi pandocTitleBlock term=italic gui=italic
    1              0.000001   hi def link pandocTitleBlockTitle Directory
    1              0.000001   hi def link pandocAtxHeader Title
    1              0.000001   hi def link pandocAtxStart Operator
    1              0.000001   hi def link pandocSetexHeader Title
    1              0.000001   hi def link pandocHeaderAttr Comment
    1              0.000001   hi def link pandocHeaderID Identifier
                            
    1              0.000001   hi def link pandocLaTexSectionCmd texSection
    1              0.000001   hi def link pandocLaTeXDelimiter texDelimiter
                            
    1              0.000001   hi def link pandocHTMLComment Comment
    1              0.000001   hi def link pandocHTMLCommentStart Delimiter
    1              0.000001   hi def link pandocHTMLCommentEnd Delimiter
    1              0.000001   hi def link pandocBlockQuote Comment
    1              0.000001   hi def link pandocBlockQuoteMark Comment
    1              0.000001   hi def link pandocAmpersandEscape Special
                            
                              " if the user sets g:pandoc#syntax#codeblocks#ignore to contain
                              " a codeblock type, don't highlight it so that it remains Normal
    1              0.000005   if index(g:pandoc#syntax#codeblocks#ignore, 'definition') == -1
    1              0.000001     hi def link pandocCodeBlockInsideIndent String
    1              0.000001   endif
                            
    1              0.000003   if index(g:pandoc#syntax#codeblocks#ignore, 'delimited') == -1
    1              0.000001     hi def link pandocDelimitedCodeBlock Special
    1              0.000000   endif
                            
    1              0.000001   hi def link pandocDelimitedCodeBlockStart Delimiter
    1              0.000001   hi def link pandocDelimitedCodeBlockEnd Delimiter
    1              0.000001   hi def link pandocDelimitedCodeBlockLanguage Comment
    1              0.000001   hi def link pandocBlockQuoteinDelimitedCodeBlock pandocBlockQuote
    1              0.000001   hi def link pandocCodePre String
                            
    1              0.000001   hi def link pandocLineBlockDelimiter Delimiter
                            
    1              0.000001   hi def link pandocListItemBullet Operator
    1              0.000001   hi def link pandocUListItemBullet Operator
    1              0.000001   hi def link pandocListItemBulletId Identifier
                            
    1              0.000001   hi def link pandocReferenceLabel Label
    1              0.000001   hi def link pandocReferenceURL Underlined
    1              0.000001   hi def link pandocLinkTip Identifier
    1              0.000001   hi def link pandocImageIcon Operator
                            
    1              0.000001   hi def link pandocReferenceDefinition Operator
    1              0.000001   hi def link pandocReferenceDefinitionLabel Label
    1              0.000001   hi def link pandocReferenceDefinitionAddress Underlined
    1              0.000001   hi def link pandocReferenceDefinitionTip Identifier
                            
    1              0.000001   hi def link pandocAutomaticLink Underlined
                            
    1              0.000001   hi def link pandocDefinitionBlockTerm Identifier
    1              0.000001   hi def link pandocDefinitionBlockMark Operator
                            
    1              0.000001   hi def link pandocSimpleTableDelims Delimiter
    1              0.000001   hi def link pandocSimpleTableHeader pandocStrong
    1              0.000001   hi def link pandocTableMultilineHeader pandocStrong
    1              0.000001   hi def link pandocTableDelims Delimiter
    1              0.000001   hi def link pandocGridTableDelims Delimiter
    1              0.000001   hi def link pandocGridTableHeader Delimiter
    1              0.000001   hi def link pandocPipeTableDelims Delimiter
    1              0.000001   hi def link pandocPipeTableHeader Delimiter
    1              0.000001   hi def link pandocTableHeaderWord pandocStrong
                            
    1              0.000001   hi def link pandocAbbreviationHead Type
    1              0.000001   hi def link pandocAbbreviation Label
    1              0.000001   hi def link pandocAbbreviationTail Type
    1              0.000001   hi def link pandocAbbreviationSeparator Identifier
    1              0.000001   hi def link pandocAbbreviationDefinition Comment
                            
    1              0.000001   hi def link pandocFootnoteID Label
    1              0.000001   hi def link pandocFootnoteIDHead Type
    1              0.000001   hi def link pandocFootnoteIDTail Type
    1              0.000001   hi def link pandocFootnoteDef Comment
    1              0.000001   hi def link pandocFootnoteDefHead Type
    1              0.000001   hi def link pandocFootnoteDefTail Type
    1              0.000001   hi def link pandocFootnoteBlock Comment
    1              0.000001   hi def link pandocFootnoteBlockSeparator Operator
                            
    1              0.000001   hi def link pandocPCite Operator
    1              0.000001   hi def link pandocICite Operator
    1              0.000001   hi def link pandocCiteKey Label
    1              0.000001   hi def link pandocCiteAnchor Operator
    1              0.000001   hi def link pandocCiteLocator Operator
                            
    1              0.000002   if g:pandoc#syntax#style#emphases == 1
    1              0.000006       hi pandocEmphasis gui=italic cterm=italic
    1              0.000006       hi pandocStrong gui=bold cterm=bold
    1              0.000009       hi pandocStrongEmphasis gui=bold,italic cterm=bold,italic
    1              0.000008       hi pandocStrongInEmphasis gui=bold,italic cterm=bold,italic
    1              0.000009       hi pandocEmphasisInStrong gui=bold,italic cterm=bold,italic
    1              0.000003       if !exists('s:hi_tail')
                                      let s:fg = '' " Vint can't figure ou these get set dynamically
                                      let s:bg = '' " so initialize them manually first
                                      for s:i in ['fg', 'bg']
                                          let s:tmp_val = synIDattr(synIDtrans(hlID('String')), s:i)
                                          let s:tmp_ui =  has('gui_running') || (has('termguicolors') && &termguicolors) ? 'gui' : 'cterm'
                                          if !empty(s:tmp_val) && s:tmp_val != -1
                                              exe 'let s:'.s:i . ' = "'.s:tmp_ui.s:i.'='.s:tmp_val.'"'
                                          else
                                              exe 'let s:'.s:i . ' = ""'
                                          endif
                                      endfor
                                      let s:hi_tail = ' '.s:fg.' '.s:bg
    1              0.000000       endif
    1              0.000010       exe 'hi pandocNoFormattedInEmphasis gui=italic cterm=italic'.s:hi_tail
    1              0.000008       exe 'hi pandocNoFormattedInStrong gui=bold cterm=bold'.s:hi_tail
    1              0.000001   endif
    1              0.000001   hi def link pandocNoFormatted String
    1              0.000001   hi def link pandocNoFormattedAttrs Comment
    1              0.000001   hi def link pandocSubscriptMark Operator
    1              0.000001   hi def link pandocSuperscriptMark Operator
    1              0.000001   hi def link pandocStrikeoutMark Operator
    1              0.000002   if g:pandoc#syntax#style#underline_special == 1
    1              0.000010       hi pandocSubscript gui=underline cterm=underline
    1              0.000017       hi pandocSuperscript gui=underline cterm=underline
    1              0.000010       hi pandocStrikeout gui=underline cterm=underline
    1              0.000000   endif
    1              0.000001   hi def link pandocNewLine Error
    1              0.000001   hi def link pandocHRule Delimiter

FUNCTION  <SNR>2_LoadIndent()
    Defined: C:\Program Files\Neovim\share\nvim\runtime\indent.vim:14
Called 1 time
Total time:   0.000777
 Self time:   0.000777

count  total (s)   self (s)
    1              0.000002     if exists("b:undo_indent")
                                  exe b:undo_indent
                                  unlet! b:undo_indent b:did_indent
    1              0.000000     endif
    1              0.000003     let s = expand("<amatch>")
    1              0.000001     if s != ""
    1              0.000001       if exists("b:did_indent")
                            	unlet b:did_indent
    1              0.000000       endif
                            
                                  " When there is a dot it is used to separate filetype names.  Thus for
                                  " "aaa.bbb" load "indent/aaa.vim" and then "indent/bbb.vim".
    2              0.000004       for name in split(s, '\.')
                                    " XXX: "[.]" in the pattern makes it a wildcard on Windows
    1              0.000756         exe $'runtime! indent/{name}[.]{{vim,lua}}'
    2              0.000001       endfor
    1              0.000000     endif

FUNCTION  SetRmdCommentStr()
    Defined: C:\Program Files\Neovim\share\nvim\runtime\ftplugin\rmd.vim:37
Called 374 times
Total time:   0.108737
 Self time:   0.108737

count  total (s)   self (s)
  374              0.002205   if line('.') == s:last_line
   11              0.000014     return
  363              0.000322   endif
  363              0.001597   let s:last_line = line('.')
                            
  363              0.094983   if (search("^[ \t]*```[ ]*{r", "bncW") > search("^[ \t]*```$", "bncW")) || ((search('^---$', 'Wn') || search('^\.\.\.$', 'Wn')) && search('^---$', 'bnW'))
  209              0.003131     set commentstring=#\ %s
  154              0.000170   else
  154              0.002347     set commentstring=<!--\ %s\ -->
  363              0.000347   endif

FUNCTION  <SNR>8_Remove_Matches()
    Defined: C:\Program Files\Neovim\share/nvim/runtime/plugin/matchparen.vim:206
Called 1055 times
Total time:   0.024753
 Self time:   0.024753

count  total (s)   self (s)
 1055              0.005231   if exists('w:paren_hl_on') && w:paren_hl_on
  344              0.001077     while !empty(w:matchparen_ids)
  172              0.001312       silent! call remove(w:matchparen_ids, 0)->matchdelete()
  344              0.000398     endwhile
  172              0.000416     let w:paren_hl_on = 0
 1055              0.000705   endif

FUNCTION  TexNewMathZone()
    Defined: C:\Program Files\Neovim\share\nvim\runtime\syntax\tex.vim:454
Called 4 times
Total time:   0.000282
 Self time:   0.000282

count  total (s)   self (s)
    4              0.000005    let grpname  = "texMathZone".a:sfx
    4              0.000005    let syncname = "texSyncMathZone".a:sfx
    4              0.000002    if s:tex_fold_enabled
                                let foldcmd= " fold"
    4              0.000001    else
    4              0.000002     let foldcmd= ""
    4              0.000001    endif
    4              0.000013    exe "syn cluster texMathZones add=".grpname
    4              0.000005    if s:tex_fast =~# 'M'
    4              0.000044     exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
    4              0.000026     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
    4              0.000022     exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
    4              0.000001    endif
    4              0.000007    exe 'hi def link '.grpname.' texMath'
    4              0.000002    if a:starform
    4              0.000005     let grpname  = "texMathZone".a:sfx.'S'
    4              0.000005     let syncname = "texSyncMathZone".a:sfx.'S'
    4              0.000012     exe "syn cluster texMathZones add=".grpname
    4              0.000004     if s:tex_fast =~# 'M'
    4              0.000046      exe 'syn region '.grpname.' start='."'".'\\begin\s*{\s*'.a:mathzone.'\*\s*}'."'".' end='."'".'\\end\s*{\s*'.a:mathzone.'\*\s*}'."'".' keepend contains=@texMathZoneGroup'.foldcmd
    4              0.000027      exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
    4              0.000022      exe 'syn sync match '.syncname.' grouphere '.grpname.' "\\begin\s*{\s*'.a:mathzone.'\*\s*}"'
    4              0.000001     endif
    4              0.000008     exe 'hi def link '.grpname.' texMath'
    4              0.000001    endif

FUNCTIONS SORTED ON TOTAL TIME
count  total (s)   self (s)  function
 1055   0.205958   0.181206  <SNR>8_Highlight_Matching_Pair()
  374   0.108737             SetRmdCommentStr()
  708   0.083470             nvim_treesitter#foldexpr()
 1055   0.024753             <SNR>8_Remove_Matches()
    1   0.002864   0.002017  <SNR>43_IncludeLanguage()
    1   0.002546             <SNR>1_LoadFTPlugin()
    1   0.001477             <SNR>14_SynSet()
    1   0.000777             <SNR>2_LoadIndent()
   41   0.000459             <SNR>44_WithConceal()
    4   0.000282             TexNewMathZone()
    1   0.000230             <SNR>44_SetupPandocHighlights()
    1   0.000031             <SNR>43_CheckRmdFencedLanguages()

FUNCTIONS SORTED ON SELF TIME
count  total (s)   self (s)  function
 1055   0.205958   0.181206  <SNR>8_Highlight_Matching_Pair()
  374              0.108737  SetRmdCommentStr()
  708              0.083470  nvim_treesitter#foldexpr()
 1055              0.024753  <SNR>8_Remove_Matches()
    1              0.002546  <SNR>1_LoadFTPlugin()
    1   0.002864   0.002017  <SNR>43_IncludeLanguage()
    1              0.001477  <SNR>14_SynSet()
    1              0.000777  <SNR>2_LoadIndent()
   41              0.000459  <SNR>44_WithConceal()
    4              0.000282  TexNewMathZone()
    1              0.000230  <SNR>44_SetupPandocHighlights()
    1              0.000031  <SNR>43_CheckRmdFencedLanguages()

