---
title: Fuel data exploration
---

Our main questions regarding fuel loading are:

1. Are there differences in fuel loading between treatments?
2. If so, what is the magnitude of the difference?

We have a range of response variables that include loading in several different
classes of surface fuels. Some of these may be correlated with each other, which
may have an effect on our interpretation of differences between treatments. For
instance, if duff-litter load is negatively correlated with vegetation, even if
we don't see differences between treatment in either of these variables
separately, it might be found that for any given level of vegetation loading, one
treatment, or another may have consistently higher levels of duff-litter.
Capturing differences between treatments in terms of interactions like these
requires different tools than assessing any one variable on its own.

In order to assess potential outliers, co-linearity, interactions, and other
problems with statistical tests, we'll first conduct some data exploration as
outlined by @zuurProtocolDataExploration2010.

For reference, here is a list of the fuel loading (response) variables of
interest.

1. duff/litter load
2. woody vegetation
3. herbaceous vegetation
4. one hr fuels
5. ten hr fuels
6. hundred hr fuels
7. fine woody debris (one, ten, and hundred hr fuels)
8. coarse woody debris

It's important to note that variables 1-3 were measured twice per transect and
the rest were measured once per transect.

```{r init}
#| echo: false
#| message: false
#| warning: false
library(tidyverse)
load("./data_long.RData")
transectid <- c("site", "treatment", "corner", "azi")
```

## Outliers

```{r outlier-cleveland-func}
#| warning: false
#| message: false

cleavland_plot <- function(data, title, load_var = load) {
  data |>
    group_by(site, treatment) |>
    mutate(replicate_mean_load = mean({{load_var}}, na.rm = TRUE)) |>
    ggplot(
      aes(
        {{load_var}},
        fct_reorder( interaction(site, treatment, sep = " "), {{load_var}}),
        color = treatment)
    ) +
    geom_jitter(width = 0, height = 0.2) +
    labs(x = expression(Load~(Mg%.%ha^-1)), y = "Data order", title = title)
}


```

```{r outlier-plot-fwd-sep}
#| echo: false
#| label: fig-fwd
#| fig-cap: >
#|   Data distribution of loading for fine woody debris classes. Data are
#|   sorted by mean loading within each replicate. Jitter has been added to aid
#|   in visual interpretation.
#| fig-subcap:
#|   - One hour fuels
#|   - Ten hour fuels
#|   - Hundred hour fuels

fwd |> 
  mutate(class = factor(class, levels = c("onehr", "tenhr", "hundhr"))) |>
  group_by(class) |> 
  group_walk(\(data, groups) print(cleavland_plot(data, groups$class)))

```

```{r outlier-plot-fwd-all}
#| echo: false
#| label: fig-fwd-all
#| fig-cap: >
#|   Combined fuel loading in one, ten, and hundred hour classes. Data are
#|   sorted as described in @fig-fwd.

fwd |> summarize(.by = all_of(transectid), load = sum(load)) |>
cleavland_plot("One, ten, and hund. hr")

```

```{r outlier-plot-cwd}
#| echo: false
#| label: fig-cwd
#| fig-cap: >
#|   Sum of coarse woody (>7.64 cm, sound and rotten wood combined) fuel loading
#|   for transects. The y-axis is sorted by mean CWD loading for each replicate.

cwd |>
  summarize( load = sum(load, na.rm = TRUE), .by = all_of(transectid)) |> 
  cleavland_plot("CWD")

```

```{r outlier-plot-dufflitter}
#| echo: false
#| label: fig-dufflitter
#| fig-cap: >
#|   Combined duff and litter loading at each station along trancects. Y-axis is
#|   sorted as in @fig-cwd.

dufflitter |>
  cleavland_plot("Duff/litter")

```

```{r outlier-plot-veg}
#| echo: false
#| warning: false
#| message: false
#| label: fig-veg
#| fig-cap: >
#|   Vegetation fuel loading for each station along transects, including live
#|   and dead fuels attached to live vegetation. Y-axis is sorted as in
#|   @fig-cwd.
#| fig-subcap:
#|   - Woody vegetation
#|   - herbaceous vegetation

veg |>
  mutate(class = factor(class, levels = c("woody", "herb"))) |>
  group_by(class) |>
  group_walk(
    \(data, groups) print(cleavland_plot(data, paste(groups$class, "veg")))
  )

```

## Normality {#sec-Normality}

For further testing, I will summarize the data somewhat, by combining vegetation
loading (woody and herb), and coarse woody loading (sound and rotten) into just
two loading metrics.

```{r reduce-vars}

simple_load <- function(...) {
  tl <- pivot_wider(total_load, names_from = class, values_from = load) |>
    mutate(
      thoushr = rowSums(pick(c(thoushr_s, thoushr_r)), na.rm = TRUE),
      veg = rowSums(pick(c(woody, herb)), na.rm = TRUE),
      .keep = "unused"
    )
    if (is.null(select)) {
      return(tl)
    } else {
    select(tl, ...)
  } 
} 

```

When using manova to test for difference between groups with multiple response
variables, it is important that the response variables are multivariate normally
distributed. Unfortunately, it would appear that we have a probelem with
normality. The raw data for each loading variable is clearly not normally
distributed @fig-qqplot-naive.

```{r qq-plot}
#| label: fig-qqplot-naive
#| fig-cap: >
#|   Naive qq plot of loading variables. This doesn't take into account
#|   the fact that we are interested in within group normality.

load_vars <- c("dufflitter", "onehr", "tenhr", "hundhr", "thoushr", "veg")

simple_load(treatment, all_of(load_vars)) |> 
  pivot_longer(-treatment) |>
  ggplot(aes(sample = value)) +
  stat_qq() +
  stat_qq_line() +
  facet_wrap(~name, scales = "free") 

```

For MANOVA we are concered with the within group multivariate normality, the
assumption does not appear to be met here either (@fig-qqplot-model). The code
output below indicates the rows with the greatest deviation from normal.

```{r qq-resid}
#| label: fig-qqplot-model
#| fig-cap: >
#|   Plot A assessed the multivariate normality of residuals given the model
#|   where all loading variabels are a function of the treatment group.
#| fig-subcap:
#|   - ""
#|   - ""

tl <- simple_load(treatment, all_of(load_vars))
load_mod <- lm(as.matrix(tl[-1]) ~ treatment, data = tl)
m_dist <- heplots::cqplot(load_mod)

simple_load(everything())[order(m_dist, decreasing = TRUE)[1:10], ]

treatments = c("gs", "ha", "ld", "hd")
par(mfrow = c(2, 2))
invisible(lapply(treatments, 
  \(x) heplots::cqplot(filter(tl, treatment == x)[-1], main = x)
))

```

A number of different tests of multivariate normaliy also confirm the lack of
evidence for meeting this assumption (@tbl-norm-test).

```{r norm-test}
#| label: tbl-norm-test
#| tbl-cap: >
#|   Several different tests of multivariate normality indicate a lack of
#|   evidence to support this assumption.

all_mvn_tests <- function(data) {
  c("mardia", "hz", "royston", "dh", "energy") |>
  map(\(x) MVN::mvn(data = data, subset = "treatment", mvnTest = x)) |>
  map(\(x) x$multivariateNormality) |>
  map(\(x) bind_rows(x, .id = "treatment")) |>
  map_dfr(\(x) 
    filter(x, Test != "MVN") |> 
    mutate( across(where(is.factor), \(f) as.numeric(as.character(f)))) |> 
    select(1:2, statistic = 3, `p value`, Result = last_col())
  )
}

all_mvn_tests(simple_load(treatment, all_of(load_vars))) |>
  knitr::kable(digits = 4)

```

The often recommended Pillai's Trace Test is robust to the normality assumption.
Follow up with linear discriminant analysis, or multiple one-way anovas
dependidng on research question. Using a Bonferroni correction for rejecting the
null of alpha / m, for m hypothesis, we get an alpha of 0.008 for an alpha of
0.05 and 6 tests.

```{r}
tl <- simple_load(treatment, all_of(load_vars))
myexpr <- expr(cbind(!!!syms(load_vars)) ~ treatment)
test1 <- do.call("manova", list(myexpr, data = quote(tl)))
summary(test1)
summary.aov(test1)
```


## Homogeneity of variance {#sec-homogeneity-of-variance}


