---
title: Sprout data modeling
format:
  html:
    code-fold: true
---

First, we'll load some libraries and our data.

```{r}
#| output: false

library(lme4)
library(modelsummary)
library(marginaleffects)
library(ggdist)
library(ggridges)
library(emmeans)
library(multcomp)
library(multcompView)
library(tidyverse)
library(patchwork)
library(DHARMa)
library(glmmTMB)
library(ggeffects)
library(DHARMa)

load("wrangled_sprouts.rda")
source("./scripts/rnd_color_brewer.r")
```


```{r}
#| include: false

# ggplot2::theme_update(
#   panel.grid.major = ggplot2::element_blank(),
#   panel.grid.minor = ggplot2::element_blank()
# )

```

## Objectives

1. Summarize differences in species response
1. For each species, is there a difference in height increment between
   treatments?
1. For each species/treatment combination, is there a difference in height
   increment between the first and second periods?
2. Is there a treatment difference in redwood or tanoak sprout heights at year
   10, if so, what is the magnitude of the difference?

## Modeling

We have nested data where we have multiple observations within trees (over
time), trees within plots and plots within sites. Any of these levels of nesting
might result in correlations between observations, which violates the assumption
of independence for OLS models, but can be accounted for using multi-level
models.

I may want to include a categorical variable (spp) as a random slope (on the LHS
of the random parts) to allow random effects to be estimated for each species
separately. Michael Clark [explores this scenario], with some simpler data.

[explores this scenario]: https://m-clark.github.io/posts/2020-03-01-random-categorical

My approach will be to start with a simple model and build towards more complex
models.

### Height increment
By starting with height increment modeling, I will be able to answer question 1
in the objectives. This conclusion may be helpful for informing total height
modeling. I am curious whether height in the first 10 years increases linearly
with age. Is there a growth slow down in year 5-10 compared to years 1-5?

We saw in @fig-data-summary-ht-inc-year that increment does slow down somewhat
in the second measurement period (year 5-10), at least for redwoods, but we may
be justified in overlooking this. Lets look at individual tree's height
trajectories.

```{r}
#| label: fig-linear-ht
#| fig-height: 7
#| fig-cap: >
#|   Data plot showing trajectory of individual tree heights across the three
#|   measurements. Height increase appears fairly linear with year.

dht <- lengthen_data(sprouts, "ht")

dht |>
  ggplot(aes(year, ht, color = spp, group = tree)) +
  geom_line(alpha = 0.6) +
  facet_wrap(~ treat * site) +
  scale_color_brewer(palette = "Set2") +
  theme(
    legend.position = "bottom"
  )
```

```{r}
#| echo: false
#| output: asis

dinc <- lengthen_data(sprouts, "ht_inc") |> mutate(year = as.factor(year))

minc <- lst(
  minc1 = lm(ht_inc ~ year, dinc),
  minc2 = update(minc1, ~ . * spp),
  minc3 = update(minc2, ~ . * treat),
  minc4 = update(minc1, ~ . + spp + treat),
  minc5 = update(minc4, ~ . + spp:treat),
  minc6 = update(minc5, ~ . + spp:year),
  minc7 = update(minc6, ~ . + treat:year),
  minc8 = lmer(
    ht_inc ~
      treat + year + spp + treat:spp + spp:year + (1 | plot) + (1 | tree),
    dinc
  ),
  minc9 = update(minc8, ~ . + treat:year),
  minc10 = update(minc8, ~ . - (1 | plot) + (0 + spp | plot)),
  minc11 = update(minc10, ~ . - treat:spp),
  minc12 = glmmTMB(
    ht_inc ~ treat + year * spp + (1 | tree) + (0 + spp | plot),
    dispformula = ~ spp * year * treat,
    data = dinc
  )
)

format_model_formula <- function(mod) {
  form <- format(formula(mod)) |>
    paste0(collapse = "") |>
    str_replace("\\s{2,}", " ")
  form
}

label_model_formula <- function(mod, name) {
  form <- format_model_formula(mod)
  form <- paste0("`", form, "`")
  cat(paste(name, form, sep = ": "), "\n\n")
}

# iwalk(minc, label_model_formula)
```

For the most part, it looks like height increases linearly with year. Lets test
this with a model.

1. ``r format_model_formula(minc[[1]])``

   Ignoring everything else, there is a 0.08 m / yr slow down in the second
   period.

2. ``r format_model_formula(minc[[2]])``

   That slow down has more to do with redwood than tanoak.

3. ``r format_model_formula(minc[[3]])``
   
   There are overall treatment effect on growth which varies by species (redwood
   is more affected) but there are no more significant interactions with year.
   Our data does not detect significant differences in slow down by treatment or
   species.
   j
4. ``r format_model_formula(minc[[4]])``

   This includes only additive effects and the effect of year is the same as
   model 1.
   
5. ``r format_model_formula(minc[[5]])``

   Again, the species by treatment interactions seem to be significant.
   
6. ``r format_model_formula(minc[[6]])``

   The species year interaction remains important.

7. ``r format_model_formula(minc[[7]])``

   Again, the treatment by year interactions do not seem important/estimable.

8. ``r format_model_formula(minc[[8]])``

   *Now I introduce random intercepts for plot and tree.* These lead to *much*
   smaller AIC's.

9. ``r format_model_formula(minc[[9]])``

   But treatment by year is still (mostly) not significant.

10. ``r format_model_formula(minc[[10]])`` 

    Adding a random slope for species by plot results in another big jump in
    AIC, but also reduces confidence in the treatment*species interaction. It
    would seem that the potential differences in species by treatment growth
    rate are obscured by redwoods greater variability across plots.

11. ``r format_model_formula(minc[[11]])`` 
   
    Removing the treat * species interaction results in a solid AIC boost. 

12. ``r format_model_formula(minc[[12]])`` 
   
    Switching to glmmTMB and adding a dispersion model that includes a
    three-way interaction reduces AIC, and results in more well-behaved
    residuals.

The coefficients are different for the glmmTMB model because it includes a model
for dispersion. Here the dispersion model estimates are ommitted.

Model 12 has the lowest AIC and the residuals are relatively well behaved.

```{r}
#| echo: false
#| column: body-outset

# lmer and lm name coefficients differently, leading to duplicates in the
# table
rearrange_coef_names <- function(x) {
  str_replace(x, "^(.*):(treat[HALD]{2})$", "\\2:\\1") |>
    str_replace_all(":", " x ") |>
    str_replace("dispersion|conditional", "")
}

# This was to see if adding site made any difference. I probably tried this
# previously but just didn't document it

minc13 <- glmmTMB(
  ht_inc ~ treat + year * spp + (1 | tree) + (0 + spp | plot) + (1 | site),
  dispformula = ~ spp * year * treat,
  data = dinc
)

modelsummary(
  list(minc[[12]], minc13),
  shape = term:component ~ model,
  coef_omit = ".*dispersion$",
  coef_rename = rearrange_coef_names,
  gof_omit = "F|Log.Lik",
  stars = TRUE,
  output = "markdown",
  metrics = c("AIC", "BIC", "RMSE"),
  estimator = "ML",
)

modelsummary(
  minc[1:12],
  shape = term:component ~ model,
  coef_omit = ".*dispersion$",
  coef_rename = rearrange_coef_names,
  gof_omit = "F|Log.Lik",
  stars = TRUE,
  output = "markdown",
  metrics = c("AIC", "BIC", "RMSE"),
  estimator = "ML",
)
```

```{r}
simulateResiduals(minc[[12]]) |> plot()
```

### Height increment results

The final selected model, based on AIC and examination of residuals had the
form: 

```{r, echo = FALSE}
minc_sel <- minc[[12]]
format_model_formula(minc_sel) |> cat()
```

The model selected based on AIC lacks a treatment x species interaction,
suggesting that there is not evidence that treatments affected species
differentially. It also lacks a treatment x year interaction. This means that
there was not enough evidence to support that treatment was related to changes
in growth rate.

The presence of treatment in the model (0.001 ≤ p < 0.03) suggests that
the levels of treatment were associated with different growth rates across
species and years. And the species x year interaction (p < 0.001) suggests
changes in growth rates are different for redwood and tanoak.

Averaging over growth periods, treatment specific height increments for redwood
ranged from 0.66 to 0.86 m yr^-1^, and for tanoak, from 0.29 to 0.49, with the
slowest growth in the HD treatment and the fastest in the GS treatment. height
increment was greater in the GS treatment than the HA and HD treatments by about
0.19 m yr^-1^ (p < 0.001). The LD treatment was intermediate, but not
statistically distinguishable from the other treatments (0.13 < p < 0.28).

```{r}
#| label: fig-sprout-inc-treat
#| fig-cap: >
#|   Estimated marginal means for the effect of harvest treatment on redwood and
#|   tanoak sprout height increment, averaged over two growth periods, ten years
#|   after harvest. Purple bars represent confidence intervals and statistical
#|   significance (α = 0.05) is indicated by non-overlaping red arrows.

emm_treat <- emmeans(minc_sel, "treat", by = "spp")
plot(emm_treat, comparisons = TRUE)
```

Redwood growth slowed from 0.80 to 0.67 m yr^-1^ in the second period and tanoak
slowed from 0.39  to 0.34 m yr^-1^.

Redwood grew faster than tanoak, but slowed down more relative to it in the
second period. Height increment for redwood was 0.42 m yr^-1^ greater in the
first period and 0.33 m yr^-1^ greater in the second period than tanoak height
increment.


```{r}
#| label: fig-sprout-inc-year
#| fig-cap: >
#|   Estimated marginal means for the effect of growth period on redwood and
#|   tanoak sprout height increment, averaged over four harvest treatments, ten
#|   years after harvest. Purple bars represent confidence intervals and
#|   statistical significance (α = 0.05) is indicated by non-overlaping red
#|   arrows.

emmeans(minc_sel, c("year"), by = "spp") |> plot(comparisons = TRUE)
```

```{r}
#| include: false
#| label: fig-ht-inc-contrast
#| fig-cap: >
#|   Growth period 1 is year 1-5, growth period 2 is year 5-10. Growth
#|   significantly decreased in the second period for both species.

minc11em <- emmeans(minc_sel, "year", by = c("spp"))

minc11con <- contrast(minc11em, "consec", infer = TRUE) |> as_tibble()

minc11cld <- cld(minc11em, Letters = letters) |>
  as_tibble() |>
  mutate(.group = str_replace_all(.group, " ", ""))

minc11con |>
  ggplot(aes(spp, estimate, color = spp)) +
  geom_pointrange(
    aes(ymin = lower.CL, ymax = upper.CL),
    linewidth = 1,
    size = 1
  ) +
  scale_color_brewer(palette = "Set2", aesthetics = c("color", "fill")) +
  labs(
    x = NULL,
    y = expression(Height ~ increment ~ change ~ (m %.% yr^-1)),
    color = "Species"
  )
```

```{r}
#| incldue: false

#|   Growth period 1 is year 1-5, growth period 2 is year 5-10. Growth
#|   significantly decreased in the second period for both species.

minc11con |> knitr::kable(digits = 3)
```

```{r}
#| label: fig-ht-inc
#| fig-cap: >
#|   There was a significant difference in height increment between period 1 and
#|   2 for both species.

minc11cld |>
  ggplot(aes(year, emmean, fill = spp, color = spp)) +
  geom_pointrange(
    aes(ymin = lower.CL, ymax = upper.CL),
    position = position_nudge(x = -0.15),
    size = 0.9,
    linewidth = 1
  ) +
  geom_dots(data = dinc, aes(year, ht_inc), alpha = 0.4) +
  facet_grid(~spp, switch = "x") +
  theme(
    panel.spacing = unit(0, "lines"),
    strip.background = element_blank(),
    strip.text = element_blank(),
  ) +
  geom_text(
    aes(y = upper.CL, label = .group),
    # color = "black",
    position = position_nudge(x = -0.15, y = 0.1)
  ) +
  scale_color_brewer(palette = "Set2", aesthetics = c("color", "fill")) +
  labs(
    x = "Growth period",
    y = expression(Height ~ increment ~ (m %.% year^-1)),
    color = "Species",
    fill = "Species"
  ) +
  scale_x_discrete(labels = c("1", "2"))
```

### Heights - year 10 only

The simplest model that I'm willing to look at includes a treatment/species
interaction, and no random effects. It will serve as a baseline for comparison.

```{r}
#| code-fold: false

# I'm calling the height data "d"
dht10 <- sprouts |> lengthen_data("ht") |> filter(year == 10)

mht101 <- lm(ht ~ treat * spp, data = dht10)
mht102 <- lmer(ht ~ treat * spp + (1 | plot) + (1 | site), data = dht10)
mht103 <- lmer(ht ~ treat * spp + (1 | plot), data = dht10)
mht104 <- lmer(ht ~ treat * spp + (0 + spp | plot), data = dht10)
mht105 <- glmmTMB(
  ht ~ treat * spp + (0 + spp | plot),
  family = Gamma(link = "log"),
  data = dht10
)
mht106 <- glmmTMB(
  ht ~ treat * spp + (0 + spp | plot),
  family = Gamma(link = "log"),
  data = dht10,
  dispformula = ~spp
)
mht107 <- glmmTMB(
  ht ~ treat + spp + (0 + spp | plot),
  family = Gamma(link = "log"),
  data = dht10,
  dispformula = ~spp
)
mht108 <- glmmTMB(
  ht ~ treat + spp + (0 + spp | plot),
  family = Gamma(link = "log"),
  data = dht10,
  dispformula = ~ spp + treat
)
mht109 <- glmmTMB(
  ht ~ treat + spp + (0 + spp | plot),
  family = gaussian(link = "log"),
  data = dht10,
  dispformula = ~ spp * treat
)

mht1010 <- glmmTMB(
  ht ~ treat + spp + (0 + spp | plot) + (1 | site),
  family = gaussian(link = "log"),
  data = dht10,
  dispformula = ~ spp * treat
)

mht10_list <- lst(
  mht101,
  mht102,
  mht103,
  mht104,
  mht105,
  mht106,
  mht107,
  mht108,
  mht109
)

# # Here I'm testing if adding a random effect for site improves the model. It
# # doesn't
#
# modelsummary(
#   list(mht109, mht1010),
#   stars = TRUE,
#   output = "markdown",
#   shape = term:component + statistic ~ model,
#   coef_omit = ".*dispersion$",
#   coef_rename = rearrange_coef_names,
#   metrics = c("AIC", "BIC", "RMSE"),
#   estimator = "ML",
#   gof_omit = "F|Log.Lik"
# )

modelsummary(
  mht10_list,
  stars = TRUE,
  output = "markdown",
  shape = term:component + statistic ~ model,
  coef_omit = ".*dispersion$",
  coef_rename = rearrange_coef_names,
  metrics = c("AIC", "BIC", "RMSE"),
  estimator = "ML",
  gof_omit = "F|Log.Lik"
)
```

We can see the residuals are not perfect, but nor are they very offensive.

```{r}

plot(simulateResiduals(mht109))
```

### Here I make my selection

```{r}

ht10_sel <- mht109
```

### Year 10 only Results

#### Random effects
The best model according to AIC includes a random intercept for plot and a
random slope for spp. Because spp is a factor, this effectively estimates a
species specific intercept, but also takes into account the covariance of the
species plot effect. 

#### Fixed effects
The best model included speceis and treatment, but no interactions. This
suggests that treatments do not affect species differentially.



```{r, include=FALSE}

(ht10emm <- emmeans(ht10_sel, "treat", by = c("spp"), type = "response"))

(ht10comp <- pairs(ht10emm))

emmcomp <- plot(ht10emm, comparisons = TRUE, plotit = FALSE) |> as_tibble()
```

Because the best model did not contain a species x treatment interaction,
comparisons between treatments is the same for both species. The GS treatment
resulted in greater heights in year 10 than the other treatments (0.001 < p <
0.04). Predicted mean height for redwood ranged from 10.29 m in the GS treatment
to 6.16 m in the HD treatment. For tanoak, predicted mean height ranged from
5.12 in the GS treatment to 3.04 in the HD treatment. Predicted mean heights
followed the pattern GS > LD > HA > HD.

```{r}
#| label: fig-year-10-only
#| fig-cap: >
#|   Predicted mean height and 95% confidence intervals (gray bars) for redwood
#|   and tanoak stump sprouts 10 years after harvest using four different
#|   harvest treatments. Non-overlaping blue arrows indicate statistically
#|   significant differences between treatments within a species.

dht10 |>
  ggplot(aes(treat, ht, color = spp, fill = spp)) +
  facet_grid(~spp, switch = "x") +
  theme(
    panel.spacing = unit(0, "lines"),
    strip.background = element_blank(),
    strip.text = element_blank(),
  ) +
  geom_dots() +
  scale_color_brewer(palette = "Set2", aesthetics = c("color", "fill")) +
  geom_pointrange(
    data = emmcomp,
    aes(y = the.emmean, ymin = lower.CL, ymax = upper.CL),
    color = "gray60",
    position = position_nudge(x = -0.07),
    size = 0.7,
    linewidth = 2.3,
    show.legend = FALSE
  ) +
  geom_segment(
    data = emmcomp,
    aes(y = the.emmean, xend = treat, yend = rcmpl),
    color = "blue4",
    lineend = "butt",
    linejoin = "bevel",
    arrow = arrow(length = grid::unit(2.5, "mm")),
    position = position_nudge(x = -0.07),
    linewidth = 1
  ) +
  geom_segment(
    data = emmcomp,
    aes(y = the.emmean, xend = treat, yend = lcmpl),
    color = "blue4",
    lineend = "butt",
    linejoin = "bevel",
    arrow = arrow(length = grid::unit(2.5, "mm")),
    position = position_nudge(x = -0.07),
    linewidth = 1
  )
```

### Heights - multiple years

By including year as a numeric variable, we are assuming a liner relationship
between year and height. This term (and it's interactions) can than be
interpreted as a modeled growth increment, and although we only have
observations at years 1, 5, and 10, other years predictions will be linearly
interpolated.

The following models were fit, and are summarized in @tbl-model-summaries.

2. OLS linear model including year in a 3-way interaction.
3. Eliminate the 3-way interaction (`spp:treat:year`), keeping others. This
   results in a significantly lower AIC.
4. First random-effects model including interactions and universal random slopes
   for site and plot, and time-series.
5. Allow the random effects to (co-) vary by species.
6. Same as 5, but attempt to remove the 3-way interaction again.
7. Same as 6, but attempt to simplify the random effects by forcing them to be
   estimated independently, correlation between species is not estimated.
8. Re-introduce the 3-way interaction again.
9. Omit the random effect for site. This is supported by the interpretation of
   @fig-data-summary-plots.
10. Like 9, but try simplified (independent) random effects.

One problem with this is that I'm comparing AIC for different random effects
using ML, when I should be using REML. This may be a problem throughout my model
selection.

```{r}
#| code-fold: false
#| label: tbl-model-summaries
#| tbl-cap: >
#|   Summary table for models 2-10, described above. Standard error in
#|   parantheses.
#| column: body-outset

dht <- lengthen_data(sprouts, "ht")

mht2 <- lm(ht ~ treat * spp * year, data = dht)

mht3 <- lm(
  ht ~ treat + spp + year + treat:year + spp:year + treat:spp,
  data = dht
)

mht4 <- lmer(
  ht ~ treat * spp * year + (1 | site) + (1 | plot) + (1 | tree),
  data = dht
)

mht5 <- lmer(
  ht ~
    treat * spp * year + (0 + spp | site) + (0 + spp | plot) + (0 + spp | tree),
  data = dht
)

mht6 <- lmer(
  ht ~
    treat +
      spp +
      year +
      treat:spp +
      year:spp +
      treat:year +
      (0 + spp | site) +
      (0 + spp | plot) +
      (0 + spp | tree),
  data = dht
)

mht7 <- lmer(
  ht ~
    treat +
      spp +
      year +
      treat:spp +
      year:spp +
      treat:year +
      (1 | site:spp) +
      (1 | plot:spp) +
      (1 | tree:spp),
  data = dht
)

mht8 <- lmer(
  ht ~ treat * spp * year + (1 | site:spp) + (1 | plot:spp) + (1 | tree:spp),
  data = dht
)

mht9 <- lmer(
  ht ~ treat * spp * year + (0 + spp | plot) + (0 + spp | tree),
  data = dht
)

mht10 <- lmer(
  ht ~ treat * spp * year + (1 | plot:spp) + (1 | tree:spp),
  data = dht
)

# I tried fitting year as a factor, but then could not fit a model that included
# the 3-way interaction and random slopes for species. The model without the
# 3-way (and spp random slopes) was close, but about 12 AIC larger.

modelsummary(
  list(
    "Model 2" = mht2,
    "Model 3" = mht3,
    "Model 4" = mht4,
    "Model 5" = mht5,
    "Model 6" = mht6,
    "Model 7" = mht7,
    "Model 8" = mht8,
    "Model 9" = mht9,
    "Model 10" = mht10
  ),
  stars = TRUE,
  output = "markdown",
  metrics = c("AIC", "BIC", "RMSE"),
  estimator = "ML",
  gof_omit = "F|Log.Lik"
)
```

### Multi-year heights V2

The problem with all of the above models is (a) a normal distribution is not a
good fit for the data because it results in negative height predictions for
small trees (year 1) and (b) variance is not constant. Finally, we are fitting
year as a linear effect because fitting it as a factor with 3 levels led to
model convergence problems, but ideally, we would like to allow different
relationships between height and year, because, as we saw in the previous
section, height growth is not constant in the first 10 years.

For these reasons it makes sense to try another modeling framework,
particularly, a gamma distributed model, with a modeled dispersion parameter. It
allows only positive predictions, can right skewed distributions, and the
dispersion can be modeled as a function of covariates.

```{r}
#| code-fold: false
#| label: tbl-model-summaries-v2
#| tbl-cap: >
#|   Summary table for models 2-10, described above. Standard error in
#|   parantheses.
#| column: body-outset

mht11 <- glmmTMB(
  ht ~ treat * spp * year + (1 | plot) + (1 | tree),
  data = dht,
  family = Gamma(link = "log")
)

mht12 <- glmmTMB(
  ht ~
    treat +
      spp +
      year +
      treat:spp +
      treat:year +
      spp:year +
      (1 | plot) +
      (1 | tree),
  data = dht,
  family = Gamma(link = "log")
)

mht13 <- glmmTMB(
  ht ~
    treat +
      spp +
      year +
      treat:spp +
      treat:year +
      spp:year +
      (0 + spp | plot) +
      (0 + spp | tree),
  data = dht,
  family = Gamma(link = "log")
)

mht14 <- glmmTMB(
  ht ~
    treat +
      spp +
      year +
      treat:spp +
      treat:year +
      spp:year +
      (1 | plot) +
      (1 | tree),
  data = mutate(dht, year = factor(year)),
  family = Gamma(link = "log")
)

mht15 <- glmmTMB(
  ht ~
    treat +
      spp +
      year +
      treat:spp +
      treat:year +
      spp:year +
      (1 | plot) +
      (1 | tree),
  dispformula = ~year,
  data = mutate(dht, year = factor(year)),
  family = Gamma(link = "log")
)

mht16 <- glmmTMB(
  ht ~
    treat +
      spp +
      year +
      treat:spp +
      treat:year +
      spp:year +
      (1 | plot) +
      (1 | tree),
  dispformula = ~ year * spp,
  data = mutate(dht, year = factor(year)),
  family = Gamma(link = "log")
)

mht17 <- glmmTMB(
  ht ~
    treat +
      spp +
      year +
      treat:spp +
      treat:year +
      spp:year +
      (1 | plot) +
      (1 | tree),
  dispformula = ~ year * spp + treat + treat:spp,
  data = mutate(dht, year = factor(year)),
  family = Gamma(link = "log")
)

mht18 <- glmmTMB(
  ht ~ treat + spp + year + treat:year + spp:year + (1 | plot) + (1 | tree),
  dispformula = ~ year + spp + treat + treat:spp,
  data = mutate(dht, year = factor(year)),
  family = gaussian(link = "log")
)

do_model_summary_table <- function(model_list) {
  modelsummary(
    model_list,
    output = "markdown",
    shape = term:component + statistic ~ model,
    metrics = c("AIC", "BIC", "RMSE"),
    estimator = "ML",
    gof_omit = "F|Log.Lik",
    stars = TRUE
  )
}

do_model_summary_table(list(
  "Model 11" = mht11,
  "Model 12" = mht12,
  "Model 13" = mht13,
  "Model 14" = mht14,
  "Model 15" = mht15,
  "Model 16" = mht16,
  "Model 17" = mht17,
  "Model 18" = mht18
))
```

The model with the lowest AIC is model 18.

### Multi-year model checking

```{r}
#| label: fig-multi-year-resid
#| fig-cap: >
#|   Residual vs fitted plot for the selected multi-year linear regression model
#|   for heights.

res <- simulateResiduals(mht18)
plot(res)
```

### Multi-year results

Using model 18, we can now answer the questions we posed in the Objectives
section.

```{r}
#| label: fig-multi-year-growth
#| fig-height: 7
#| fig-cap: >
#|   Average species and treatment specific height as a linear function
#|   of year. Density distributions represent the raw data associated with the
#|   estimate at that point. The grey line is the OLS fit for reference.

mht18emmeans <- emmeans(
  mht18,
  c("spp", "treat", "year"),
  type = "response"
)

mht18emmeans |>
  as_tibble() |>
  mutate(
    year = as.numeric(levels(year))[year]
  ) |>
  rename(any_of(c(lower.CL = "asymp.LCL", upper.CL = "asymp.UCL"))) |>
  ggplot(aes(year, response, color = spp, fill = spp, group = spp)) +
  geom_line() +
  facet_wrap(~treat) +
  geom_ribbon(
    aes(ymin = lower.CL, ymax = upper.CL, color = NULL),
    alpha = .2
  ) +
  stat_slab(data = dht, aes(year, ht), alpha = 0.4) +
  scale_color_brewer(palette = "Set2", aesthetics = c("color", "fill")) +
  theme(legend.position = "bottom") +
  labs(x = "Year", y = "Height (m)", color = "Species", fill = "Species")
```

```{r}
#| label: fig-multi-year-at-10
#| fig-cap: >
#|   Marginal means at year 10 based on height data collected three times over
#|   10 years. The same letter within a species indicates that there was not
#|   enough evidence to differentiate those treatments.

mht18_compare <- emmeans(
  mht18,
  spec = "treat",
  by = c("spp"),
  at = list(year = "10"),
  type = "response"
) |>
  cld(Letters = letters) |>
  as_tibble() |>
  mutate(
    # year = as.numeric(levels(year))[year],
    .group = str_replace_all(.group, " ", "")
  ) |>
  rename(any_of(c(lower.CL = "asymp.LCL", upper.CL = "asymp.UCL")))

multiple_years_plot <- filter(dht, year == 10) |>
  ggplot(aes(treat, ht, color = spp, fill = spp)) +
  facet_grid(~spp, switch = "x") +
  theme(
    panel.spacing = unit(0, "lines"),
    strip.background = element_blank(),
    strip.text = element_blank(),
  ) +
  geom_dots() +
  scale_color_brewer(palette = "Set2", aesthetics = c("color", "fill")) +
  geom_pointrange(
    aes(y = response, ymin = lower.CL, ymax = upper.CL),
    data = mht18_compare,
    color = "gray50",
    position = position_nudge(x = -0.07),
    size = 0.7,
    linewidth = 1,
    show.legend = FALSE
  ) +
  geom_text(
    aes(y = upper.CL, label = .group),
    data = mht18_compare,
    color = "black",
    position = position_nudge(x = -0.3, y = 0.2)
  ) +
  labs(x = "Treatment", y = "Height (m)", color = "Species", fill = "Species") +
  theme(legend.position = "bottom")

multiple_years_plot
```

### Multi-year vs. year 10 only

```{r}

standard_model_col_names <- c(
  LCL = "lower.CL",
  UCL = "upper.CL",
  LCL = "asymp.LCL",
  UCL = "asymp.UCL",
  emmean = "response",
  emmean = "the.emmean"
)

list("year 10 only" = emmcomp, "multi-year" = mht18_compare) |>
  map(\(x) rename(x, any_of(standard_model_col_names))) |>
  bind_rows(.id = "model") |>
  ggplot(aes(treat, ht, color = model, fill = model)) +
  facet_grid(~spp) +
  geom_pointrange(
    aes(y = emmean, ymin = LCL, ymax = UCL),
    position = position_dodge(width = 0.4),
    size = 0.7,
    linewidth = 1
  ) +
  geom_dots(
    data = dht10,
    color = "gray50",
    fill = "gray70",
    position = position_nudge(x = 0.2),
    scale = 0.7,
    binwidth = 0.18
  ) +
  theme(legend.position = "bottom") +
  scale_color_manual(
    values = rnd_color_brewer("Set2", c(1, 4)),
    aesthetics = c("color", "fill")
  )
```

This plot attempts to demonstrate the model fit by showing observed and
predictied height distributions for our observed dataset.

```{r}
#| label: fig-height-pred-fit-all-years
#| fig-cap: >
#|   Oberved and predicted height distribution of our observed dataset using the
#|   final, chosen, multi-year model.
#|   Predictions were made using all random effects.

sprouts |>
  lengthen_data("ht") |>
  mutate(
    Predicted = predict(
      mht18,
      lst(site, plot, tree, treat, spp, year),
      type = "response"
    ),
    Observed = ht
  ) |>
  pivot_longer(c(Observed, Predicted)) |>
  ggplot(aes(value, treat, color = name, fill = name)) +
  stat_slab(alpha = 0.4, normalize = "xy") +
  facet_grid(vars(spp), vars(year), scales = "free", labeller = label_both) +
  labs(x = "Height (m)", y = "Treatment") +
  scale_color_brewer(palette = "Set2", aesthetics = c("color", "fill")) +
  theme(legend.position = "bottom", legend.title = element_blank())
```

```{r}

#| label: fig-height-pred-fit-10-only
#| fig-cap: >
#|   Oberved and predicted height distribution of our observed dataset using the
#|   selected year-10-only model.
#|   Predictions were made using all random effects.

sprouts |>
  lengthen_data("ht") |>
  filter(year == "10") |>
  mutate(
    Predicted = predict(
      ht10_sel,
      lst(site, plot, tree, treat, spp, year),
      type = "response"
    ),
    Observed = ht
  ) |>
  pivot_longer(c(Observed, Predicted)) |>
  ggplot(aes(value, treat, color = name, fill = name)) +
  stat_slab(alpha = 0.4, normalize = "xy") +
  facet_grid(vars(spp), scales = "free", labeller = label_both) +
  labs(x = "Height (m)", y = "Treatment") +
  scale_color_brewer(palette = "Set2", aesthetics = c("color", "fill")) +
  theme(legend.position = "bottom", legend.title = element_blank())
```

## Output

saved data for later use

```{r}

save(ht10_sel, minc_sel, dht, dinc, dht10, mht18, file = "sprout_modeling.rda")
```
