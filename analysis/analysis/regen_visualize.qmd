---
title: Reneration data summary
---

```{r}
#| output: false

library(tidyverse)
library(ggdist)
library(patchwork)

load("regen_wrangled.RData")
```

## Objectives

- Determine if there are significant differences in species composition, or size
  class distirbution between treatments

This objective is somewhat vaugue because I am not familiar with the statistical
techniques used for the weighted (diameter), multi-variate (species)
distribution data that we have.

For starters, I will look at summaries of size class distributions by species. I
will report densities in terms of trees per hectare (tph). Our plots were fixed
area, 4-m-radius plots, or 50.27 m^2^. Each stem in a veg. plot represents
198.94 stems/ha. As shown in @fig-sampling-design, there are:

- 64 veg. plots in the experiment
- 16 in a treatment
- 4 in a macro plot


This plot is a little difficult to interpret beccause of the large difference in
counts from the smallest to largest stems. It might make more sense to look at
regen smaller than 5 cm separately.

```{r}
#| label: fig-raw-hist-regen-1
#| fig-cap: >
#|   Histogram of regen by species and size class for each treatment.

# expansion factors at different aggregation levels
per_ha <- c(
  all = 1/64, treat = 1/16, plot = 1/4, corner = 1) * (10000 / (16 * pi)
)

p <- regen |>
  ggplot(aes(dbh, fill = spp)) +
  stat_bin(aes(y = after_stat(count) * per_ha["treat"]), bins = 10) +
  facet_wrap(vars(treat), nrow = 1) +
  labs(y = expr(trees%.%ha^-1))
p

```

Splitting the analysis at 5-cm-diameter stems shows a clear trend in treatments
from most to least available light. Over this gradient, the number of 1.3-cm
stems increases, and the 3.8-cm stems decrease, almost proportionally --- and
most of this is due to tanoak. For >= 5-cm stems, the effect is a fairly
homogenous decrease in the number of stems. There are few tanoak, Douglas-fir
are only in the brightest areas. Mostly redwood (number of stems) shows a strong
correlation with available light.

```{r}
#| label: fig-raw-hist-regen-2
#| fig-cap: >
#|   Histograms of regen by species and size class. On top are stems less than
#|   five centimeters in diameter, and stems greater than five centimeters are
#|   on the bottom.

raw_hist2 <- function(group, bin_breaks, scale_breaks, text_pos) {
  generate_facet_totals <- function(data) {
    summarize(data,
      .by = treat,
      n = paste("Total: ", round(n() * per_ha["treat"])),
    )
  }
  regen |>
    filter({{ group }}) |>
    ggplot(aes(dbh, fill = fct_reorder(spp, spp, length))) +
    stat_bin(aes(y = after_stat(count) * per_ha["treat"]), breaks = bin_breaks) +
    ggpp::geom_text_npc(
      data = generate_facet_totals,
      aes(npcx = "center", npcy = "top", label = n, fill = NULL)
    ) +
    facet_wrap(vars(treat), nrow = 1) +
    labs(y = expression(trees %.% ha^-1), x = "dbh (cm)", fill = "spp") +
    scale_x_continuous(breaks = scale_breaks) +
    scale_y_continuous(expand = expansion(c(0.05, 0.2))) +
    scale_fill_manual(values = spp_col) +
    theme_bw()
}

raw_hist2(dbh < 5, seq(0, 17.5, 2.5), seq(0, 15, 5), c(2.5, 6600)) /
raw_hist2(dbh >= 5, seq(0, 17.5, 2.5), seq(0, 15, 5), c(27, 600))

# raw_hist3 <- function(sub){
# check_breaks <- function(x) {
#   breaks <- if (length(x) > 9) x[seq(1, length(x), 2)] else x
# }
# d_plot <- regen |>
#   filter({{ sub }}) |>
#   mutate(
#     dbh_bin = cut(dbh, c(0, 2.5, seq(5, 50, 4)), c(1.25, 3.75, seq(7, 47, 4)))
#   )|>
#   summarize(.by = c(treat, dbh_bin, spp), n = n() * per_ha["treat"])
# last <- length(unique(d_plot$dbh_bin))
# d_label <- d_plot |>
#   summarise(.by = c(treat, dbh_bin), bar = sum(n)) |>
#   summarise(.by = treat, tot = round(sum(bar)), treat_max = max(bar))
# ggplot(d_plot, aes(x = dbh_bin, y = n, fill = spp)) +
# geom_col(width = 1) +
# geom_text(
#   data = d_label,
#   aes(x = last, y = max(treat_max), label = paste("Tot.", tot), fill = NULL),
#   vjust = 0,
#   hjust = 1
# ) +
# facet_wrap(vars(treat), nrow = 1) +
# labs(y = expression(trees %.% ha^-1), x = "dbh (cm)") +
# scale_x_discrete(drop = TRUE, breaks = check_breaks)
# }
#
# raw_hist3(dbh >= 5)
#
# temp <- filter(regen, TRUE) |>
# mutate( dbh_bin = cut(dbh, c(0, 2.5, seq(5, 50, 4)), c(1.25, 3.75, seq(7, 47, 4))))
#
# levels(temp$dbh_bin)[!levels(temp$dbh_bin) %in% temp$dbh_bin]

```

This is interesting, but I wonder what this would look like in terms of basal
area, which is more biologically relevant than number of stems.

```{r}

# The metric foresters constant: diameter in cm to area of a circle in square
# meters
for_const <- function(dbh) {
  pi * dbh^2 / (4 * 10000)
}

# I need a mapping so that each species gets a unique color
spp_col <- set_names(
  scales::pal_viridis(option = "D")(n_distinct(regen$spp)), unique(regen$spp)
)


local({
  bin_breaks <- seq(0, 17.5, 2.5)
  scale_breaks <- seq(0, 15, 5)
  facet_total_label <- function(data) {
    summarize(data,
      .by = treat,
      ba_ha = round(sum(per_ha["treat"] * for_const(dbh)), 1)
    )
  }
  regen |>
    ggplot(aes(dbh, fill = fct_reorder(spp, dbh, .fun = ~sum(.x^2)))) +
    stat_bin(aes(weight = per_ha["treat"] * for_const(dbh)), breaks = bin_breaks) +
    ggpp::geom_text_npc(
      data = facet_total_label,
      mapping = aes(npcx = "center", npcy = "top", label = ba_ha, fill = NULL)
    ) +
    facet_wrap(vars(treat), nrow = 1) +
    labs(y = expr(m^2 %.% ha^-1), x = "dbh (cm)", fill = "spp") +
    scale_y_continuous(expand = expansion(c(0.05, 0.2))) +
    scale_x_continuous(breaks = scale_breaks) +
    scale_fill_manual(values = spp_col) +
    # scale_fill_grey() +
    theme_bw()
})

```


