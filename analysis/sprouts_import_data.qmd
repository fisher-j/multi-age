---
title: Data import and description
format:
  html:
    code-fold: true
---

<!--
source(knitr::purl("sprouts_import_data.qmd", tempfile()))
-->

```{r}
#| include: false

# Quickly iterate over random color selections and pick the colors I like
rnd_color_brewer <- function(palette, chosen_order = NULL) {
  n <- RColorBrewer::brewer.pal.info[palette, "maxcolors"]
  ord <- sample(1:n)
  if (!is.null(chosen_order)) ord <- chosen_order
  colors <- RColorBrewer::brewer.pal(n, palette)[ord]
  print(ord)
  colors
}

ggplot2::theme_update(
  panel.grid.major = ggplot2::element_blank(),
  panel.grid.minor = ggplot2::element_blank()
)

```

## Description

First, we'll load some libraries and our data.

```{r}
#| output: false

library(lme4)
library(modelsummary)
library(marginaleffects)
library(ggdist)
library(ggridges)
library(emmeans)
library(multcomp)
library(multcompView)
library(tidyverse)
library(mgcv)

```

```{r}
#| echo: false

sprouts_fresh <- readxl::read_excel("../data/Sprouts10yr.xlsx")

set.seed(743)
slice_sample(sprouts_fresh, n = 4) |> knitr::kable()
```

The data is in a wide format, variables are as follows:

```{r}
#| label: tbl-variable-descriptions
#| tbl-cap: Descriptions of variables in dataset.
#| echo: false

variable_descriptions <- list(
  Site = "One of four sites where treatments were replicated. Sites were located
  on similar slope positions, but across a range of aspects.",
  Plot = "There were 4 plots at each site and each was randomly assigned a
  treatment",
  Trtmt = "Treatemnt type: GS = group selection, which is basically a small
  clearing, LD = low density--fewer trees remaining; HD = high density--more
  trees remain and they are dispersed; HA = high density aggregated--more trees
  remain and they are grouped into clumps.",
  Tree = "Unique sprout ID within Site, Plot, and Species",
  Species = "SESE = coast redwood, and LIDE = tanoak.",
  HT1yr_m = "Sprout height one year after treatment.",
  HT5yr_m = "Same as above, but for year 5",
  HT10yr_m = "Same as above, but for year 10",
  `HTI1-5yr` = "Height growth between years 1 and 5, (4 growth periods)",
  `HTI5-10yr` = "Height growth between years 5 and 10 (5 growth periods)",
  DBH10yr_cm = "Diameter at breast height in cm at year 10. Only collected for
  redwood",
  LCBH10yr = "Live crown base height (height to first live branch) at year 10. 
  Only collected for redwood.",
  CR10yr = "Crown ratio (live crown length / total height) at year 10, only for
  redwood",
  HD10yr = "Unknown.",
  SDIinit = "Stand density index of plot immediately after treatment.",
  AggregatedYN = "Indicator for treatment HA.",
  ResidRWonClumpYN = "Unknown.",
  HT10rank = "Trees species specific height ranking within plot."
)

variable_descriptions |>
  imap(function(x, y) {
    tibble(Variable = y, Description = gsub("[[:space:]]{2,}", " ", x))
  }) |>
  list_rbind(names_to = "Variable") |>
  knitr::kable()

```

## Wrangle

I'm going to change some variable names to make them more ergonomic

```{r}

newnames <- c(
  site = "Site", plot = "Plot", treat = "Trtmt", tree = "Tree", spp = "Species",
  ht1 = "HT1yr_m", ht5 = "HT5yr_m", ht10 = "HT10yr_m", ht_inc5 = "HTI1-5yr",
  ht_inc10 = "HTI5-10yr", dbh10 = "DBH10yr_cm", lcbh10 = "LCBH10yr",
  sdi_init = "SDIinit", agg = "AggregatedYN", ht_rnk10 = "HT10rank"
)

tibble(old = newnames, new = names(newnames)) |> knitr::kable()

```

Our data are nested. We have plots within sites, trees within plots, and
observeations within trees (multiple observations per tree).

```
Sites
└─ Plots
   └─ Trees
      └─ Observations
```

Each Treatment is represented by one site/plot combination. Each site belongs to
each treatment and vice versa. I think the terminology here is that Sites and
treatments are crossed.

Currently, `plot` (integer) is only unique within `site` and `tree` is only unique within
`site`, `treat`, and `spp`. It will be more convenient if `plot` and `tree` are
globally unique identifiers. This makes the nesting structure implicit and we
can simplify our model syntax.

```{r}
#| output: false

make_site_plot_unique <- function(data) {
  data |>
    mutate(plot = cur_group_id(), .by = c(site, treat)) |>
    mutate(tree = row_number())
}

```

I'm also going to order the treatments acording to our expectations about the
most to least productive. This will affect how they are plotted and reported.

```{r}

treat_order <- c("GS", "LD", "HA", "HD")

set_expected_treatment_order <- function(data) {
  data |>
    mutate(treat = fct_relevel(treat, treat_order))
}

```

For modeling purposes, I will make sure that the data are of the correct type.
Grouping variables and character data should be factors.

```{r}

# Assuming variable names have already been changed
set_data_types <- function(data) {
  data |>
    mutate(
      across(c(site, plot, treat, tree, spp), as.factor)
    )
}

```

And I'll apply all the above steps in one go.

```{r}

sprouts <- sprouts_fresh |>
  select(all_of(newnames)) |>
  make_site_plot_unique() |>
  set_expected_treatment_order() |>
  set_data_types()

```

I will need a function to convert a variable in the data from wide to long format.

```{r}

lengthen_data <- function(data, var) {
  # I need regex for first part to handle ht and ht_inc and
  pref <- switch(var, ht = "(ht)", ht_inc = "(ht_inc)")
  # and the year
  suf <- "(\\d+)"
  str_to_match <- paste0(pref, suf)
  pivot_longer(data,
    matches(str_to_match),
    names_to = c(".value", "year"),
    names_pattern = str_to_match,
    names_transform = list(year = as.integer)
  ) |>
  relocate(year, matches(paste0(pref, "$")), .after = spp)
}

```

## Objectives

1. For each species/treatment combination, is there a difference in height
   increment between the first and second periods?
2. Is there a difference in redwood or tanoak sprout heights at year 10, if so,
   what is the magnitude of the difference?

## Visualize data

### Tree heights

The following figures reveal possible trends in the raw data.

#### Species/treatment/year

@fig-data-summary-treatments reveals fine, species specific differences between
treatments and general trends over time. It shows that over time, LD and GS
treatments have more taller trees than the other treatments, with GS having the
most. This is true for both redwood and tanoak. Additionally, for redwood it
appears that HA may have taller trees than HD, at least in year 10.

@fig-data-summary-spp shows the same information as before, but is arguably 
easier to look at. There is a general increasing trend in heights with
treatments as follows:

    HD < HA < LD < GS

Redwood is consistently taller than tanoak, and the GS treatment confers the
greatest advantage to redwood.

Across all treatments, it is also interesting to note that over times, the
height distributions, especially for redwood, seem to becoming more multi-modal
and more widely distributed. This could be due to site or plot effects, or to
microsite (within plot) effects, but it is not immediately clear why this
diverging performance should be so apparent with redwood and not tanoak. 


```{r}
#| label: fig-data-summary-treatments
#| fig-width: 8
#| fig-cap: >
#|   Height distributions for tanoak and redwood over time for each of four
#|   treatments. Treatments GS and LD have higher proportions of taller trees.
#|   Years refers to number of years after treatment.
#| message: false

sprouts |>
  lengthen_data("ht") |>
  ggplot(aes(ht, fct_rev(factor(year)), color = treat)) +
  scale_y_discrete(expand = c(0, 0)) +
  scale_x_continuous(expand = c(0, 0)) +
  coord_cartesian(clip = "off") +
  geom_density_ridges(alpha = .3, size = 1) +
  facet_wrap(~spp) +
  labs(x = "Height (m)", y = "Year") +
  scale_color_brewer(palette = "Set2")
```

```{r}
#| label: fig-data-summary-spp
#| fig-height: 8
#| fig-cap: >
#|   Similar to @fig-data-summary-treatments, but with an emphasis on
#|   differences between speceis responses across treatments. Comparisons are
#|   made for each year. The GS treatment appears to favor redwood response the
#|   most, but all treatments show redwoods are taller than tanoak. Years refers
#|   to number of years after treatment.
#| message: false

sprouts |>
  lengthen_data("ht") |>
  ggplot(aes(
    x = ht,
    y = fct_relevel(treat, treat_order),
    color = factor(spp, levels = c("SESE", "LIDE"))
  )) +
  scale_y_discrete(expand = c(0, 0)) +
  scale_x_continuous(expand = c(0, 0)) +
  coord_cartesian(clip = "off") +
  geom_density_ridges(alpha = .3, size = 1) +
  facet_grid(year ~ ., labeller = label_both) +
  labs(x = "Height (m)", y = "Treatment") +
  scale_color_brewer(palette = "Set2", name = "Species")
```

#### Species/year/SDI
@fig-data-summary-sdi shows that above around 400 SDI, tree heights level off.
It also implies a steady decrease in height from 0 to around 400 SDI. The
strength of the relationship appears to be increasing over time, particularly
for redwood.

```{r}
#| label: fig-data-summary-sdi
#| fig-cap: SDI vs HT for both species, across measurement years.
#| fig-width: 8.5

sprouts |>
  lengthen_data("ht") |>
  ggplot(aes(sdi_init, ht, color = factor(year))) +
  geom_point(alpha = 0.5) +
  geom_smooth(span = 1.2) +
  facet_wrap(~spp) +
  scale_color_brewer(palette = "Set2")
```

#### Species/site/plots
Lets see what the variability among sites and plots looks like, I'll focus on
year 10 only.

@fig-data-summary-sites reveals some differences between sites, particularly for
redwoods. Waldo North tends to have larger redwoods and Camp 6 has a large
proportion of smaller redwoods.

@fig-data-summary-plots shows that much of the difference in sites has to do
with one outlier plot within a site, and less about general site trends. We
should expect plots to capture a portion of the variance. Most notable is the
plot level difference between redwood and tanoak. For redwood, the large ammount
of within plot variability combined with the between plot variability obscures
the treatment (and site) effect. If you squint, there appears to be a similar
overall pattern between redwood and tanoak repsonse to treatment, but it appears
they respond differentially to certain plots.

```{r}
#| label: fig-data-summary-sites
#| fig-cap: >
#|   Distribution of heights at year 10 at each site for two species. Slabs are
#|   normalized by sample size to reflect the raw data, plotted as dots below.


sprouts |>
  ggplot(aes(ht10, site, fill = spp)) +
  stat_slab(aes(thickness = after_stat(pdf * n)), alpha = 0.6, scale = 0.7) +
  stat_dotsinterval(side = "bottom", scale = 0.7, slab_color = NA) +
  scale_fill_brewer(palette = "Set2") +
  labs(x = "year 10 height (m)", y = NULL, fill = "species")

```

```{r}
#| label: fig-data-summary-plots
#| fig-height: 7
#| fig-cap: >
#|   Same as for @fig-data-summary-sites, but for each plot (Site/treatment
#|   interaction). Grouped by treatment.

sprouts |>
  mutate(treat = fct_relevel(treat, treat_order)) |>
  ggplot(aes(
    ht10,
    site,
    fill = treat,
  )) +
  stat_slab(aes(thickness = after_stat(pdf * n)), alpha = 0.5, scale = 0.7) +
  stat_pointinterval(position = position_dodge(width = 0.5, preserve = "single")) +
  scale_color_brewer(palette = "Set2") +
  facet_wrap(~spp) +
  theme(legend.position = "bottom") +
  labs(y = NULL, x = "year 10 height (m)", fill = "treatment")

```

### Height increments

Height increments contain similar information as heights, but allow us to
compare directly between years.

@fig-data-summary-ht-inc-year shows that across treatments and species, height
growth slows down in the second period (years 5-10). This is more true for
redwood but it starts with more rapid growth than tanoak. In the most crowded
treatment (HD), redwoods height increment has become slower than tanoaks in the
second period. Also, in the second period, the high density, aggregated
treatment appears to have slightly higher (or equal) average growth increment,
which is not completely expected.

```{r}
#| label: fig-data-summary-ht-inc-year
#| fig-height: 7
#| fig-cap: >
#|   Variations in annual height growth increment between the first and second
#|   measurement periods (years 1-5, and 5-10, respectively).

sprouts |>
  lengthen_data("ht_inc") |>
  ggplot(
    aes(
      ht_inc,
      fct_relevel(treat, treat_order),
      fill = factor(year),
      color = factor(year)
    )
  ) +
  stat_slab(alpha = 0.5) +
  stat_pointinterval(
    position = position_dodge(width = 0.4, preserve = "single")
  ) +
  facet_wrap(~spp) +
  theme(legend.position = "bottom") +
  labs(
    fill = "Year",
    color = "Year",
    y = "Treatment",
    x = expression(Height~increment~(m~yr^-1))
  ) +
  scale_color_manual(
    values = rnd_color_brewer("Set2", c(1,4)),
    aesthetics = c("color", "fill")
  )

```

## Modeling

We have nested data where we have multiple observations within trees (over
time), trees within plots and plots within sites. Any of these levels of nesting
might result in correlations between observations, which violates the assumption
of independence for OLS models, but can be accounted for using multi-level
models.

I may want to include a categorical variable (spp) as a random slope (on the LHS
of the random parts) to allow random effects to be estimated for each species
separately. Michael Clark [explores this scenario], with some simpler data.

[explores this scenario]: https://m-clark.github.io/posts/2020-03-01-random-categorical

My approach will be to start with a simple model and build towards more complex
models.

### Height increment
By starting with height increment modeling, I will be able to answer question 1
in the objectives. This conclusion may be helpful for informing total height
modeling. I am curious whether height in the first 10 years increases linearly
with age. Is there a growth slow down in year 5-10 compared to years 1-5?

We saw in @fig-data-summary-ht-inc-year that increment does slow down somewhat
in the second measurement period (year 5-10), at least for redwoods, but we may
be justified in overlooking this. Lets look at individual tree's height
trajectories.

```{r}
#| label: fig-linear-ht
#| fig-height: 7
#| fig-cap: >
#|   Data plot showing trajectory of individual tree heights across the three
#|   measurements. Height increase appears fairly linear with year.

dht <- lengthen_data(sprouts, "ht")

dht |> 
  ggplot(aes(year, ht, color = spp, group = tree)) +
  geom_line(alpha = 0.6) +
  facet_wrap(~treat * site) +
  scale_color_brewer(palette = "Set2") +
  theme(
    legend.position = "bottom"
  )

```

```{r}
#| echo: false
#| output: asis

dinc <- lengthen_data(sprouts, "ht_inc") |> mutate(year = as.factor(year))

minc <- lst(
  minc1 = lm(ht_inc ~ year, dinc),
  minc2 = update(minc1, ~ . * spp),
  minc3 = update(minc2, ~ . * treat),
  minc4 = update(minc1, ~ . + spp + treat),
  minc5 = update(minc4, ~ . + spp:treat),
  minc6 = update(minc5, ~ . + spp:year),
  minc7 = update(minc6, ~ . + treat:year),
  minc8 = lmer(ht_inc ~ treat + year + spp + treat:spp + spp:year + (1 | plot) +
    (1 | tree), dinc),
  minc9 = update(minc8, ~ . + treat:year),
  minc10 = update(minc8, ~ . - (1 | plot) + (0 + spp | plot)),
  minc11 = update(minc10, ~ . - treat:spp),
)

format_model_formula <- function(mod) {
  form <- format(formula(mod)) |>
  paste0(collapse = "") |>
  str_replace("\\s{2,}", " ")
  form
}

label_model_formula <- function(mod, name) {
  form <- format_model_formula(mod)
  form <- paste0("`", form, "`")
  cat(paste(name, form, sep = ": "), "\n\n")
}

# iwalk(minc, label_model_formula)

```

For the most part, it looks like height increases linearly with year. Lets test
this with a model.

1. ``r format_model_formula(minc[[1]])``

   Ignoring everything else, there is a 0.08 m / yr slow down in the second
   period.

2. ``r format_model_formula(minc[[2]])``
   That slow down has more to do with redwood than tanoak.

3. ``r format_model_formula(minc[[3]])``
   There are overall treatment effect on growth which varies by species (redwood
   is more affected) but there are no more significant interactions with year.
   Our data does not detect significant differences in slow down by treatment or
   species.
4. ``r format_model_formula(minc[[4]])``
   This includes only additive effects and the effect of year is the same as
   model 1.
5. ``r format_model_formula(minc[[5]])``
   Again, the species by treatment interactions seem to be significant.
6. ``r format_model_formula(minc[[6]])``
   The species year interaction remains important.
7. ``r format_model_formula(minc[[7]])``
   Again, the treatment by year interactions do not seem important/estimable.
8. ``r format_model_formula(minc[[8]])``
   *Now I introduce random intercepts for plot and tree.* These lead to *much*
   smaller AIC's.
9. ``r format_model_formula(minc[[9]])``
   But treatment by year is still (mostly) not significant.
10. ``r format_model_formula(minc[[10]])`` 
    Adding a random slope for species by plot results in another big jump in
    AIC, but also reduces confidence in the treatment*species interaction. It
    would seem that the potential differences in species by treatment growth
    rate are obscured by redwoods greater variability across plots.
11. ``r format_model_formula(minc[[11]])`` 
    Removing the treat * species interaction results in a solid AIC boost. 

```{r}
#| echo: false
#| column: body-outset

modelsummary(minc, stars = TRUE)
```

### Year 10 only
The simplest model that I'm willing to look at includes a treatment/species
interaction, and no random effects. It will serve as a baseline for comparison.


```{r}
#| code-fold: false

# I'm calling the height data "d"
dht10 <- sprouts |> lengthen_data("ht") |> filter(year == 10)

mht101 <- lm(ht ~ treat * spp, data = dht10)
mht102 <- lmer(ht ~ treat * spp + (1 | plot) + (1 | site), data = dht10)
mht103 <- lmer(ht ~ treat * spp + (1 | plot), data = dht10)
mht104 <- lmer(ht ~ treat * spp + (0 + spp | plot), data = dht10)

mht10_list <- lst(mht101, mht102, mht103, mht104)
modelsummary(mht10_list, stars = TRUE)

```
The best model according to AIC includes a random intercept for plot and a
random slope for spp. Because spp is a factor, this effectively estimates a
species specific intercept, but also takes into account the covariance of the
species plot effect.

### Year 10 only Results

```{r}
#| label: fig-year-10-only
#|

mht104grid <- emmeans(mht104, pairwise ~ treat, by = c("spp"))
mht104cld <- cld(mht104grid, Letters = letters) |> as_tibble()

year_10_only_plot <- dht10 |>
  ggplot(aes(treat, ht, color = spp, fill = spp)) +
  facet_grid(~spp, switch = "x") +
  theme(panel.spacing = unit(0, "lines"),
        strip.background = element_blank(),
        strip.text = element_blank(),
        ) +
  geom_dots() +
  scale_color_brewer(palette = "Set2", aesthetics = c("color", "fill")) +
  geom_pointrange(
    data = mht104cld,
    aes(y = emmean, ymin = lower.CL, ymax = upper.CL),
    color = "gray50", position = position_nudge(x = -0.07),
    size = 0.7,
    linewidth = 1,
    show.legend = FALSE
  ) +
  geom_text(
    data = mht104cld,
    aes(y = upper.CL, label = .group),
    color = "black",
    position = position_nudge(x = -0.3, y = 0.2)
  )

year_10_only_plot

```

### Including multiple years

By including year as a numeric variable, we are assuming a liner relationship
between year and height. This term (and it's interactions) can than be
interpreted as a modeled growth increment, and although we only have
observations at years 1, 5, and 10, other years predictions will be linearly
interpolated.

The following models were fit, and are summarized in @tbl-model-summaries.

2. OLS linear model including year in a 3-way interaction.
3. Eliminate the 3-way interaction (`spp:treat:year`), keeping others. This
   results in a significantly lower AIC.
4. First random-effects model including interactions and universal random slopes
   for site and plot, and time-series.
5. Allow the random effects to (co-) vary by species.
6. Same as 5, but attempt to remove the 3-way interaction again.
7. Same as 6, but attempt to simplify the random effects by forcing them to be
   estimated independently, correlation between species is not estimated.
8. Re-introduce the 3-way interaction again.
9. Omit the random effect for site. This is supported by the interpretation of
   @fig-data-summary-plots.
10. Like 9, but try simplified (independent) random effects.

```{r}
#| code-fold: false
#| label: tbl-model-summaries
#| tbl-cap: >
#|   Summary table for models 2-10, described above. Standard error in
#|   parantheses.
#| column: body-outset

dht <- lengthen_data(sprouts, "ht")

mht2 <- lm(ht ~ treat * spp * year, data = dht)

mht3 <- lm(ht ~ treat + spp + year + treat:year + spp:year + treat:spp, data = dht)

mht4 <- lmer(
  ht ~ treat * spp * year + (1 | site) + (1 | plot) + (1 | tree),
  data = dht
)

mht5 <- lmer(
  ht ~ treat * spp * year + (0 + spp | site) + (0 + spp | plot) + 
    (0 + spp | tree),
  data = dht
)

mht6 <- lmer(
  ht ~ treat + spp + year + treat:spp + year:spp + treat:year +
    (0 + spp | site) + (0 + spp | plot) + (0 + spp | tree),
  data = dht
)

mht7 <- lmer(
  ht ~ treat + spp + year + treat:spp + year:spp + treat:year + (1 | site:spp) +
    (1 | plot:spp) + (1 | tree:spp),
  data = dht
)

mht8 <- lmer(
  ht ~ treat * spp * year + (1 | site:spp) + (1 | plot:spp) + (1 | tree:spp),
  data = dht
)

mht9 <- lmer(
  ht ~ treat * spp * year + (0 + spp | plot) + (0 + spp | tree),
  data = dht
)

mht10 <- lmer(
  ht ~ treat * spp * year + (1 | plot:spp) + (1 | tree:spp),
  data = dht
)

mht11 <- lmer(
  ht ~ treat + spp + year + treat:spp + year:spp + treat:year +
    (0 + spp | plot) + (0 + spp | tree),
  data = dht
)

# mht12 <- gamm(
#   ht ~ treat + spp + s(year, k=3),
#   random = list(plot = ~ spp, tree = ~ spp),
#   data = mutate(dht, year = as.numeric(year))
# )


modelsummary(list(
  "Model 2" = mht2, "Model 3" = mht3, "Model 4" = mht4, "Model 5" = mht5,
  "Model 6" = mht6, "Model 7" = mht7, "Model 8" = mht8, "Model 9" = mht9,
  "Model 10" = mht10, "Model 11" = mht11
), stars = TRUE)

```

The model with the lowest AIC is model 9. While it does have a singular warning,
I believe this is because of the zero estimate of tree-level random effect
variance for tanoak. The data exploration plots above show that compared to
redwood, tanoak height distributions are much more homogenous. Given the
similarities is coefficient and standard error estimates between model 9 and
some of the models that did not give a warning, I don't think that is is a
problem. I considered removing the species specific tree effect, but this
resulted in a much lower AIC--the tree variance for redwood is fairly large.

The next best model (AIC) is model 5, which is also the most complex model.
Model 9 is only slightly better, but is more desireable because of it's reduced
complexity.

### Multi-year results

Using model 9, we can now answer the questions we posed in the Objectives
section.

```{r}

# TODO: add slab to this plot also, it is slow
mht9emmeans <- emmip(mht9,
  spp ~ year | treat,
  CIs = TRUE,
  plotit = FALSE,
  at = list(year = 1:10)
)

mht9emmeans|> 
  ggplot(aes(year, yvar, color = spp, fill = spp)) +
    stat_slab(data = dht, aes(year, ht), alpha = 0.4) +
    geom_line() +
    facet_wrap(~ treat) +
    geom_ribbon(aes(ymin = LCL, ymax = UCL, color = NULL), alpha = .2) +
    scale_color_brewer(palette = "Set2", aesthetics = c("color", "fill"))


mht9grid <- emmeans(mht9, pairwise ~ treat, by = c("spp"), at = list(year = 10))
mht9cld <- cld(mht9grid, Letters = letters) |> as_tibble()

multiple_years_plot <- filter(dht, year == 10) |>
  ggplot(aes(treat, ht, color = spp, fill = spp)) +
  facet_grid(~spp, switch = "x") +
  theme(panel.spacing = unit(0, "lines"),
        strip.background = element_blank(),
        strip.text = element_blank(),
        ) +
  geom_dots() +
  scale_color_brewer(palette = "Set2", aesthetics = c("color", "fill")) +
  geom_pointrange(
    data = mht9cld, 
    aes(y = emmean, ymin = lower.CL, ymax = upper.CL),
    color = "gray50", position = position_nudge(x = -0.07),
    size = 0.7,
    linewidth = 1,
    show.legend = FALSE
  ) +
  geom_text(
    data = mht9cld,
    aes(y = upper.CL, label = .group),
    color = "black",
    position = position_nudge(x = -0.3, y = 0.2)
  )

library(patchwork)


```

### Multi-year vs. year 10 only

```{r}

bind_rows(mht104cld, mht9cld, .id = "model") |>
  mutate(
    model = case_match(model, "1" ~ "year 10 only", "2" ~ "multi-year"),
    .group = str_replace_all(.group, " ", "")
  ) |>
  ggplot(aes(treat, ht, color = model, fill = model)) +
  facet_grid(~spp) +
  geom_pointrange(
    aes(y = emmean, ymin = lower.CL, ymax = upper.CL),
    position = position_dodge(width = 0.4),
    size = 0.7,
    linewidth = 1
  ) +
  geom_dots(
    data = dht10, color = "gray50", fill = "gray70",
    position = position_nudge(x = 0.2), scale = 0.7, binwidth = 0.18
  ) +
  geom_text(
    aes(y = upper.CL + 0.6, label = .group, color = model,),
    position = position_dodge(width = 0.4),
  ) +
  theme(legend.position = "bottom") + 
  scale_color_manual(
    values = rnd_color_brewer("Set2", c(1,4)),
    aesthetics = c("color", "fill")
  )


```
