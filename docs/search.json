[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Redwoood multi-age experiment",
    "section": "",
    "text": "1 Introduction\nThis is an analysis of the 10-year remeasure of the Redwood multi-age experiment. It was started by Dr. Pascal Berrill, professor of silviculture at Cal-Poly Humboldt. The experiment is located in the Jackson Demonstration State Forest in Mendocino County, California. The multi-age experiment explores the regeneration response of several species following different harvesting techniques including group selection, aggregated retention, and high/low dispersed retention. The 10-year remeasure data includes surface fuel characterization."
  },
  {
    "objectID": "data_description.html#fuel-data",
    "href": "data_description.html#fuel-data",
    "title": "2  Data description",
    "section": "2.1 Fuel data",
    "text": "2.1 Fuel data\nThe fuel data was gathered in the spring of 2022 and 2023. The Firemon protocol was used as the basis for data collection which in turn employs the use of Brown’s transects, with the addition of duff, litter, and vegetation density sampling stations at two locations along each transect (Section 2.1.3). While the firemon protocol specifies a 2 meter tall imaginary cylinder for quantifying surface fuels, because our resprouting trees were continuous with the ground, we used an imaginary cylinder with a variable height, up to the tallest shrub or sprout fuels that were continuous to the ground.\nTwo 10-meter transects were installed parallel to plot edges at each macro plot corner. Their near ends shared a point inset 10 meters from the corner, towards plot center (Figure 2.1). Downed, woody fuels in four size classes were counted starting from the far end of the transect and each fuel size class was counted for a specified lenght of the total transect (generally longer for larger fuels).\nAt two stations along each transect, duff, litter, live and dead vegetation density (as height and percent cover), and fuel bed depth were assessed. Details of each of these values are described below (Section 2.1.3)\nThe notion of fuel bed depth is notably absent from the Firemon protocol, so we added it by estimating an “average” fuel bed depth within the vegetation sampling cylinder that included litter, and all downed woody debris.\nDominant (well represented) woody speices were also recorded in the vegetation cylinders.\n\n\n\nFigure 2.1: A diagram of the fuel sampling design depicting 0.4 hectare macro plot, fuels transects, transect stations, and vegetation sub-plots. Large green circles are vegetation monitoring plots (which are mostly used for tracking species composition) and the small orange circles are transect stations where duff, litter, and live and dead vegetation density were measured.\n\n\n\n2.1.1 Data entry\nData was entered using Excel and exported as a UTF-8 csv. The file format (Figure 2.2) was defined to resemble the physical datasheets as closely as possible, while maintaining data integretity and facilitating ease of input. There is one file for each macro plot (or replicate = site + treatment combination).\nEach file includes sections for different tables, and these are separated by a line that contains only a single hashtag (e.g., “#duff_litter_fbd”) in lowercase letters with underscores for spaces. In Excel, the #hashtag should go in the first cell of a row, with nothing esle in the row. There should be no blank rows before or after hashtags. The table sections used don’t correlate 1:1 with physical datasheet tables. For instance, columns for “metermeark1” and “metermark2” were added to reflect the fact that initially we sampled duff, litter and vegetation density (transect stations) at 5 and 10 m, but later we moved the stations to 5 and 9 m. The “1” and “2” following repeated variable names refers to one of these locations along the transect. The function used to wrangle these data matches rows based on transect number and columns based on column names. Thus, it is possible to rearrage the rows or columns within each section as long as column names are kept consistent and data for each transect have the same transect number. Following are the section and column labels used for each section of the plot data entry form with any notes regarding their format. A complete description of the data varialbes can be found in Section 2.1.3.\n\n#site_info site treatment\n\ndate\nonehr\ntenhr\nhundhr\nthoushr\ntrans_count notes (site level notes, should not contain commas)\n\n#transects\n\ntransect (number 1 through 8, corresponds with transect column in other sections)\ncorner\nazi\nfwd_crew\nveg_crew (moved from vegetation table to here)\nslope\nmetermark1 (location along transect of first station)\nmetermark2 (location along transect of second station)\nnotes (transect specific notes)\n\n#duff_litter_fbd\n\ntransect (number 1 through 8)\nonehr\ntenhr\nhundhr\nduff_litter1\npct_litter1\nfbd1\nduff_litter2\npct_litter2\nfbd2\n\n#vegetation\n\ntransect (number 1 though 8)\nlive_woody1\ndead_woody1\navg_w_ht1\nlive_herb1\ndead_herb1\navg_h_ht1\nlive_woody2\ndead_woody2\navg_w_ht2\nlive_herb2\ndead_herb2\navg_h_ht2\n\n#woody_species\n\ntransect\nspecies1 (space-delimited list of ‘significant’ species)\nspecies2 (space-delimited list of ‘significant’ species)\n\n#coarse_woody_debris\n\ntransect\ndia\ndecay\n\n\n\n\n\nFigure 2.2: Screenshot of an examle of the datasheet entry format. Each section, defined by a begining hashtag is parsed by an r function as a seperate table.\n\n\nAn R function is used to parse this file into individual tables. As part of this process, all the table sections whose rows have a 1:1 relationship with transects are combined into one wide table, based on the transect column.\n\n\nCode\nsource(\"./scripts/test_funs.r\")\n\n# This function processess one datasheet and returns three tables that can\n# be combined with corresponding tables from other data sheets\nwrangle_datasheet &lt;- function(file) {\n  con &lt;- file(file, encoding = \"UTF-8\")\n  lines &lt;- readLines(con)\n  close(con)\n\n  # Remove BOM &lt;https://stackoverflow.com/a/67906611&gt;\n  lines[1] &lt;- gsub(\"\\\\xef\\\\xbb\\\\xbf\", \"\", lines[1], useBytes = TRUE)\n\n  # These are the sections I want to extract\n  to_get &lt;- c(\n    \"site_data\", \"transects\", \"duff_litter_fbd\", \"vegetation\",\n    \"woody_species\", \"coarse_woody_debris\"\n  )\n  # sections are defined by line with only a hashtage (#section)\n  section_pattern &lt;- \"^#(\\\\w+).*$\"\n\n  # find hashtags and get the data from the next line to the line\n  # before the next hashtag\n  section_breaks &lt;- grep(section_pattern, lines)\n  section_start &lt;- section_breaks + 1\n  section_end &lt;- c(section_breaks[-1], length(lines)) - 1\n  section_names &lt;- gsub(section_pattern, \"\\\\1\", lines[section_breaks])\n\n  sections &lt;- purrr::map2(section_start, section_end, \\(x, y) c(x, y)) |&gt;\n    setNames(section_names) |&gt;\n    (`[`)(to_get) |&gt;\n    purrr::map(\\(x) lines[seq.int(x[1], x[2])]) |&gt;\n    # collapse sections to strings so they can be read as if they were files\n    purrr::map(\\(x) paste(x, collapse = \"\\n\")) |&gt;\n    # leave empty column names so they can be removed\n    purrr::map(\\(x) \n      readr::read_csv(x, show_col_types = FALSE, name_repair = \"minimal\", progress = FALSE)\n    ) |&gt;\n    # Remove empty columns\n    purrr::map(\\(x) x[!names(x) %in% \"\"])\n\n  # I'm going to combine these into a wide table because each row is a transect.\n  # Further data wrangling will require expanding the stations within transecs.\n  # also need to make sure the rows have site data and transect ids for the\n  # coarse woody debris.\n  transect_data &lt;- c(\n    \"transects\", \"duff_litter_fbd\", \"vegetation\", \"woody_species\"\n  )\n\n  transects &lt;- sections |&gt;\n    (`[`)(transect_data) |&gt;\n    purrr::reduce(dplyr::left_join, by = \"transect\") |&gt;\n    # differentiate between transect lenghts and particle counts\n    dplyr::rename_with(\\(x) paste0(x, \"_count\"), ends_with(\"hr\")) |&gt;\n    dplyr::mutate(\n      sections$site_data[c(\"site\", \"treatment\")],\n      .before = corner\n    ) |&gt;\n    dplyr::select(-transect)\n\n  coarse_woody_debris &lt;- sections$coarse_woody_debris |&gt;\n    dplyr::mutate(\n      sections$site_data[c(\"site\", \"treatment\")],\n      .after = transect\n    ) |&gt;\n    dplyr::left_join(\n      sections$transects[c(\"transect\", \"corner\", \"azi\")]\n    ) |&gt;\n    dplyr::select(c(site, treatment, corner, azi, dia, decay))\n  \n  plots &lt;- sections$site_data |&gt;\n    # differentiate between transect lenghts and particle counts\n    dplyr::rename_with(\\(x) paste0(x, \"_length\"), ends_with(\"hr\"))\n\n  # I'll add a check to make sure that all transects and plots are unique\n  warn_duplicates(transects, site, treatment, corner, azi)\n  warn_duplicates(plots, site, treatment)\n\n  # Final output with three tables. These will be combined with corresponding\n  # tables from other datasheets.\n  list(\n    plots = plots,\n    transects = transects,\n    coarse_woody = coarse_woody_debris\n  )\n}\n\ndata_dir &lt;- \"../data\"\n# Combine fuels data for each plot\n#\n# This function expects all fuel datasheets to begin with \"fuel\" and end with\n# \"csv\". It loads all matching files in a given folder and returns the same\n# tables as `wrangle_datasheet`, but for all plots combined.\ncombine_fuels_datasheets &lt;- function(data_dir) {\n  files &lt;- list.files(data_dir, pattern = \"^fuel.*csv$\", full.names = TRUE)\n  sheets_list &lt;- purrr::map(files, wrangle_datasheet)\n  table_names &lt;- purrr::set_names(names(sheets_list[[1]]))\n  purrr::map(table_names, \\(x) purrr::list_rbind(purrr::map(sheets_list, x)))\n}\n\n\n# this is how to pivot station data to longer format\n# d |&gt;\n#   tidyr::pivot_longer(\n#     cols = !c(site, treatment, corner, azi),\n#     names_to = \".value\",\n#     names_pattern = \"(\\\\w+)[12]$\"\n#   )\n\n\nThe resulting data looks like this:\n\nwrangle_datasheet(\"../data/fuel_waldon_gs.csv\")\n\nJoining with `by = join_by(transect)`\n\n\n$plots\n# A tibble: 1 × 9\n  site   treatment date   onehr_length tenhr_length hundhr_length thoushr_length\n  &lt;chr&gt;  &lt;chr&gt;     &lt;chr&gt;         &lt;dbl&gt;        &lt;dbl&gt;         &lt;dbl&gt;          &lt;dbl&gt;\n1 waldon gs        3/15/…            2            2             4             10\n# ℹ 2 more variables: trans_count &lt;dbl&gt;, notes &lt;chr&gt;\n\n$transects\n# A tibble: 8 × 33\n  site   treatment corner   azi fwd_crew veg_crew slope metermark1 metermark2\n  &lt;chr&gt;  &lt;chr&gt;     &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;    &lt;chr&gt;    &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n1 waldon gs        n        135 jf       ac           4          5         10\n2 waldon gs        n        248 jf       ac          19          5         10\n3 waldon gs        w         45 dr       dr           8          5         10\n4 waldon gs        w        135 dr       dr          20          5         10\n5 waldon gs        s         45 dr       jf           5          5         10\n6 waldon gs        s        315 dr       jf           5          5         10\n7 waldon gs        e        225 dr       jf           8          5          9\n8 waldon gs        e        315 dr       jf          13          5          9\n# ℹ 24 more variables: notes &lt;chr&gt;, onehr_count &lt;dbl&gt;, tenhr_count &lt;dbl&gt;,\n#   hundhr_count &lt;dbl&gt;, duff_litter1 &lt;dbl&gt;, pct_litter1 &lt;dbl&gt;, fbd1 &lt;dbl&gt;,\n#   duff_litter2 &lt;dbl&gt;, pct_litter2 &lt;dbl&gt;, fbd2 &lt;dbl&gt;, live_woody1 &lt;dbl&gt;,\n#   dead_woody1 &lt;dbl&gt;, avg_w_ht1 &lt;dbl&gt;, live_herb1 &lt;dbl&gt;, dead_herb1 &lt;dbl&gt;,\n#   avg_h_ht1 &lt;dbl&gt;, live_woody2 &lt;dbl&gt;, dead_woody2 &lt;dbl&gt;, avg_w_ht2 &lt;dbl&gt;,\n#   live_herb2 &lt;dbl&gt;, dead_herb2 &lt;dbl&gt;, avg_h_ht2 &lt;dbl&gt;, species1 &lt;chr&gt;,\n#   species2 &lt;chr&gt;\n\n$coarse_woody\n# A tibble: 20 × 6\n   site   treatment corner   azi   dia decay\n   &lt;chr&gt;  &lt;chr&gt;     &lt;chr&gt;  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 waldon gs        n        135     9     5\n 2 waldon gs        n        135    13     2\n 3 waldon gs        n        248    48     3\n 4 waldon gs        n        248    10     5\n 5 waldon gs        w         45    16     5\n 6 waldon gs        w         45    15     5\n 7 waldon gs        w         45    14     5\n 8 waldon gs        w         45    14     5\n 9 waldon gs        w        135    32     3\n10 waldon gs        w        135    12     4\n11 waldon gs        w        135    30     5\n12 waldon gs        s         45    28     4\n13 waldon gs        s         45    42     5\n14 waldon gs        s        315    26     3\n15 waldon gs        e        225    15     4\n16 waldon gs        e        225    13     3\n17 waldon gs        e        225    18     5\n18 waldon gs        e        225    34     3\n19 waldon gs        e        315    26     4\n20 waldon gs        e        315    12     5\n\n\nWhile the wide format for the transect data is not ideal, it is convenient because it reduces the number of tables we are dealing with. This will require extra work at analysis time to expand the data variables which are followed by a “1” or “2”, which represent different stations (Section 2.1.3) on the same transect. To analze these data, they will first need to be pivoted into a longer format, where the station (1 or 2) becomes an explicit column.\n\n\n2.1.2 Data variable descriptions\nThe following is a descripton of the data variables for each of the tables in the data list. So, the $plots heading refers to the table found in data$plots. This data structure is subject to change, but for now, has 3 tables. $plots has plot level data including the lengths of transects (which are the same across all transects, but included for clarity). $transects contains all the fuel data associated with a given transect, including both sampling stations, in wide format (one row for each transect). Finally, $coarse_woody contains coarse woody debris in a long format (multiple rows for each transect).\n\n\n2.1.3 Station sampling cylinder\nReference is made the station sampling cylinder below. It is an imaginary, vertical cylinder with a radius of 1 meter and a variable height equal to the maxiumm height of sprout or shrub vegetation within the cylinders radius. There are two sampling cylinders on each transect and their centers are defined by the transects’ two metermarks. Duff, litter, and fuel bed depth in addition to the vegetation measurements, are all recorded within these cylinders.\n\n\n2.1.4 $plots\n\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\nsite\n\n\n\ntreatment\n\n\n\ndate\n\n\n\nonehr\nDistance from end of transect for which 1-hr fuels were counted\n\n\ntenhr\nDistance from end of transect for which 10-hr fuels were counted\n\n\nhundhr\nDistance from end of transect for which 100-hr fuels were counted\n\n\nthoushr\nDistance from end of transect for which 1000-hr fuels were counted\n\n\ntrans_count\nnumber of transects on macro plot\n\n\nnotes\n\n\n\n\n\n\n2.1.5 $transects\n\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\nsite\nOne of four different sites: whiskey, waldon, waldos, and camp6\n\n\ntreatment\nOne of HD=High density, dispersed retention, LD=Low density dispersed retention, MD=Medium densty dispersed retention, HA=High density aggreagated retention, GS=Group selection opening (1 ha, centered on plot)\n\n\ncorner\nOne of n,s,e,w for “diamond” plost and one of ne, nw, se, sw for “square” plots\n\n\nazi\nactual azimuth from corner to end of fuel transect, deg\n\n\nfwd_crew\nInitials of person performing fuel counts and measuring litter, duff, and FBD\n\n\nveg_crew\nInitials of person estimating vegetation cover\n\n\nslope\nslope in percent, measured with clinometer\n\n\nmetermark1\nlocantion along transect of first veg. station m\n\n\nmetermark2\nlocantion along transect of first veg. station m\n\n\nnotes\nTransect specific notes\n\n\nonehr\nCount of down woody fuels &lt;0.6 cm for the lenght of the 1-hr transect, redwood leaflets less than about 2 mm were not counted as one hour fuels\n\n\ntenhr\nCount of down woody fuels &gt;= 0.6 and &lt; 2.5 cm\n\n\nhundhr\nCount of down woody fuels &gt;= 2.5 and &lt; 8 cm\n\n\nduff_litter1\nCombined duff and litter depth from a representative location within a 1-meter radius circle centered at metermark, cm\n\n\npct_litter1\nPercent of duff_litter depth compose of litter: percent\n\n\nfbd1\nEstimated average height of litter and downed woody debris within the sampling cylinder, 1 m radius, centered at metermark\n\n\nduff_litter2\n\n\n\npct_litter2\n\n\n\nfbd2\n\n\n\nlive_woody1\nTotal projected ground cover of all live woody plant parts within 1-meter-radius sampling cylinder of height equal to the height of the shrub or sprout vegetaion within the cylinders radius, 0-100 percent\n\n\ndead_woody1\nTotal projected ground cover of all dead woody plant parts connected to live or standing dead plants, within the sampling cylinder 0-100 percent\n\n\navg_w_ht1\nAverage maximum height of all live and dead woody plants in sampling cylinder (see Estimating Height in Firemon protocol)\n\n\nlive_herb1\nTotal projected ground cover of live herbs in the sampling cylinder\n\n\ndead_herb1\nTotal projected ground cover of dead herbs in the sampling cylinder\n\n\navg_h_ht1\nAverage maximum height of live and dead herbs in the sampling cylinder\n\n\nlive_woody2\n\n\n\ndead_woody2\n\n\n\navg_w_ht2\n\n\n\nlive_herb2\n\n\n\ndead_herb2\n\n\n\navg_h_ht2\n\n\n\nspecies1\nDominant woody species within sampling cylinder, each species is assumed to occupy an equal portion of volume, under-represented species are ignored\n\n\nspecies2\n\n\n\n\n\n\n2.1.6 $coarse_woody\n\n\n\n\n\n\n\nVariable\nDescription\n\n\n\n\nsite\n\n\n\ntreatment\n\n\n\ncorner\n\n\n\nazi\n\n\n\ndia\n\n\n\ndecay\nDecay class 1-5, 1=Fine branches still present, 2=Some branches and bark missing, 3=most branches and much bark missing potentially minor decay, 4=Significant decay, 5=Almost completely rotten"
  },
  {
    "objectID": "calculate_fuel_loading.html#fine-woody-debris",
    "href": "calculate_fuel_loading.html#fine-woody-debris",
    "title": "3  Calculate fuel loading",
    "section": "3.1 Fine woody debris",
    "text": "3.1 Fine woody debris\nThe above information will allow us to calculate fuel loading for fine and coarse woody debris. First we’ll load our data and get the FWD (and the fuel particle parameters) in a long format for easier calculations.\n\n\nCode\n# use this to reduce the amount of typing when referring to transects\ntransectid &lt;- c(\"site\", \"treatment\", \"corner\", \"azi\")\n\nfwd &lt;- d$transects |&gt;\n  select(all_of(transectid), slope, matches(\"one|ten|hun\")) |&gt;\n  left_join(select(d$plots, site, treatment, matches(\"one|ten|hun\"))) |&gt;\n  # move onehr, tenhr, etc to new column and create new columns for transect\n  # length and particle counts\n  pivot_longer(\n    matches(\"count|len\"),\n    names_to = c(\"class\", \".value\"),\n    names_sep = \"_\"\n  )"
  },
  {
    "objectID": "calculate_fuel_loading.html#coarse-woody-debris",
    "href": "calculate_fuel_loading.html#coarse-woody-debris",
    "title": "3  Calculate fuel loading",
    "section": "3.2 Coarse woody debris",
    "text": "3.2 Coarse woody debris\nCoarse woody debris is already in a long format so we don’t need to pivot longer, but we will summarize the data for each transect by getting the sum of squared diameters. Also, we only have parameters for “sound” and “rotten” particles, so anything over decay class 3 will be considered “rotten”. Finally, we need to join in transect slopes, and transect lengths.\n\ncwd &lt;- d$coarse_woody |&gt;\n  mutate(class = if_else(decay &gt; 3, \"thoushr_r\", \"thoushr_s\")) |&gt;\n  group_by(site, treatment, corner, azi, class) |&gt;\n  # named count to match fwd table, but these are actually summed d^2\n  summarize(count = sum(dia^2), .groups = \"drop\") |&gt;\n  left_join(d$transects[c(transectid, \"slope\")]) |&gt;\n  left_join(d$plots[c(\"site\", \"treatment\", \"thoushr_length\")]) |&gt;\n  select(all_of(transectid), slope, class, count, length = \"thoushr_length\")"
  },
  {
    "objectID": "calculate_fuel_loading.html#dead-and-down-woody-debris-loading",
    "href": "calculate_fuel_loading.html#dead-and-down-woody-debris-loading",
    "title": "3  Calculate fuel loading",
    "section": "3.3 Dead and down woody debris loading",
    "text": "3.3 Dead and down woody debris loading\nNow, if we can be sure that the FWD and CWD data have the same column names, we can bind them, join the fuel parameters, and calculate the load for each class\n\nif (setequal(names(cwd), names(fwd))) woodydebris &lt;- bind_rows(fwd, cwd)\nwoodydebris &lt;- woodydebris |&gt; \n  left_join(get_particle_params(source = \"glebocki\")) |&gt;\n  mutate(\n    load = simple_load(\n      sum_d2 = count * d2,\n      l = length,\n      percent_slope = slope,\n      G = G,\n      a = a\n    ),\n    .keep = \"unused\"\n  )\n\nJoining with `by = join_by(class)`"
  },
  {
    "objectID": "calculate_fuel_loading.html#duff-and-litter",
    "href": "calculate_fuel_loading.html#duff-and-litter",
    "title": "3  Calculate fuel loading",
    "section": "3.4 Duff and litter",
    "text": "3.4 Duff and litter\nWe measured total duff/litter depth, and then estimated a percent of this depth that would be classified as litter. Litter is any leaf material not classified as a 1-hr fuel, that has not yet begun to break down. Particles that were very dark in color and that were broken into smaller pieces than when they had originally fallen were classified as duff.\nDuff and litter were measured at two locations along each transect, for a total of 16 measurements per plot.\nTo convert these depths to load values we use a depth to load equation. Finney and Martin (1993) found a wide variability in the bulk densities of samples, suggesting that simply using the average bulk density should be sufficient, as opposed to calculating bulk densities based on strata depth or differentiating between duff and litter.\n\n\n\n\nTable 3.2: Average depth to load multiplier from different sources in the literature.\n\n\n\n\n\n\n\nSource\nDescription\nLoad Mg ha-1 cm-1\n\n\n\n\nFinney and Martin (1993)\nAnnadel SP & Humboldt Redwoods SP (rw dbh &lt;= 60 in)\n7.15\n\n\nKittredge (1940)\nplantation redwoods\n6.80\n\n\nStuart, J.D. 1985, Unpubl. in Finney and Martin (1993)\nRedwoods SP, (mean of duff & litter)\n9.25\n\n\nJan W. Van Wagtendonk, Benedict, and Sydoriak (1998)\nAvg. for Sierra Nevada conifers\n16.24\n\n\nNives (1989)\nRedwood NP, Lost Man Cr., Redwood Cr.\n2.42\n\n\nKrieger et al. (2020)\nNo ref. cited, 2.75 and 5.5 lbs/ft3 litter and duff resp.\n6.60\n\n\nValachovic et al. (2011)\nTanoak-Douglas-fir, litter only, Humboldt County\n0.93\n\n\n\n\n\n\nOn average, we have about 50% litter and a depth of about 6.2 cm. If we use the mean of the first 3 rows in Table 3.2, an average depth to load multiplier for redwood forests (with 50% litter) is 7.73 Mg ha-1 cm-1.\n\ndufflitter |&gt;\n  group_by(treatment) |&gt;\n  summarize(\n    avg_pct_litter = mean(\n      litter_depth / (duff_depth + litter_depth), \n      na.rm = TRUE\n    ),\n    avg_total_depth = mean(duff_depth + litter_depth),\n)\n\n# A tibble: 5 × 3\n  treatment avg_pct_litter avg_total_depth\n  &lt;chr&gt;              &lt;dbl&gt;           &lt;dbl&gt;\n1 gs                 0.482            6.26\n2 ha                 0.548            5.20\n3 hd                 0.395            7.11\n4 ld                 0.453            5.80\n5 md                 0.545            7.84\n\ndufflitter &lt;- dufflitter |&gt;\n  mutate(\n    dufflitter_load = (duff_depth + litter_depth) * 7.73\n  )"
  },
  {
    "objectID": "calculate_fuel_loading.html#vegetation",
    "href": "calculate_fuel_loading.html#vegetation",
    "title": "3  Calculate fuel loading",
    "section": "3.5 Vegetation",
    "text": "3.5 Vegetation\nWe based our data collection on the Firemon protocol, which determines vegetative fuel loading by multiplying estimated percent cover by height by a constant bulk densities of 8 and 18 t/ha/m for herbaceous and shrub components, respectively.\n\n\nveg_match &lt;- \"woody|herb|avg_w_ht|avg_h_ht|species\"\nveg &lt;- d$transects |&gt;\n  select(all_of(transectid), slope, matches(veg_match)) |&gt;\n  pivot_longer(\n    !c(any_of(transectid), slope),\n    names_to = c(\".value\", \"station\"),\n    names_pattern = \"(\\\\w+)([12])\"\n  ) |&gt; \n  mutate(\n    woody_ht = if_else(live_woody == 0 & dead_woody == 0, 0, avg_w_ht),\n    herb_ht = if_else(live_herb == 0 & dead_herb == 0, 0, avg_h_ht),\n    veg_woody_load = ((live_woody + dead_woody) / 100) * woody_ht * 18,\n    woody_p_dead = if_else(\n      veg_woody_load == 0, 0, dead_woody / (live_woody + dead_woody)\n    ),\n    veg_herb_load = ((live_herb + dead_herb) / 100) * herb_ht * 8,\n    herb_p_dead = if_else(\n      veg_herb_load == 0, 0, dead_herb / (live_herb + dead_herb)\n    )\n  ) |&gt;\n  select(!matches(\"live_|dead_|avg_\"), woody_ht, herb_ht)"
  },
  {
    "objectID": "calculate_fuel_loading.html#sec-total-load",
    "href": "calculate_fuel_loading.html#sec-total-load",
    "title": "3  Calculate fuel loading",
    "section": "3.6 Total load",
    "text": "3.6 Total load\nNow we can join results for fine woody debris, coarse woody debris, litter, and duff into a single dataframe.\nVegetation and duff/litter first need to be summarized to the transect level.\n\nwoodydebris\n\n# A tibble: 556 × 6\n   site  treatment corner   azi class    load\n   &lt;chr&gt; &lt;chr&gt;     &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;   &lt;dbl&gt;\n 1 camp6 gs        s        315 onehr   0.638\n 2 camp6 gs        s        315 tenhr   3.59 \n 3 camp6 gs        s        315 hundhr  4.90 \n 4 camp6 gs        s         45 onehr   0.321\n 5 camp6 gs        s         45 tenhr   4.05 \n 6 camp6 gs        s         45 hundhr 14.8  \n 7 camp6 gs        w         45 onehr   0.425\n 8 camp6 gs        w         45 tenhr   0.448\n 9 camp6 gs        w         45 hundhr  4.90 \n10 camp6 gs        w        135 onehr   2.48 \n# ℹ 546 more rows\n\ndufflitter_load &lt;- dufflitter |&gt; \n  group_by(pick(all_of(transectid))) |&gt; \n  summarize(dufflitter_load = mean(dufflitter_load))\n\n`summarise()` has grouped output by 'site', 'treatment', 'corner'. You can\noverride using the `.groups` argument.\n\nveg_load &lt;- veg |&gt;\n  group_by(pick(all_of(transectid))) |&gt;\n  summarize(across(contains(\"load\"), mean))\n\n`summarise()` has grouped output by 'site', 'treatment', 'corner'. You can\noverride using the `.groups` argument.\n\ntotal_load &lt;- left_join(dufflitter_load, veg_load) |&gt;\n  pivot_longer(\n    contains(\"_load\"),\n    names_to = c(\"class\", \".value\"),\n    names_pattern = \"(\\\\w+)_(load)\"\n  ) |&gt;\n  bind_rows(woodydebris)\n\nJoining with `by = join_by(site, treatment, corner, azi)`\n\n\nJohn Stuart measured old-growth forest fuels in in Bull Creek Drainage of Humboldt Redwood State Park, approximately 30 km inland from the coast. Overstory BA was about 66 m2ha-1. Plots were classifed based on their overstory/understory species as one of:\n\nredwood-Douglas-fir/tanoak-evergreen huckleberry\nredwood-Douglas-fir/evergreen huckleberry-tanoak\nDouglas-fir-redwood/evergreen huckleberry\n\nFinney and Martin (1993) measured fuels at two loacations. In Annadel SP with 30-40% slopes and 45 - 60 m2ha-1 of trees approximate 120 years old. At RW SP, BA was between 20 and 60 m2ha-1 that sprouted after harvest and were around 90 years old.\nKittredge (1940) studied duff and litter in redwood plantations with an average total depth of 4 cm.\nValachovic et al. (2011) measured surface fuels in Douglas-fir-tanoak forests from Sonoma to northern Humboldt counteis. The values shown are from across this range.\n\nstuart &lt;- tribble(\n  ~source, ~class, ~low, ~high,\n  \"stuart\", \"dufflitter\", 13.78, 32.81,\n  \"stuart\", \"onetenhundhr\", 3.59, 5.96,\n  \"stuart\", \"thoushr_s\", 2.25, 52.35,\n  \"stuart\", \"thoushr_r\", 0.23, 20.82,\n  \"stuart\", \"veg_woody\", 0.04, 2.48,\n  \"stuart\", \"thoushr\", 2.48, 56.34,\n)\nstuart &lt;- mutate(stuart, across(where(is.numeric), \\(x) x * 2.54))\n\nothers &lt;- tribble(\n  ~source, ~class, ~low, ~high,\n  \"finney\", \"dufflitter\", 29, 55,\n  \"finney\", \"onetenhundhr\", 9, 20,\n  \"finney\", \"thoushr\", 0, 264,\n  \"kittredge\", \"dufflitter\", 24, 24,\n  \"valachovic\", \"litter\", 2.9, 4.7,\n  \"valachovic\", \"onehr\", 2.0, 3.4,\n  \"valachovic\", \"tenhr\", 2.5, 6.1,\n  \"valachovic\", \"hundhr\", 3.1, 7.6,\n  \"valachovic\", \"thoushr_s\", 4.9, 76.7,\n  \"valachovic\", \"thoushr_r\", 3.1, 35.2,\n  \"valachovic\", \"thoushr\", 18.3, 85.9,\n)\n\nfuel_classes &lt;- c(\"litter\", \"dufflitter\", \"onehr\",\n\"tenhr\", \"hundhr\", \"onetenhundhr\", \"thoushr_s\", \"thoushr_r\", \"thoushr\",\n    \"veg_woody\", \"veg_herb\")\n\nadd_combined_classes &lt;- function(data, newclass, classes) {\n  filter(data, class %in% classes) |&gt;\n    group_by(pick(all_of(transectid))) |&gt;\n    summarize(class = newclass, load = sum(load)) |&gt;\n    bind_rows(data) |&gt;\n    ungroup()\n}\n\ntotal_load |&gt;\n  add_combined_classes(\"onetenhundhr\", c(\"onehr\", \"tenhr\", \"hundhr\")) |&gt;\n  add_combined_classes(\"thoushr\", c(\"thourshr_s\", \"thoushr_r\")) |&gt;\n  group_by(class, treatment) |&gt;\n  summarize(load = mean(load, na.rm = TRUE)) |&gt;\n  summarize(low = min(load), high = max(load)) |&gt;\n  mutate(source = \"thisstudy\", .before = 1) |&gt;\n  bind_rows(stuart) |&gt; \n  bind_rows(others) |&gt;\n  ungroup() |&gt;\n  mutate(class = factor(class, levels = fuel_classes)) |&gt;\n  arrange(class, mean(c(low, high))) |&gt;\n  knitr::kable(digits = 1)\n\n`summarise()` has grouped output by 'site', 'treatment', 'corner'. You can\noverride using the `.groups` argument.\n`summarise()` has grouped output by 'site', 'treatment', 'corner'. You can\noverride using the `.groups` argument.\n`summarise()` has grouped output by 'class'. You can override using the\n`.groups` argument.\n\n\n\n\n\nsource\nclass\nlow\nhigh\n\n\n\n\nvalachovic\nlitter\n2.9\n4.7\n\n\nthisstudy\ndufflitter\n40.2\n60.6\n\n\nstuart\ndufflitter\n35.0\n83.3\n\n\nfinney\ndufflitter\n29.0\n55.0\n\n\nkittredge\ndufflitter\n24.0\n24.0\n\n\nthisstudy\nonehr\n0.6\n1.2\n\n\nvalachovic\nonehr\n2.0\n3.4\n\n\nthisstudy\ntenhr\n2.9\n4.7\n\n\nvalachovic\ntenhr\n2.5\n6.1\n\n\nthisstudy\nhundhr\n8.9\n17.5\n\n\nvalachovic\nhundhr\n3.1\n7.6\n\n\nthisstudy\nonetenhundhr\n12.8\n22.9\n\n\nstuart\nonetenhundhr\n9.1\n15.1\n\n\nfinney\nonetenhundhr\n9.0\n20.0\n\n\nthisstudy\nthoushr_s\n27.4\n72.4\n\n\nstuart\nthoushr_s\n5.7\n133.0\n\n\nvalachovic\nthoushr_s\n4.9\n76.7\n\n\nthisstudy\nthoushr_r\n23.0\n63.1\n\n\nstuart\nthoushr_r\n0.6\n52.9\n\n\nvalachovic\nthoushr_r\n3.1\n35.2\n\n\nthisstudy\nthoushr\n23.0\n63.1\n\n\nstuart\nthoushr\n6.3\n143.1\n\n\nfinney\nthoushr\n0.0\n264.0\n\n\nvalachovic\nthoushr\n18.3\n85.9\n\n\nthisstudy\nveg_woody\n12.4\n37.8\n\n\nstuart\nveg_woody\n0.1\n6.3\n\n\nthisstudy\nveg_herb\n0.2\n0.8\n\n\n\n\n\n\n\n\n\nBrown, James K. 1974. “Handbook for Inventorying Downed Woody Material.” Gen. Tech. Rep. INT-16. Ogden, UT: US Department of Agriculture, Forest Service, Intermountain Forest and Range Experiment Station. 24 p. 16.\n\n\nFinney, Mark A., and Robert E. Martin. 1993. “Fuel Loading, Bulk Density, and Depth of Forest Floor in Coast Redwood Stands.” Forest Science 39 (3): 617–22.\n\n\nGlebocki, Radoslaw. 2015. “Fuel Loading and Moisture Dynamics in Thinned Coast Redwood Forests in Headwaters Forest Reserve, California.” Master’s thesis, Humboldt State University. https://scholarworks.calstate.edu/concern/theses/ws859j014.\n\n\nKittredge, Joseph. 1940. “A Comparison of Forest Floors from Plantations of the Same Age and Environment.” Journal of Forestry 38 (9): 729–31. https://doi.org/10.1093/jof/38.9.729.\n\n\nKrieger, Raven M., Brian E. Wall, Cody W. Kidd, and John-Pascal Berrill. 2020. “Chronosequence of Fuel Loading and Fuel Depth Following Forest Rehabilitation Frill Treatment of Tanoak to Release Douglas-Fir: A Case Study from Northern California.” Forests 11 (6): 691. https://doi.org/10.3390/f11060691.\n\n\nNives, Sherryl L. 1989. “Fire Behavior on the Forest Floor in Coastal Redwood Forests, Redwood National Park.” PhD thesis, Humboldt State University.\n\n\nValachovic, Yana S., Christopher A. Lee, Hugh Scanlon, J. Morgan Varner, Radoslaw Glebocki, Bradley D. Graham, and David M. Rizzo. 2011. “Sudden Oak Death-Caused Changes to Surface Fuel Loading and Potential Fire Behavior in Douglas-fir-tanoak Forests.” Forest Ecology and Management 261 (11): 1973–86. https://doi.org/10.1016/j.foreco.2011.02.024.\n\n\nVan Wagner, C. E. 1982. “Practical Aspects of the Line Intersect Method.” PI-X-12. Chalk River, Ontario, Canada: Petawawa National Forestry Institute, Canadian Forestry Service.\n\n\nVan Wagtendonk, J. W., J. M. Benedict, and W. M. Sydoriak. 1996. “Physical Properties of Woody Fuel Particles of Sierra Nevada Conifers.” International Journal of Wildland Fire 6 (3): 117–23. https://doi.org/10.1071/wf9960117.\n\n\nVan Wagtendonk, Jan W., James M. Benedict, and Walter M. Sydoriak. 1998. “Fuel Bed Characteristics of Sierra Nevada Conifers.” Western Journal of Applied Forestry 13 (3): 73–84. https://doi.org/10.1093/wjaf/13.3.73."
  },
  {
    "objectID": "work_log.html",
    "href": "work_log.html",
    "title": "4  Work log",
    "section": "",
    "text": "The following is a log of the work completed for this project\n\n2023-06-08\n\nCalculate fine and coarse fuel load\ncreate test for duplicated transect or plot ids\nfix wrong azimuths in datasheet\nstart with duff and litter load\n\n\n\n2023-06-05\n\nStart calculate fuel loading\nsome background research on the theory behind planar intercept\ncompile fuel particle parameters from multiple sources\n\n\n\n2023-06-01\n\nFinish data entry\n\n\n\n2023-05-31\n\nFigure showing fuel (and vegetation) sampling layout\nFunction to combine data from all datasheets\nRefine data description text\ncontinued data entry\n\n\n\n2023-5-26\n\nDeveloped data input format\n\none file for each plot\n\nCreated R function to ingest a datasheet in the specified format\nDocumented the input format and processing function\nFuel data entered for 7 replicates\n\n\n\n2023-05-23\n\nwork on development environment for coding\n\n\n\n2023-05-22\n\nInitialized project as a quarto book\n\nlearning to use Quarto building analysis website\nset up GitHub repository\nstart log to track progress"
  }
]